	component PCIE_HIP_FDAS_mm_rd_transparent_0 is
		generic (
			DATA_WIDTH       : integer := 512;
			BYTE_SIZE        : integer := 8;
			ADDRESS_WIDTH    : integer := 26;
			BURSTCOUNT_WIDTH : integer := 4
		);
		port (
			clk              : in  std_logic                                                 := 'X';             -- clk
			reset            : in  std_logic                                                 := 'X';             -- reset
			s0_waitrequest   : out std_logic;                                                                    -- waitrequest
			s0_readdata      : out std_logic_vector((((DATA_WIDTH-1)-0)+1)-1 downto 0);                          -- readdata
			s0_readdatavalid : out std_logic;                                                                    -- readdatavalid
			s0_response      : out std_logic_vector(1 downto 0);                                                 -- response
			s0_burstcount    : in  std_logic_vector((((BURSTCOUNT_WIDTH-1)-0)+1)-1 downto 0) := (others => 'X'); -- burstcount
			s0_address       : in  std_logic_vector((((ADDRESS_WIDTH-1)-0)+1)-1 downto 0)    := (others => 'X'); -- address
			s0_read          : in  std_logic                                                 := 'X';             -- read
			m0_waitrequest   : in  std_logic                                                 := 'X';             -- waitrequest
			m0_readdata      : in  std_logic_vector((((DATA_WIDTH-1)-0)+1)-1 downto 0)       := (others => 'X'); -- readdata
			m0_readdatavalid : in  std_logic                                                 := 'X';             -- readdatavalid
			m0_response      : in  std_logic_vector(1 downto 0)                              := (others => 'X'); -- response
			m0_burstcount    : out std_logic_vector((((BURSTCOUNT_WIDTH-1)-0)+1)-1 downto 0);                    -- burstcount
			m0_address       : out std_logic_vector((((ADDRESS_WIDTH-1)-0)+1)-1 downto 0);                       -- address
			m0_read          : out std_logic                                                                     -- read
		);
	end component PCIE_HIP_FDAS_mm_rd_transparent_0;

