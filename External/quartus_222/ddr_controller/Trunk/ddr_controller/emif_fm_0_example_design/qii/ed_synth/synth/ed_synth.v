// ed_synth.v

// Generated using ACDS version 22.2 94

`timescale 1 ps / 1 ps
module ed_synth (
		input  wire        emif_fm_0_pll_ref_clk_clk,          // emif_fm_0_pll_ref_clk.clk
		input  wire        emif_fm_0_oct_oct_rzqin,            //         emif_fm_0_oct.oct_rzqin
		output wire [0:0]  emif_fm_0_mem_mem_ck,               //         emif_fm_0_mem.mem_ck
		output wire [0:0]  emif_fm_0_mem_mem_ck_n,             //                      .mem_ck_n
		output wire [16:0] emif_fm_0_mem_mem_a,                //                      .mem_a
		output wire [0:0]  emif_fm_0_mem_mem_act_n,            //                      .mem_act_n
		output wire [1:0]  emif_fm_0_mem_mem_ba,               //                      .mem_ba
		output wire [1:0]  emif_fm_0_mem_mem_bg,               //                      .mem_bg
		output wire [0:0]  emif_fm_0_mem_mem_cke,              //                      .mem_cke
		output wire [0:0]  emif_fm_0_mem_mem_cs_n,             //                      .mem_cs_n
		output wire [0:0]  emif_fm_0_mem_mem_odt,              //                      .mem_odt
		output wire [0:0]  emif_fm_0_mem_mem_reset_n,          //                      .mem_reset_n
		output wire [0:0]  emif_fm_0_mem_mem_par,              //                      .mem_par
		input  wire [0:0]  emif_fm_0_mem_mem_alert_n,          //                      .mem_alert_n
		inout  wire [8:0]  emif_fm_0_mem_mem_dqs,              //                      .mem_dqs
		inout  wire [8:0]  emif_fm_0_mem_mem_dqs_n,            //                      .mem_dqs_n
		inout  wire [71:0] emif_fm_0_mem_mem_dq,               //                      .mem_dq
		inout  wire [8:0]  emif_fm_0_mem_mem_dbi_n,            //                      .mem_dbi_n
		output wire        emif_fm_0_status_local_cal_success, //      emif_fm_0_status.local_cal_success
		output wire        emif_fm_0_status_local_cal_fail,    //                      .local_cal_fail
		input  wire        local_reset_req,                    //       local_reset_req.local_reset_req
		output wire        local_reset_done,                   //    local_reset_status.local_reset_done
		output wire        emif_fm_0_tg_0_traffic_gen_pass,    //        emif_fm_0_tg_0.traffic_gen_pass
		output wire        emif_fm_0_tg_0_traffic_gen_fail,    //                      .traffic_gen_fail
		output wire        emif_fm_0_tg_0_traffic_gen_timeout  //                      .traffic_gen_timeout
	);

	wire           emif_cal_emif_calbus_clk_clk;                               // emif_cal:calbus_clk -> emif_fm_0:calbus_clk
	wire           emif_fm_0_emif_usr_clk_clk;                                 // emif_fm_0:emif_usr_clk -> [mm_interconnect_0:emif_fm_0_emif_usr_clk_clk, rst_controller:clk, tg:emif_usr_clk]
	wire           emif_fm_0_pll_ref_clk_out_clk;                              // emif_fm_0:pll_ref_clk_out -> local_reset_combiner:clk
	wire    [31:0] emif_cal_emif_calbus_0_calbus_wdata;                        // emif_cal:calbus_wdata_0 -> emif_fm_0:calbus_wdata
	wire    [19:0] emif_cal_emif_calbus_0_calbus_address;                      // emif_cal:calbus_address_0 -> emif_fm_0:calbus_address
	wire  [4095:0] emif_fm_0_emif_calbus_calbus_seq_param_tbl;                 // emif_fm_0:calbus_seq_param_tbl -> emif_cal:calbus_seq_param_tbl_0
	wire           emif_cal_emif_calbus_0_calbus_read;                         // emif_cal:calbus_read_0 -> emif_fm_0:calbus_read
	wire           emif_cal_emif_calbus_0_calbus_write;                        // emif_cal:calbus_write_0 -> emif_fm_0:calbus_write
	wire    [31:0] emif_fm_0_emif_calbus_calbus_rdata;                         // emif_fm_0:calbus_rdata -> emif_cal:calbus_rdata_0
	wire           local_reset_combiner_local_reset_req_out_0_local_reset_req; // local_reset_combiner:local_reset_req_out_0 -> emif_fm_0:local_reset_req
	wire           emif_fm_0_local_reset_status_local_reset_done;              // emif_fm_0:local_reset_done -> local_reset_combiner:local_reset_done_in_0
	wire           emif_fm_0_pll_locked_pll_locked;                            // emif_fm_0:pll_locked -> local_reset_combiner:reset_n
	wire           emif_fm_0_emif_usr_reset_n_reset;                           // emif_fm_0:emif_usr_reset_n -> [rst_controller:reset_in0, tg:emif_usr_reset_n]
	wire           ninit_done_ninit_done_reset;                                // ninit_done:ninit_done -> tg:ninit_done
	wire           tg_ctrl_amm_0_waitrequest;                                  // mm_interconnect_0:tg_ctrl_amm_0_waitrequest -> tg:amm_ready_0
	wire   [575:0] tg_ctrl_amm_0_readdata;                                     // mm_interconnect_0:tg_ctrl_amm_0_readdata -> tg:amm_readdata_0
	wire           tg_ctrl_amm_0_read;                                         // tg:amm_read_0 -> mm_interconnect_0:tg_ctrl_amm_0_read
	wire    [33:0] tg_ctrl_amm_0_address;                                      // tg:amm_address_0 -> mm_interconnect_0:tg_ctrl_amm_0_address
	wire    [71:0] tg_ctrl_amm_0_byteenable;                                   // tg:amm_byteenable_0 -> mm_interconnect_0:tg_ctrl_amm_0_byteenable
	wire           tg_ctrl_amm_0_readdatavalid;                                // mm_interconnect_0:tg_ctrl_amm_0_readdatavalid -> tg:amm_readdatavalid_0
	wire           tg_ctrl_amm_0_write;                                        // tg:amm_write_0 -> mm_interconnect_0:tg_ctrl_amm_0_write
	wire   [575:0] tg_ctrl_amm_0_writedata;                                    // tg:amm_writedata_0 -> mm_interconnect_0:tg_ctrl_amm_0_writedata
	wire     [6:0] tg_ctrl_amm_0_burstcount;                                   // tg:amm_burstcount_0 -> mm_interconnect_0:tg_ctrl_amm_0_burstcount
	wire   [575:0] mm_interconnect_0_emif_fm_0_ctrl_amm_0_readdata;            // emif_fm_0:amm_readdata_0 -> mm_interconnect_0:emif_fm_0_ctrl_amm_0_readdata
	wire           mm_interconnect_0_emif_fm_0_ctrl_amm_0_waitrequest;         // emif_fm_0:amm_ready_0 -> mm_interconnect_0:emif_fm_0_ctrl_amm_0_waitrequest
	wire    [26:0] mm_interconnect_0_emif_fm_0_ctrl_amm_0_address;             // mm_interconnect_0:emif_fm_0_ctrl_amm_0_address -> emif_fm_0:amm_address_0
	wire           mm_interconnect_0_emif_fm_0_ctrl_amm_0_read;                // mm_interconnect_0:emif_fm_0_ctrl_amm_0_read -> emif_fm_0:amm_read_0
	wire    [71:0] mm_interconnect_0_emif_fm_0_ctrl_amm_0_byteenable;          // mm_interconnect_0:emif_fm_0_ctrl_amm_0_byteenable -> emif_fm_0:amm_byteenable_0
	wire           mm_interconnect_0_emif_fm_0_ctrl_amm_0_readdatavalid;       // emif_fm_0:amm_readdatavalid_0 -> mm_interconnect_0:emif_fm_0_ctrl_amm_0_readdatavalid
	wire           mm_interconnect_0_emif_fm_0_ctrl_amm_0_write;               // mm_interconnect_0:emif_fm_0_ctrl_amm_0_write -> emif_fm_0:amm_write_0
	wire   [575:0] mm_interconnect_0_emif_fm_0_ctrl_amm_0_writedata;           // mm_interconnect_0:emif_fm_0_ctrl_amm_0_writedata -> emif_fm_0:amm_writedata_0
	wire     [6:0] mm_interconnect_0_emif_fm_0_ctrl_amm_0_burstcount;          // mm_interconnect_0:emif_fm_0_ctrl_amm_0_burstcount -> emif_fm_0:amm_burstcount_0
	wire           rst_controller_reset_out_reset;                             // rst_controller:reset_out -> mm_interconnect_0:tg_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset

	ed_synth_emif_cal emif_cal (
		.calbus_read_0          (emif_cal_emif_calbus_0_calbus_read),         //  output,     width = 1,   emif_calbus_0.calbus_read
		.calbus_write_0         (emif_cal_emif_calbus_0_calbus_write),        //  output,     width = 1,                .calbus_write
		.calbus_address_0       (emif_cal_emif_calbus_0_calbus_address),      //  output,    width = 20,                .calbus_address
		.calbus_wdata_0         (emif_cal_emif_calbus_0_calbus_wdata),        //  output,    width = 32,                .calbus_wdata
		.calbus_rdata_0         (emif_fm_0_emif_calbus_calbus_rdata),         //   input,    width = 32,                .calbus_rdata
		.calbus_seq_param_tbl_0 (emif_fm_0_emif_calbus_calbus_seq_param_tbl), //   input,  width = 4096,                .calbus_seq_param_tbl
		.calbus_clk             (emif_cal_emif_calbus_clk_clk)                //  output,     width = 1, emif_calbus_clk.clk
	);

	ed_synth_emif_fm_0 emif_fm_0 (
		.local_reset_req      (local_reset_combiner_local_reset_req_out_0_local_reset_req), //   input,     width = 1,    local_reset_req.local_reset_req
		.local_reset_done     (emif_fm_0_local_reset_status_local_reset_done),              //  output,     width = 1, local_reset_status.local_reset_done
		.pll_ref_clk          (emif_fm_0_pll_ref_clk_clk),                                  //   input,     width = 1,        pll_ref_clk.clk
		.pll_ref_clk_out      (emif_fm_0_pll_ref_clk_out_clk),                              //  output,     width = 1,    pll_ref_clk_out.clk
		.pll_locked           (emif_fm_0_pll_locked_pll_locked),                            //  output,     width = 1,         pll_locked.pll_locked
		.oct_rzqin            (emif_fm_0_oct_oct_rzqin),                                    //   input,     width = 1,                oct.oct_rzqin
		.mem_ck               (emif_fm_0_mem_mem_ck),                                       //  output,     width = 1,                mem.mem_ck
		.mem_ck_n             (emif_fm_0_mem_mem_ck_n),                                     //  output,     width = 1,                   .mem_ck_n
		.mem_a                (emif_fm_0_mem_mem_a),                                        //  output,    width = 17,                   .mem_a
		.mem_act_n            (emif_fm_0_mem_mem_act_n),                                    //  output,     width = 1,                   .mem_act_n
		.mem_ba               (emif_fm_0_mem_mem_ba),                                       //  output,     width = 2,                   .mem_ba
		.mem_bg               (emif_fm_0_mem_mem_bg),                                       //  output,     width = 2,                   .mem_bg
		.mem_cke              (emif_fm_0_mem_mem_cke),                                      //  output,     width = 1,                   .mem_cke
		.mem_cs_n             (emif_fm_0_mem_mem_cs_n),                                     //  output,     width = 1,                   .mem_cs_n
		.mem_odt              (emif_fm_0_mem_mem_odt),                                      //  output,     width = 1,                   .mem_odt
		.mem_reset_n          (emif_fm_0_mem_mem_reset_n),                                  //  output,     width = 1,                   .mem_reset_n
		.mem_par              (emif_fm_0_mem_mem_par),                                      //  output,     width = 1,                   .mem_par
		.mem_alert_n          (emif_fm_0_mem_mem_alert_n),                                  //   input,     width = 1,                   .mem_alert_n
		.mem_dqs              (emif_fm_0_mem_mem_dqs),                                      //   inout,     width = 9,                   .mem_dqs
		.mem_dqs_n            (emif_fm_0_mem_mem_dqs_n),                                    //   inout,     width = 9,                   .mem_dqs_n
		.mem_dq               (emif_fm_0_mem_mem_dq),                                       //   inout,    width = 72,                   .mem_dq
		.mem_dbi_n            (emif_fm_0_mem_mem_dbi_n),                                    //   inout,     width = 9,                   .mem_dbi_n
		.local_cal_success    (emif_fm_0_status_local_cal_success),                         //  output,     width = 1,             status.local_cal_success
		.local_cal_fail       (emif_fm_0_status_local_cal_fail),                            //  output,     width = 1,                   .local_cal_fail
		.emif_usr_reset_n     (emif_fm_0_emif_usr_reset_n_reset),                           //  output,     width = 1,   emif_usr_reset_n.reset_n
		.emif_usr_clk         (emif_fm_0_emif_usr_clk_clk),                                 //  output,     width = 1,       emif_usr_clk.clk
		.amm_ready_0          (mm_interconnect_0_emif_fm_0_ctrl_amm_0_waitrequest),         //  output,     width = 1,         ctrl_amm_0.waitrequest_n
		.amm_read_0           (mm_interconnect_0_emif_fm_0_ctrl_amm_0_read),                //   input,     width = 1,                   .read
		.amm_write_0          (mm_interconnect_0_emif_fm_0_ctrl_amm_0_write),               //   input,     width = 1,                   .write
		.amm_address_0        (mm_interconnect_0_emif_fm_0_ctrl_amm_0_address),             //   input,    width = 27,                   .address
		.amm_readdata_0       (mm_interconnect_0_emif_fm_0_ctrl_amm_0_readdata),            //  output,   width = 576,                   .readdata
		.amm_writedata_0      (mm_interconnect_0_emif_fm_0_ctrl_amm_0_writedata),           //   input,   width = 576,                   .writedata
		.amm_burstcount_0     (mm_interconnect_0_emif_fm_0_ctrl_amm_0_burstcount),          //   input,     width = 7,                   .burstcount
		.amm_byteenable_0     (mm_interconnect_0_emif_fm_0_ctrl_amm_0_byteenable),          //   input,    width = 72,                   .byteenable
		.amm_readdatavalid_0  (mm_interconnect_0_emif_fm_0_ctrl_amm_0_readdatavalid),       //  output,     width = 1,                   .readdatavalid
		.calbus_read          (emif_cal_emif_calbus_0_calbus_read),                         //   input,     width = 1,        emif_calbus.calbus_read
		.calbus_write         (emif_cal_emif_calbus_0_calbus_write),                        //   input,     width = 1,                   .calbus_write
		.calbus_address       (emif_cal_emif_calbus_0_calbus_address),                      //   input,    width = 20,                   .calbus_address
		.calbus_wdata         (emif_cal_emif_calbus_0_calbus_wdata),                        //   input,    width = 32,                   .calbus_wdata
		.calbus_rdata         (emif_fm_0_emif_calbus_calbus_rdata),                         //  output,    width = 32,                   .calbus_rdata
		.calbus_seq_param_tbl (emif_fm_0_emif_calbus_calbus_seq_param_tbl),                 //  output,  width = 4096,                   .calbus_seq_param_tbl
		.calbus_clk           (emif_cal_emif_calbus_clk_clk)                                //   input,     width = 1,    emif_calbus_clk.clk
	);

	ed_synth_local_reset_combiner local_reset_combiner (
		.local_reset_req_out_0 (local_reset_combiner_local_reset_req_out_0_local_reset_req), //  output,  width = 1,   local_reset_req_out_0.local_reset_req
		.local_reset_done_in_0 (emif_fm_0_local_reset_status_local_reset_done),              //   input,  width = 1, local_reset_status_in_0.local_reset_done
		.clk                   (emif_fm_0_pll_ref_clk_out_clk),                              //   input,  width = 1,             generic_clk.clk
		.reset_n               (emif_fm_0_pll_locked_pll_locked),                            //   input,  width = 1, generic_conduit_reset_n.pll_locked
		.local_reset_req       (local_reset_req),                                            //   input,  width = 1,         local_reset_req.local_reset_req
		.local_reset_done      (local_reset_done)                                            //  output,  width = 1,      local_reset_status.local_reset_done
	);

	ed_synth_ninit_done ninit_done (
		.ninit_done (ninit_done_ninit_done_reset)  //  output,  width = 1, ninit_done.reset
	);

	ed_synth_tg tg (
		.emif_usr_reset_n      (emif_fm_0_emif_usr_reset_n_reset),   //   input,    width = 1, emif_usr_reset_n.reset_n
		.ninit_done            (ninit_done_ninit_done_reset),        //   input,    width = 1,       ninit_done.reset
		.emif_usr_clk          (emif_fm_0_emif_usr_clk_clk),         //   input,    width = 1,     emif_usr_clk.clk
		.amm_ready_0           (~tg_ctrl_amm_0_waitrequest),         //   input,    width = 1,       ctrl_amm_0.waitrequest_n
		.amm_read_0            (tg_ctrl_amm_0_read),                 //  output,    width = 1,                 .read
		.amm_write_0           (tg_ctrl_amm_0_write),                //  output,    width = 1,                 .write
		.amm_address_0         (tg_ctrl_amm_0_address),              //  output,   width = 34,                 .address
		.amm_readdata_0        (tg_ctrl_amm_0_readdata),             //   input,  width = 576,                 .readdata
		.amm_writedata_0       (tg_ctrl_amm_0_writedata),            //  output,  width = 576,                 .writedata
		.amm_burstcount_0      (tg_ctrl_amm_0_burstcount),           //  output,    width = 7,                 .burstcount
		.amm_byteenable_0      (tg_ctrl_amm_0_byteenable),           //  output,   width = 72,                 .byteenable
		.amm_readdatavalid_0   (tg_ctrl_amm_0_readdatavalid),        //   input,    width = 1,                 .readdatavalid
		.traffic_gen_pass_0    (emif_fm_0_tg_0_traffic_gen_pass),    //  output,    width = 1,      tg_status_0.traffic_gen_pass
		.traffic_gen_fail_0    (emif_fm_0_tg_0_traffic_gen_fail),    //  output,    width = 1,                 .traffic_gen_fail
		.traffic_gen_timeout_0 (emif_fm_0_tg_0_traffic_gen_timeout)  //  output,    width = 1,                 .traffic_gen_timeout
	);

	ed_synth_altera_mm_interconnect_1920_2l4tnfq mm_interconnect_0 (
		.tg_ctrl_amm_0_address                                      (tg_ctrl_amm_0_address),                                //   input,   width = 34,                                        tg_ctrl_amm_0.address
		.tg_ctrl_amm_0_waitrequest                                  (tg_ctrl_amm_0_waitrequest),                            //  output,    width = 1,                                                     .waitrequest
		.tg_ctrl_amm_0_burstcount                                   (tg_ctrl_amm_0_burstcount),                             //   input,    width = 7,                                                     .burstcount
		.tg_ctrl_amm_0_byteenable                                   (tg_ctrl_amm_0_byteenable),                             //   input,   width = 72,                                                     .byteenable
		.tg_ctrl_amm_0_read                                         (tg_ctrl_amm_0_read),                                   //   input,    width = 1,                                                     .read
		.tg_ctrl_amm_0_readdata                                     (tg_ctrl_amm_0_readdata),                               //  output,  width = 576,                                                     .readdata
		.tg_ctrl_amm_0_readdatavalid                                (tg_ctrl_amm_0_readdatavalid),                          //  output,    width = 1,                                                     .readdatavalid
		.tg_ctrl_amm_0_write                                        (tg_ctrl_amm_0_write),                                  //   input,    width = 1,                                                     .write
		.tg_ctrl_amm_0_writedata                                    (tg_ctrl_amm_0_writedata),                              //   input,  width = 576,                                                     .writedata
		.emif_fm_0_ctrl_amm_0_address                               (mm_interconnect_0_emif_fm_0_ctrl_amm_0_address),       //  output,   width = 27,                                 emif_fm_0_ctrl_amm_0.address
		.emif_fm_0_ctrl_amm_0_write                                 (mm_interconnect_0_emif_fm_0_ctrl_amm_0_write),         //  output,    width = 1,                                                     .write
		.emif_fm_0_ctrl_amm_0_read                                  (mm_interconnect_0_emif_fm_0_ctrl_amm_0_read),          //  output,    width = 1,                                                     .read
		.emif_fm_0_ctrl_amm_0_readdata                              (mm_interconnect_0_emif_fm_0_ctrl_amm_0_readdata),      //   input,  width = 576,                                                     .readdata
		.emif_fm_0_ctrl_amm_0_writedata                             (mm_interconnect_0_emif_fm_0_ctrl_amm_0_writedata),     //  output,  width = 576,                                                     .writedata
		.emif_fm_0_ctrl_amm_0_burstcount                            (mm_interconnect_0_emif_fm_0_ctrl_amm_0_burstcount),    //  output,    width = 7,                                                     .burstcount
		.emif_fm_0_ctrl_amm_0_byteenable                            (mm_interconnect_0_emif_fm_0_ctrl_amm_0_byteenable),    //  output,   width = 72,                                                     .byteenable
		.emif_fm_0_ctrl_amm_0_readdatavalid                         (mm_interconnect_0_emif_fm_0_ctrl_amm_0_readdatavalid), //   input,    width = 1,                                                     .readdatavalid
		.emif_fm_0_ctrl_amm_0_waitrequest                           (~mm_interconnect_0_emif_fm_0_ctrl_amm_0_waitrequest),  //   input,    width = 1,                                                     .waitrequest
		.tg_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset (rst_controller_reset_out_reset),                       //   input,    width = 1, tg_ctrl_amm_0_translator_reset_reset_bridge_in_reset.reset
		.emif_fm_0_emif_usr_clk_clk                                 (emif_fm_0_emif_usr_clk_clk)                            //   input,    width = 1,                               emif_fm_0_emif_usr_clk.clk
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("both"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (~emif_fm_0_emif_usr_reset_n_reset), //   input,  width = 1, reset_in0.reset
		.clk            (emif_fm_0_emif_usr_clk_clk),        //   input,  width = 1,       clk.clk
		.reset_out      (rst_controller_reset_out_reset),    //  output,  width = 1, reset_out.reset
		.reset_req      (),                                  // (terminated),                       
		.reset_req_in0  (1'b0),                              // (terminated),                       
		.reset_in1      (1'b0),                              // (terminated),                       
		.reset_req_in1  (1'b0),                              // (terminated),                       
		.reset_in2      (1'b0),                              // (terminated),                       
		.reset_req_in2  (1'b0),                              // (terminated),                       
		.reset_in3      (1'b0),                              // (terminated),                       
		.reset_req_in3  (1'b0),                              // (terminated),                       
		.reset_in4      (1'b0),                              // (terminated),                       
		.reset_req_in4  (1'b0),                              // (terminated),                       
		.reset_in5      (1'b0),                              // (terminated),                       
		.reset_req_in5  (1'b0),                              // (terminated),                       
		.reset_in6      (1'b0),                              // (terminated),                       
		.reset_req_in6  (1'b0),                              // (terminated),                       
		.reset_in7      (1'b0),                              // (terminated),                       
		.reset_req_in7  (1'b0),                              // (terminated),                       
		.reset_in8      (1'b0),                              // (terminated),                       
		.reset_req_in8  (1'b0),                              // (terminated),                       
		.reset_in9      (1'b0),                              // (terminated),                       
		.reset_req_in9  (1'b0),                              // (terminated),                       
		.reset_in10     (1'b0),                              // (terminated),                       
		.reset_req_in10 (1'b0),                              // (terminated),                       
		.reset_in11     (1'b0),                              // (terminated),                       
		.reset_req_in11 (1'b0),                              // (terminated),                       
		.reset_in12     (1'b0),                              // (terminated),                       
		.reset_req_in12 (1'b0),                              // (terminated),                       
		.reset_in13     (1'b0),                              // (terminated),                       
		.reset_req_in13 (1'b0),                              // (terminated),                       
		.reset_in14     (1'b0),                              // (terminated),                       
		.reset_req_in14 (1'b0),                              // (terminated),                       
		.reset_in15     (1'b0),                              // (terminated),                       
		.reset_req_in15 (1'b0)                               // (terminated),                       
	);

endmodule
