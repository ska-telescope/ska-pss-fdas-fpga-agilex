----------------------------------------------------------------------------
-- Module Name:  fdas_top
--
-- Source Path:  fdas_top_lib/hdl/fdas_top.vhd
--
-- Created:
--          by - hastierj (COVNETICSDT15)
--          at - 13:43:12 24/03/2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.2a (Build 3)
----------------------------------------------------------------------------
--       __
--    ,/'__`\                             _     _
--   ,/ /  )_)   _   _   _   ___     __  | |__ (_)   __    ___
--   ( (    _  /' `\\ \ / //' _ `\ /'__`\|  __)| | /'__`)/',__)
--   '\ \__) )( (_) )\ ' / | ( ) |(  ___/| |_, | |( (___ \__, \
--    '\___,/  \___/  \_/  (_) (_)`\____)(___,)(_)`\___,)(____/
--
-- Copyright (c) Covnetics Limited 2020 All Rights Reserved. The information
-- contained herein remains the property of Covnetics Limited and may not be
-- copied or reproduced in any format or medium without the written consent
-- of Covnetics Limited.
--
----------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity fdas_top is
  generic( 
    ddr_g            : integer := 1;
    fft_g            : integer := 1024;
    fft_abits_g      : integer := 10;
    ifft_g           : integer := 1;
    ifft_loop_g      : integer := 1;
    ifft_loop_bits_g : integer := 1;
    summer_g         : integer := 1;
    harmonic_g       : integer := 8;
    product_id_g     : integer := 0;
    top_version_g    : integer := 0;
    top_revision_g   : integer := 0;
    core_version_g   : integer := 0;
    core_revision_g  : integer := 0;
    res_pages_g      : integer := 0
  );
  port( 
    CLK_PCIE_REF_0       : in     std_logic                      := '0';              -- refclk.clk
    CLK_PCIE_REF_1       : in     std_logic                      := '0';              -- refclk.clk
    MEM0_ALERT_N         : in     std_logic_vector (0 downto 0)  := (others => '0');  --                 .mem_alert_n
    MEM1_ALERT_N         : in     std_logic_vector (0 downto 0)  := (others => '0');  --                 .mem_alert_n
    MEM2_ALERT_N         : in     std_logic_vector (0 downto 0)  := (others => '0');
    MEM3_ALERT_N         : in     std_logic_vector (0 downto 0)  := (others => '0');
    OCT_RZQIN0           : in     std_logic                      := '0';              --              oct.oct_rzqin
    OCT_RZQIN1           : in     std_logic                      := '0';              --              oct.oct_rzqin
    OCT_RZQIN2           : in     std_logic                      := '0';
    OCT_RZQIN3           : in     std_logic                      := '0';
    PIN_PERST_N          : in     std_logic                      := '0';
    PLL_REF_CLK_0        : in     std_logic                      := '0';              --      pll_ref_clk_0.clk
    PLL_REF_CLK_1        : in     std_logic                      := '0';              --      pll_ref_clk_1.clk
    PLL_REF_CLK_2        : in     std_logic                      := '0';
    PLL_REF_CLK_3        : in     std_logic                      := '0';
    RX_IN0               : in     std_logic                      := '0';
    RX_IN0_N             : in     std_logic                      := '0';
    RX_IN1               : in     std_logic                      := '0';
    RX_IN10              : in     std_logic                      := '0';
    RX_IN10_N            : in     std_logic                      := '0';
    RX_IN11              : in     std_logic                      := '0';
    RX_IN11_N            : in     std_logic                      := '0';
    RX_IN12              : in     std_logic                      := '0';
    RX_IN12_N            : in     std_logic                      := '0';
    RX_IN13              : in     std_logic                      := '0';
    RX_IN13_N            : in     std_logic                      := '0';
    RX_IN14              : in     std_logic                      := '0';
    RX_IN14_N            : in     std_logic                      := '0';
    RX_IN15              : in     std_logic                      := '0';
    RX_IN15_N            : in     std_logic                      := '0';
    RX_IN1_N             : in     std_logic                      := '0';
    RX_IN2               : in     std_logic                      := '0';
    RX_IN2_N             : in     std_logic                      := '0';
    RX_IN3               : in     std_logic                      := '0';
    RX_IN3_N             : in     std_logic                      := '0';
    RX_IN4               : in     std_logic                      := '0';
    RX_IN4_N             : in     std_logic                      := '0';
    RX_IN5               : in     std_logic                      := '0';
    RX_IN5_N             : in     std_logic                      := '0';
    RX_IN6               : in     std_logic                      := '0';
    RX_IN6_N             : in     std_logic                      := '0';
    RX_IN7               : in     std_logic                      := '0';
    RX_IN7_N             : in     std_logic                      := '0';
    RX_IN8               : in     std_logic                      := '0';
    RX_IN8_N             : in     std_logic                      := '0';
    RX_IN9               : in     std_logic                      := '0';
    RX_IN9_N             : in     std_logic                      := '0';
    refclk_156m_qsfpdd_p : in     std_logic                      := '0';
    MEM0_A               : out    std_logic_vector (16 downto 0);                     --                 .mem_a
    MEM0_ACT_N           : out    std_logic_vector (0 downto 0);                      --                 .mem_act_n
    MEM0_BA              : out    std_logic_vector (1 downto 0);                      --                 .mem_ba
    MEM0_BG              : out    std_logic_vector (1 downto 0);                      --                 .mem_bg
    MEM0_CK              : out    std_logic_vector (0 downto 0);                      --              mem.mem_ck
    MEM0_CKE             : out    std_logic_vector (0 downto 0);                      --                 .mem_cke
    MEM0_CK_N            : out    std_logic_vector (0 downto 0);                      --                 .mem_ck_n
    MEM0_CS_N            : out    std_logic_vector (0 downto 0);                      --                 .mem_cs_n
    MEM0_ODT             : out    std_logic_vector (0 downto 0);                      --                 .mem_odt
    MEM0_PAR             : out    std_logic_vector (0 downto 0);                      --                 .mem_par
    MEM0_RESET_N         : out    std_logic_vector (0 downto 0);                      --                 .mem_reset_n
    MEM1_A               : out    std_logic_vector (16 downto 0);                     --                 .mem_a
    MEM1_ACT_N           : out    std_logic_vector (0 downto 0);                      --                 .mem_act_n
    MEM1_BA              : out    std_logic_vector (1 downto 0);                      --                 .mem_ba
    MEM1_BG              : out    std_logic_vector (1 downto 0);                      --                 .mem_bg
    MEM1_CK              : out    std_logic_vector (0 downto 0);                      --              mem.mem_ck
    MEM1_CKE             : out    std_logic_vector (0 downto 0);                      --                 .mem_cke
    MEM1_CK_N            : out    std_logic_vector (0 downto 0);                      --                 .mem_ck_n
    MEM1_CS_N            : out    std_logic_vector (0 downto 0);                      --                 .mem_cs_n
    MEM1_ODT             : out    std_logic_vector (0 downto 0);                      --                 .mem_odt
    MEM1_PAR             : out    std_logic_vector (0 downto 0);                      --                 .mem_par
    MEM1_RESET_N         : out    std_logic_vector (0 downto 0);                      --                 .mem_reset_n
    MEM2_A               : out    std_logic_vector (16 downto 0);
    MEM2_ACT_N           : out    std_logic_vector (0 downto 0);
    MEM2_BA              : out    std_logic_vector (1 downto 0);
    MEM2_BG              : out    std_logic_vector (1 downto 0);
    MEM2_CK              : out    std_logic_vector (0 downto 0);
    MEM2_CKE             : out    std_logic_vector (0 downto 0);
    MEM2_CK_N            : out    std_logic_vector (0 downto 0);
    MEM2_CS_N            : out    std_logic_vector (0 downto 0);
    MEM2_ODT             : out    std_logic_vector (0 downto 0);
    MEM2_PAR             : out    std_logic_vector (0 downto 0);
    MEM2_RESET_N         : out    std_logic_vector (0 downto 0);
    MEM3_A               : out    std_logic_vector (16 downto 0);
    MEM3_ACT_N           : out    std_logic_vector (0 downto 0);
    MEM3_BA              : out    std_logic_vector (1 downto 0);
    MEM3_BG              : out    std_logic_vector (1 downto 0);
    MEM3_CK              : out    std_logic_vector (0 downto 0);
    MEM3_CKE             : out    std_logic_vector (0 downto 0);
    MEM3_CK_N            : out    std_logic_vector (0 downto 0);
    MEM3_CS_N            : out    std_logic_vector (0 downto 0);
    MEM3_ODT             : out    std_logic_vector (0 downto 0);
    MEM3_PAR             : out    std_logic_vector (0 downto 0);
    MEM3_RESET_N         : out    std_logic_vector (0 downto 0);
    TX_OUT0              : out    std_logic;
    TX_OUT0_N            : out    std_logic;
    TX_OUT1              : out    std_logic;
    TX_OUT10             : out    std_logic;
    TX_OUT10_N           : out    std_logic;
    TX_OUT11             : out    std_logic;
    TX_OUT11_N           : out    std_logic;
    TX_OUT12             : out    std_logic;
    TX_OUT12_N           : out    std_logic;
    TX_OUT13             : out    std_logic;
    TX_OUT13_N           : out    std_logic;
    TX_OUT14             : out    std_logic;
    TX_OUT14_N           : out    std_logic;
    TX_OUT15             : out    std_logic;
    TX_OUT15_N           : out    std_logic;
    TX_OUT1_N            : out    std_logic;
    TX_OUT2              : out    std_logic;
    TX_OUT2_N            : out    std_logic;
    TX_OUT3              : out    std_logic;
    TX_OUT3_N            : out    std_logic;
    TX_OUT4              : out    std_logic;
    TX_OUT4_N            : out    std_logic;
    TX_OUT5              : out    std_logic;
    TX_OUT5_N            : out    std_logic;
    TX_OUT6              : out    std_logic;
    TX_OUT6_N            : out    std_logic;
    TX_OUT7              : out    std_logic;
    TX_OUT7_N            : out    std_logic;
    TX_OUT8              : out    std_logic;
    TX_OUT8_N            : out    std_logic;
    TX_OUT9              : out    std_logic;
    TX_OUT9_N            : out    std_logic;
    MEM0_DBI_N           : inout  std_logic_vector (8 downto 0)  := (others => '0');  --                 .mem_dbi_n
    MEM0_DQ              : inout  std_logic_vector (71 downto 0) := (others => '0');  --                 .mem_dq
    MEM0_DQS             : inout  std_logic_vector (8 downto 0)  := (others => '0');  --                 .mem_dqs
    MEM0_DQS_N           : inout  std_logic_vector (8 downto 0)  := (others => '0');  --                 .mem_dqs_n
    MEM1_DBI_N           : inout  std_logic_vector (8 downto 0)  := (others => '0');  --                 .mem_dbi_n
    MEM1_DQ              : inout  std_logic_vector (71 downto 0) := (others => '0');  --                 .mem_dq
    MEM1_DQS             : inout  std_logic_vector (8 downto 0)  := (others => '0');  --                 .mem_dqs
    MEM1_DQS_N           : inout  std_logic_vector (8 downto 0)  := (others => '0');  --                 .mem_dqs_n
    MEM2_DBI_N           : inout  std_logic_vector (8 downto 0)  := (others => '0');
    MEM2_DQ              : inout  std_logic_vector (71 downto 0) := (others => '0');
    MEM2_DQS             : inout  std_logic_vector (8 downto 0)  := (others => '0');
    MEM2_DQS_N           : inout  std_logic_vector (8 downto 0)  := (others => '0');
    MEM3_DBI_N           : inout  std_logic_vector (8 downto 0)  := (others => '0');
    MEM3_DQ              : inout  std_logic_vector (71 downto 0) := (others => '0');
    MEM3_DQS             : inout  std_logic_vector (8 downto 0)  := (others => '0');
    MEM3_DQS_N           : inout  std_logic_vector (8 downto 0)  := (others => '0')
  );

-- Declarations

end entity fdas_top ;
