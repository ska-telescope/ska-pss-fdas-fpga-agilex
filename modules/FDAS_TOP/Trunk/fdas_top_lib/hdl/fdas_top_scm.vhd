----------------------------------------------------------------------------
-- Module Name:  fdas_top
--
-- Source Path:  fdas_top_lib/hdl/fdas_top_scm.vhd
--
-- Created:
--          by - droogm (COVNETICSDT17)
--          at - 23:33:41 09/04/2023
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.2a (Build 3)
---------------------------------------------------------------------------
--       __
--    ,/'__`\                             _     _
--   ,/ /  )_)   _   _   _   ___     __  | |__ (_)   __    ___
--   ( (    _  /' `\\ \ / //' _ `\ /'__`\|  __)| | /'__`)/',__)
--   '\ \__) )( (_) )\ ' / | ( ) |(  ___/| |_, | |( (___ \__, \
--    '\___,/  \___/  \_/  (_) (_)`\____)(___,)(_)`\___,)(____/
--
-- Copyright (c) Covnetics Limited 2023 All Rights Reserved. The information
-- contained herein remains the property of Covnetics Limited and may not be
-- copied or reproduced in any format or medium without the written consent
-- of Covnetics Limited.
--
----------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library fdas_core_lib;
library fdas_top_lib;


architecture scm of fdas_top is

  -- Architecture declarations

  -- Internal signal declarations
  signal CLK_SYS                    : std_logic;                                           --       ctrl_amm_0.waitrequest_n
  signal amm_address_0_s            : std_logic_vector(31 downto 0);
  signal amm_address_1_s            : std_logic_vector(25 downto 0);
  signal amm_address_2_s            : std_logic_vector(31 downto 0)  := (others => '0');
  signal amm_address_3_s            : std_logic_vector(31 downto 0)  := (others => '0');
  signal amm_burstcount_0_s         : std_logic_vector(6 downto 0);
  signal amm_burstcount_1_s         : std_logic_vector(6 downto 0);
  signal amm_burstcount_2_s         : std_logic_vector(6 downto 0);
  signal amm_burstcount_3_s         : std_logic_vector(6 downto 0);
  signal amm_byte_en_0_s            : std_logic_vector(63 downto 0);
  signal amm_byte_en_1_s            : std_logic_vector(63 downto 0);
  signal amm_byte_en_2_s            : std_logic_vector(63 downto 0)  := (others => '0');
  signal amm_byte_en_3_s            : std_logic_vector(63 downto 0)  := (others => '0');
  signal amm_read_0_s               : std_logic;
  signal amm_read_1_s               : std_logic;
  signal amm_read_2_s               : std_logic;
  signal amm_read_3_s               : std_logic;
  signal amm_read_data_0_s          : std_logic_vector(511 downto 0);
  signal amm_read_data_2_s          : std_logic_vector(511 downto 0);
  signal amm_read_data_3_s          : std_logic_vector(511 downto 0);
  signal amm_read_data_valid_0_s    : std_logic;
  signal amm_read_data_valid_2_s    : std_logic;
  signal amm_read_data_valid_3_s    : std_logic;
  signal amm_ready_0_s              : std_logic;                                           --       ctrl_amm_0.waitrequest_n
  signal amm_ready_2_s              : std_logic;
  signal amm_ready_3_s              : std_logic;
  signal amm_wait_request_0_s       : std_logic;
  signal amm_wait_request_2_s       : std_logic;
  signal amm_wait_request_3_s       : std_logic;
  signal amm_write_0_s              : std_logic;
  signal amm_write_1_s              : std_logic;
  signal amm_write_2_s              : std_logic;
  signal amm_write_3_s              : std_logic;
  signal amm_write_data_0_s         : std_logic_vector(511 downto 0);
  signal amm_write_data_1_s         : std_logic_vector(511 downto 0);
  signal amm_write_data_2_s         : std_logic_vector(511 downto 0);
  signal amm_write_data_3_s         : std_logic_vector(511 downto 0);
  signal clk_ddr0_s                 : std_logic;
  signal clk_ddr2_s                 : std_logic;
  signal clk_ddr3_s                 : std_logic;
  signal clk_mc_s                   : std_logic;
  signal clk_pcie_ref_0_s           : std_logic;
  signal clk_pcie_ref_1_s           : std_logic;
  signal clk_pcie_s                 : std_logic;                                           -- pcie_hard_ip_macro_17_0_clock_bridge_0_out_clk.clk
  signal clk_sys_s                  : std_logic;
  signal ddr_0_cal_fail_s           : std_logic;                                           --                 .local_cal_fail
  signal ddr_0_cal_success_s        : std_logic;                                           --           status.local_cal_success
  signal ddr_0_reset_done_s         : std_logic;
  signal ddr_0_reset_s              : std_logic                      := '0';
  signal ddr_1_cal_fail_s           : std_logic;
  signal ddr_1_cal_success_s        : std_logic;
  signal ddr_1_reset_done_s         : std_logic;
  signal ddr_1_reset_s              : std_logic                      := '0';
  signal ddr_2_cal_fail_s           : std_logic;
  signal ddr_2_cal_success_s        : std_logic;
  signal ddr_2_reset_done_s         : std_logic;
  signal ddr_2_reset_s              : std_logic                      := '0';
  signal ddr_3_cal_fail_s           : std_logic;
  signal ddr_3_cal_success_s        : std_logic;
  signal ddr_3_reset_done_s         : std_logic;
  signal ddr_3_reset_s              : std_logic;
  signal ninit_done_s               : std_logic;                                           -- ninit_done
  signal rd_dma_0_address_s         : std_logic_vector(31 downto 0);                       -- rd_dma.address
  signal rd_dma_0_burstcount_s      : std_logic_vector(3 downto 0);                        -- .burstcount
  signal rd_dma_0_byteenable_s      : std_logic_vector(63 downto 0);                       -- .byteenable
  signal rd_dma_0_waitrequest_s     : std_logic                      := '0';               -- .waitrequest
  signal rd_dma_0_write_s           : std_logic;                                           -- .write
  signal rd_dma_0_writedata_s       : std_logic_vector(511 downto 0);                      -- .writedata
  signal rd_dma_1_waitrequest_s     : std_logic                      := '0';               -- .waitrequest
  signal rd_dma_2_address_s         : std_logic_vector(31 downto 0);
  signal rd_dma_2_byteenable_s      : std_logic_vector(63 downto 0);
  signal rd_dma_2_waitrequest_s     : std_logic;
  signal rd_dma_2_write_s           : std_logic;
  signal rd_dma_2_writedata_s       : std_logic_vector(511 downto 0);
  signal rd_dma_3_address_s         : std_logic_vector(31 downto 0);
  signal rd_dma_3_burstcount_s      : std_logic_vector(3 downto 0);
  signal rd_dma_3_byteenable_s      : std_logic_vector(63 downto 0);
  signal rd_dma_3_waitrequest_s     : std_logic;
  signal rd_dma_3_write_s           : std_logic;
  signal rd_dma_3_writedata_s       : std_logic_vector(511 downto 0);
  signal rd_dma_burstcount_s        : std_logic_vector(3 downto 0);
  signal rst_ddr0_n_s               : std_logic;
  signal rst_ddr2_n_s               : std_logic;
  signal rst_ddr3_s                 : std_logic;
  signal rst_ddr_0_gbl_n_s          : std_logic;
  signal rst_ddr_1_gbl_n_s          : std_logic;
  signal rst_ddr_2_gbl_n_s          : std_logic;
  signal rst_ddr_3_gbl_n_s          : std_logic;
  signal rst_mc_n_s                 : std_logic;
  signal rst_pcie_n_s               : std_logic;                                           -- pcie_hard_ip_macro_17_0_reset_bridge_0_out_reset.reset
  signal rst_pcie_s                 : std_logic;                                           -- pcie_hard_ip_macro_17_0_reset_bridge_0_out_reset.reset
  signal rxm_address_s              : std_logic_vector(21 downto 0);                       -- rxm.address
  signal rxm_byteenable_s           : std_logic_vector(3 downto 0);                        -- .byteenable
  signal rxm_read_s                 : std_logic;                                           -- .read
  signal rxm_readdata_s             : std_logic_vector(31 downto 0)  := (others => '0');   -- .readdata
  signal rxm_readdatavalid_s        : std_logic                      := '0';               -- .readdatavalid
  signal rxm_response_s             : std_logic_vector(1 downto 0);
  signal rxm_waitrequest_s          : std_logic                      := '0';               -- .waitrequest
  signal rxm_write_response_valid_s : std_logic;
  signal rxm_write_s                : std_logic;                                           -- .write
  signal rxm_writedata_s            : std_logic_vector(31 downto 0);                       -- .writedata
  signal top_revision_s             : std_logic_vector(15 downto 0);
  signal top_version_s              : std_logic_vector(15 downto 0);
  signal user_msix_data_s           : std_logic_vector(15 downto 0);
  signal user_msix_ready_s          : std_logic;
  signal user_msix_valid_s          : std_logic;
  signal wr_dma_0_address_s         : std_logic_vector(31 downto 0);                       -- wr_dma.address
  signal wr_dma_0_burstcount_s      : std_logic_vector(3 downto 0);                        -- .burstcount
  signal wr_dma_0_read_s            : std_logic;                                           -- .read
  signal wr_dma_0_readdata_s        : std_logic_vector(511 downto 0) := (others => '0');   -- .readdata
  signal wr_dma_0_readdatavalid_s   : std_logic                      := '0';               -- .readdatavalid
  signal wr_dma_0_response_s        : std_logic_vector(1 downto 0);
  signal wr_dma_0_waitrequest_s     : std_logic                      := '0';               -- .waitrequest
  signal wr_dma_1_readdata_s        : std_logic_vector(511 downto 0) := (others => '0');   -- .readdata
  signal wr_dma_1_readdatavalid_s   : std_logic                      := '0';               -- .readdatavalid
  signal wr_dma_1_response_s        : std_logic_vector(1 downto 0);
  signal wr_dma_1_waitrequest_s     : std_logic                      := '0';               -- .waitrequest
  signal wr_dma_2_address_s         : std_logic_vector(31 downto 0);
  signal wr_dma_2_burstcount_s      : std_logic_vector(3 downto 0);
  signal wr_dma_2_read_s            : std_logic;
  signal wr_dma_2_readdata_s        : std_logic_vector(511DOWNTO 0);
  signal wr_dma_2_readdatavalid_s   : std_logic;
  signal wr_dma_2_response_s        : std_logIc_vector(1 downto 0);
  signal wr_dma_2_waitrequest_s     : std_logic;
  signal wr_dma_3_address_s         : std_logic_vector(31 downto 0);
  signal wr_dma_3_burstcount_s      : std_logic_vector(3 downto 0);
  signal wr_dma_3_read_s            : std_logic;
  signal wr_dma_3_readdata_s        : std_logic_vector(511 downto 0);
  signal wr_dma_3_readdatavalid_s   : std_logic;
  signal wr_dma_3_response_s        : std_logic_vector(1 downto 0);
  signal wr_dma_3_waitrequest_s     : std_logic;


  -- Component Declarations
  component fdas_core
  generic (
    ddr_g             : natural;
    fft_g             : natural;
    fft_abits_g       : natural;
    ifft_g            : natural;
    ifft_loop_g       : natural;
    ifft_loop_bits_g  : natural;
    summer_g          : natural;
    harmonic_g        : natural;
    product_id_g      : natural;
    version_number_g  : natural;
    revision_number_g : natural;
    res_pages_g       : natural
  );
  port (
    AMM_READ_DATA0           : in     std_logic_vector (511 downto 0);
    AMM_READ_DATA2           : in     std_logic_vector (511 downto 0);
    AMM_READ_DATA3           : in     std_logic_vector (511 downto 0);
    AMM_READ_DATA_VALID0     : in     std_logic ;
    AMM_READ_DATA_VALID2     : in     std_logic ;
    AMM_READ_DATA_VALID3     : in     std_logic ;
    AMM_WAIT_REQUEST0        : in     std_logic ;
    AMM_WAIT_REQUEST2        : in     std_logic ;
    AMM_WAIT_REQUEST3        : in     std_logic ;
    CLK_DDR0                 : in     std_logic ;
    CLK_DDR2                 : in     std_logic ;
    CLK_DDR3                 : in     std_logic ;
    CLK_MC                   : in     std_logic ;
    CLK_PCIE                 : in     std_logic ;
    CLK_SYS                  : in     std_logic ;
    DDR_0_CAL_FAIL           : in     std_logic ;
    DDR_0_CAL_PASS           : in     std_logic ;
    DDR_0_RESET_DONE         : in     std_logic ;
    DDR_1_CAL_FAIL           : in     std_logic ;
    DDR_1_CAL_PASS           : in     std_logic ;
    DDR_1_RESET_DONE         : in     std_logic ;
    DDR_2_CAL_FAIL           : in     std_logic ;
    DDR_2_CAL_PASS           : in     std_logic ;
    DDR_2_RESET_DONE         : in     std_logic ;
    DDR_3_CAL_FAIL           : in     std_logic ;
    DDR_3_CAL_PASS           : in     std_logic ;
    DDR_3_RESET_DONE         : in     std_logic ;
    RD_DMA_0_ADDRESS         : in     std_logic_vector (31 downto 0);
    RD_DMA_0_BURST_COUNT     : in     std_logic_vector (3 downto 0);
    RD_DMA_0_BYTE_EN         : in     std_logic_vector (63 downto 0);
    RD_DMA_0_WRITE           : in     std_logic ;
    RD_DMA_0_WRITE_DATA      : in     std_logic_vector (511 downto 0);
    RD_DMA_2_ADDRESS         : in     std_logic_vector (31 downto 0);
    RD_DMA_2_BURST_COUNT     : in     std_logic_vector (3 downto 0);
    RD_DMA_2_BYTE_EN         : in     std_logic_vector (63 downto 0);
    RD_DMA_2_WRITE           : in     std_logic ;
    RD_DMA_2_WRITE_DATA      : in     std_logic_vector (511 downto 0);
    RD_DMA_3_ADDRESS         : in     std_logic_vector (31 downto 0);
    RD_DMA_3_BURST_COUNT     : in     std_logic_vector (3 downto 0);
    RD_DMA_3_BYTE_EN         : in     std_logic_vector (63 downto 0);
    RD_DMA_3_WRITE           : in     std_logic ;
    RD_DMA_3_WRITE_DATA      : in     std_logic_vector (511 downto 0);
    RST_DDR0_N               : in     std_logic ;
    RST_DDR2_N               : in     std_logic ;
    RST_DDR3_N               : in     std_logic ;
    RST_GLOBAL_N             : in     std_logic ;
    RST_MC_N                 : in     std_logic ;
    RST_PCIE_N               : in     std_logic ;
    RXM_ADDRESS              : in     std_logic_vector (21 downto 0);
    RXM_BYTE_ENABLE          : in     std_logic_vector (3 downto 0);
    RXM_READ                 : in     std_logic ;
    RXM_WRITE                : in     std_logic ;
    RXM_WRITE_DATA           : in     std_logic_vector (31 downto 0);
    TOP_REVISION             : in     std_logic_vector (15 downto 0);
    TOP_VERSION              : in     std_logic_vector (15 downto 0);
    USR_EVENT_MSIX_READY     : in     std_logic ;
    WR_DMA_0_ADDRESS         : in     std_logic_vector (31 downto 0);
    WR_DMA_0_BURST_COUNT     : in     std_logic_vector (3 downto 0);
    WR_DMA_0_READ            : in     std_logic ;
    WR_DMA_2_ADDRESS         : in     std_logic_vector (31 downto 0);
    WR_DMA_2_BURST_COUNT     : in     std_logic_vector (3 downto 0);
    WR_DMA_2_READ            : in     std_logic ;
    WR_DMA_3_ADDRESS         : in     std_logic_vector (31 downto 0);
    WR_DMA_3_BURST_COUNT     : in     std_logic_vector (3 downto 0);
    WR_DMA_3_READ            : in     std_logic ;
    AMM_ADDRESS0             : out    std_logic_vector (31 downto 0);
    AMM_ADDRESS2             : out    std_logic_vector (31 downto 0);
    AMM_ADDRESS3             : out    std_logic_vector (31 downto 0);
    AMM_BURSTCOUNT0          : out    std_logic_vector (6 downto 0);
    AMM_BURSTCOUNT2          : out    std_logic_vector (6 downto 0);
    AMM_BURSTCOUNT3          : out    std_logic_vector (6 downto 0);
    AMM_BYTE_EN0             : out    std_logic_vector (63 downto 0);
    AMM_BYTE_EN2             : out    std_logic_vector (63 downto 0);
    AMM_BYTE_EN3             : out    std_logic_vector (63 downto 0);
    AMM_READ0                : out    std_logic ;
    AMM_READ2                : out    std_logic ;
    AMM_READ3                : out    std_logic ;
    AMM_WRITE0               : out    std_logic ;
    AMM_WRITE2               : out    std_logic ;
    AMM_WRITE3               : out    std_logic ;
    AMM_WRITE_DATA0          : out    std_logic_vector (511 downto 0);
    AMM_WRITE_DATA2          : out    std_logic_vector (511 downto 0);
    AMM_WRITE_DATA3          : out    std_logic_vector (511 downto 0);
    DDR_0_RST_N              : out    std_logic ;
    DDR_1_RST_N              : out    std_logic ;
    DDR_2_RST_N              : out    std_logic ;
    DDR_3_RST_N              : out    std_logic ;
    RD_DMA_0_WAIT_REQUEST    : out    std_logic ;
    RD_DMA_2_WAIT_REQUEST    : out    std_logic ;
    RD_DMA_3_WAIT_REQUEST    : out    std_logic ;
    RXM_READ_DATA            : out    std_logic_vector (31 downto 0);
    RXM_READ_DATA_VALD       : out    std_logic ;
    RXM_RESPONSE             : out    std_logic_vector (1 downto 0);
    RXM_WAIT_REQUEST         : out    std_logic ;
    RXM_WRITE_RESPONSE_VALID : out    std_logic ;
    USR_EVENT_MSIX_DATA      : out    std_logic_vector (15 downto 0);
    USR_EVENT_MSIX_VALID     : out    std_logic ;
    WR_DMA_0_READ_DATA       : out    std_logic_vector (511 downto 0);
    WR_DMA_0_READ_DATA_VALID : out    std_logic ;
    WR_DMA_0_WAIT_REQUEST    : out    std_logic ;
    WR_DMA_2_READ_DATA       : out    std_logic_vector (511 downto 0);
    WR_DMA_2_READ_DATA_VALID : out    std_logic ;
    WR_DMA_2_WAIT_REQUEST    : out    std_logic ;
    WR_DMA_3_READ_DATA       : out    std_logic_vector (511 downto 0);
    WR_DMA_3_READ_DATA_VALID : out    std_logic ;
    WR_DMA_3_WAIT_REQUEST    : out    std_logic 
  );
  end component fdas_core;
  component reset_sync
  port (
    RST_N     : in     std_logic ;
    CLK       : in     std_logic ;
    RST_OUT_N : out    std_logic 
  );
  end component reset_sync;
  component fdas_clkgen
  port (
    CLK_OUT : out    std_logic ;        --       ctrl_amm_0.waitrequest_n
    CLK_REF : in     std_logic  := '0'; --                 .read
    RST     : in     std_logic  := '0'  --                 .read
  );
  end component fdas_clkgen;
  component fdas_ddr_controller_calibration
  port (
    LOCAL_RESET_REQ_2_I   : in     std_logic                       := '0';
    LOCAL_RESET_DONE_2_O  : out    std_logic ;
    PLL_REF_CLK_2_I       : in     std_logic                       := '0';
    OCT_RZQIN2_I          : in     std_logic                       := '0';
    MEM2_CK_O             : out    std_logic_vector (0 downto 0);
    MEM2_CK_N_O           : out    std_logic_vector (0 downto 0);
    MEM2_A_O              : out    std_logic_vector (16 downto 0);
    MEM2_ACT_N_O          : out    std_logic_vector (0 downto 0);
    MEM2_BA_O             : out    std_logic_vector (1 downto 0);
    MEM2_BG_O             : out    std_logic_vector (1 downto 0);
    MEM2_CKE_O            : out    std_logic_vector (0 downto 0);
    MEM2_CS_N_O           : out    std_logic_vector (0 downto 0);
    MEM2_ODT_O            : out    std_logic_vector (0 downto 0);
    MEM2_RESET_N_O        : out    std_logic_vector (0 downto 0);
    MEM2_PAR_O            : out    std_logic_vector (0 downto 0);
    MEM2_ALERT_N_I        : in     std_logic_vector (0 downto 0)   := (others => '0');
    MEM2_DQS_IO           : inout  std_logic_vector (8 downto 0)   := (others => '0');
    MEM2_DQS_N_IO         : inout  std_logic_vector (8 downto 0)   := (others => '0');
    MEM2_DQ_IO            : inout  std_logic_vector (71 downto 0)  := (others => '0');
    MEM2_DBI_N_IO         : inout  std_logic_vector (8 downto 0)   := (others => '0');
    LOCAL_CAL_SUCCESS_2_O : out    std_logic ;
    LOCAL_CAL_FAIL_2_O    : out    std_logic ;
    EMIF_USER_RESET_N_2_O : out    std_logic ;
    EMIF_USR_CLK_2_O      : out    std_logic ;
    AMM_READY_2_O         : out    std_logic ;
    AMM_READ_2_I          : in     std_logic                       := '0';
    AMM_WRITE_2_I         : in     std_logic                       := '0';
    AMM_ADDRESS_2_I       : in     std_logic_vector (25 downto 0)  := (others => '0');
    AMM_READDATA_2_O      : out    std_logic_vector (511 downto 0);
    AMM_WRITEDATA_2_I     : in     std_logic_vector (511 downto 0) := (others => '0');
    AMM_BURSTCOUNT_2_I    : in     std_logic_vector (6 downto 0)   := (others => '0');
    AMM_BYTEENABLE_2_I    : in     std_logic_vector (63 downto 0)  := (others => '0');
    AMM_READDATAVALID_2_O : out    std_logic ;
    LOCAL_RESET_REQ_3_I   : in     std_logic                       := '0';
    LOCAL_RESET_DONE_3_O  : out    std_logic ;
    PLL_REF_CLK_3_I       : in     std_logic                       := '0';
    OCT_RZQIN3_I          : in     std_logic                       := '0';
    MEM3_CK_O             : out    std_logic_vector (0 downto 0);
    MEM3_CK_N_O           : out    std_logic_vector (0 downto 0);
    MEM3_A_O              : out    std_logic_vector (16 downto 0);
    MEM3_ACT_N_O          : out    std_logic_vector (0 downto 0);
    MEM3_BA_O             : out    std_logic_vector (1 downto 0);
    MEM3_BG_O             : out    std_logic_vector (1 downto 0);
    MEM3_CKE_O            : out    std_logic_vector (0 downto 0);
    MEM3_CS_N_O           : out    std_logic_vector (0 downto 0);
    MEM3_ODT_O            : out    std_logic_vector (0 downto 0);
    MEM3_RESET_N_O        : out    std_logic_vector (0 downto 0);
    MEM3_PAR_O            : out    std_logic_vector (0 downto 0);
    MEM3_ALERT_N_I        : in     std_logic_vector (0 downto 0)   := (others => '0');
    MEM3_DQS_IO           : inout  std_logic_vector (8 downto 0)   := (others => '0');
    MEM3_DQS_N_IO         : inout  std_logic_vector (8 downto 0)   := (others => '0');
    MEM3_DQ_IO            : inout  std_logic_vector (71 downto 0)  := (others => '0');
    MEM3_DBI_N_IO         : inout  std_logic_vector (8 downto 0)   := (others => '0');
    LOCAL_CAL_SUCCESS_3_O : out    std_logic ;
    LOCAL_CAL_FAIL_3_O    : out    std_logic ;
    EMIF_USER_RESET_N_3_O : out    std_logic ;
    EMIF_USR_CLK_3_O      : out    std_logic ;
    AMM_READY_3_O         : out    std_logic ;
    AMM_READ_3_I          : in     std_logic                       := '0';
    AMM_WRITE_3_I         : in     std_logic                       := '0';
    AMM_ADDRESS_3_I       : in     std_logic_vector (25 downto 0)  := (others => '0');
    AMM_READDATA_3_O      : out    std_logic_vector (511 downto 0);
    AMM_WRITEDATA_3_I     : in     std_logic_vector (511 downto 0) := (others => '0');
    AMM_BURSTCOUNT_3_I    : in     std_logic_vector (6 downto 0)   := (others => '0');
    AMM_BYTEENABLE_3_I    : in     std_logic_vector (63 downto 0)  := (others => '0');
    AMM_READDATAVALID_3_O : out    std_logic 
  );
  end component fdas_ddr_controller_calibration;
  component fdas_ddr_controller_calibration_hps
  port (
    LOCAL_RESET_REQ_0_I   : in     std_logic                       := '0';
    LOCAL_RESET_DONE_0_O  : out    std_logic ;
    PLL_REF_CLK_0_I       : in     std_logic                       := '0';
    OCT_RZQIN0_I          : in     std_logic                       := '0';
    MEM0_CK_O             : out    std_logic_vector (0 downto 0);
    MEM0_CK_N_O           : out    std_logic_vector (0 downto 0);
    MEM0_A_O              : out    std_logic_vector (16 downto 0);
    MEM0_ACT_N_O          : out    std_logic_vector (0 downto 0);
    MEM0_BA_O             : out    std_logic_vector (1 downto 0);
    MEM0_BG_O             : out    std_logic_vector (1 downto 0);
    MEM0_CKE_O            : out    std_logic_vector (0 downto 0);
    MEM0_CS_N_O           : out    std_logic_vector (0 downto 0);
    MEM0_ODT_O            : out    std_logic_vector (0 downto 0);
    MEM0_RESET_N_O        : out    std_logic_vector (0 downto 0);
    MEM0_PAR_O            : out    std_logic_vector (0 downto 0);
    MEM0_ALERT_N_I        : in     std_logic_vector (0 downto 0)   := (others => '0');
    MEM0_DQS_IO           : inout  std_logic_vector (8 downto 0)   := (others => '0');
    MEM0_DQS_N_IO         : inout  std_logic_vector (8 downto 0)   := (others => '0');
    MEM0_DQ_IO            : inout  std_logic_vector (71 downto 0)  := (others => '0');
    MEM0_DBI_N_IO         : inout  std_logic_vector (8 downto 0)   := (others => '0');
    LOCAL_CAL_SUCCESS_0_O : out    std_logic ;
    LOCAL_CAL_FAIL_0_O    : out    std_logic ;
    EMIF_USER_RESET_N_0_O : out    std_logic ;
    EMIF_USR_CLK_0_O      : out    std_logic ;
    AMM_READY_0_O         : out    std_logic ;
    AMM_READ_0_I          : in     std_logic                       := '0';
    AMM_WRITE_0_I         : in     std_logic                       := '0';
    AMM_ADDRESS_0_I       : in     std_logic_vector (25 downto 0)  := (others => '0');
    AMM_READDATA_0_O      : out    std_logic_vector (511 downto 0);
    AMM_WRITEDATA_0_I     : in     std_logic_vector (511 downto 0) := (others => '0');
    AMM_BURSTCOUNT_0_I    : in     std_logic_vector (6 downto 0)   := (others => '0');
    AMM_BYTEENABLE_0_I    : in     std_logic_vector (63 downto 0)  := (others => '0');
    AMM_READDATAVALID_0_O : out    std_logic ;
    LOCAL_RESET_REQ_1_I   : in     std_logic                       := '0';
    LOCAL_RESET_DONE_1_O  : out    std_logic ;
    PLL_REF_CLK_1_I       : in     std_logic                       := '0';
    OCT_RZQIN1_I          : in     std_logic                       := '0';
    MEM1_CK_O             : out    std_logic_vector (0 downto 0);
    MEM1_CK_N_O           : out    std_logic_vector (0 downto 0);
    MEM1_A_O              : out    std_logic_vector (16 downto 0);
    MEM1_ACT_N_O          : out    std_logic_vector (0 downto 0);
    MEM1_BA_O             : out    std_logic_vector (1 downto 0);
    MEM1_BG_O             : out    std_logic_vector (1 downto 0);
    MEM1_CKE_O            : out    std_logic_vector (0 downto 0);
    MEM1_CS_N_O           : out    std_logic_vector (0 downto 0);
    MEM1_ODT_O            : out    std_logic_vector (0 downto 0);
    MEM1_RESET_N_O        : out    std_logic_vector (0 downto 0);
    MEM1_PAR_O            : out    std_logic_vector (0 downto 0);
    MEM1_ALERT_N_I        : in     std_logic_vector (0 downto 0)   := (others => '0');
    MEM1_DQS_IO           : inout  std_logic_vector (8 downto 0)   := (others => '0');
    MEM1_DQS_N_IO         : inout  std_logic_vector (8 downto 0)   := (others => '0');
    MEM1_DQ_IO            : inout  std_logic_vector (71 downto 0)  := (others => '0');
    MEM1_DBI_N_IO         : inout  std_logic_vector (8 downto 0)   := (others => '0');
    LOCAL_CAL_SUCCESS_1_O : out    std_logic ;
    LOCAL_CAL_FAIL_1_O    : out    std_logic ;
    EMIF_USER_RESET_N_1_O : out    std_logic ;
    EMIF_USR_CLK_1_O      : out    std_logic ;
    AMM_READY_1_O         : out    std_logic ;
    AMM_READ_1_I          : in     std_logic                       := '0';
    AMM_WRITE_1_I         : in     std_logic                       := '0';
    AMM_ADDRESS_1_I       : in     std_logic_vector (25 downto 0)  := (others => '0');
    AMM_READDATA_1_O      : out    std_logic_vector (511 downto 0);
    AMM_WRITEDATA_1_I     : in     std_logic_vector (511 downto 0) := (others => '0');
    AMM_BURSTCOUNT_1_I    : in     std_logic_vector (6 downto 0)   := (others => '0');
    AMM_BYTEENABLE_1_I    : in     std_logic_vector (63 downto 0)  := (others => '0');
    AMM_READDATAVALID_1_O : out    std_logic 
  );
  end component fdas_ddr_controller_calibration_hps;
  component fdas_pcie
  port (
    CLK_PCIE_O                 : out    std_logic ;
    RD_DMA_0_ADDRESS_O         : out    std_logic_vector (25 downto 0);
    RD_DMA_0_WRITE_O           : out    std_logic ;
    RD_DMA_0_WRITEDATA_O       : out    std_logic_vector (511 downto 0);
    RD_DMA_0_WAITREQUEST_I     : in     std_logic ;
    RD_DMA_0_BURSTCOUNT_O      : out    std_logic_vector (3 downto 0);
    RD_DMA_0_BYTEENABLE_O      : out    std_logic_vector (63 downto 0);
    RD_DMA_1_ADDRESS_O         : out    std_logic_vector (25 downto 0);
    RD_DMA_1_WRITE_O           : out    std_logic ;
    RD_DMA_1_WRITEDATA_O       : out    std_logic_vector (511 downto 0);
    RD_DMA_1_WAITREQUEST_I     : in     std_logic ;
    RD_DMA_1_BURSTCOUNT_O      : out    std_logic_vector (3 downto 0);
    RD_DMA_1_BYTEENABLE_O      : out    std_logic_vector (63 downto 0);
    WR_DMA_0_ADDRESS_O         : out    std_logic_vector (25 downto 0);
    WR_DMA_0_READ_O            : out    std_logic ;
    WR_DMA_0_RESPONSE_I        : in     std_logic_vector (1 downto 0);
    WR_DMA_0_READDATA_I        : in     std_logic_vector (511 downto 0);
    WR_DMA_0_WAITREQUEST_I     : in     std_logic ;
    WR_DMA_0_BURSTCOUNT_O      : out    std_logic_vector (3 downto 0);
    WR_DMA_0_READDATAVALID_I   : in     std_logic ;
    WR_DMA_1_ADDRESS_O         : out    std_logic_vector (25 downto 0);
    WR_DMA_1_READ_O            : out    std_logic ;
    WR_DMA_1_RESPONSE_I        : in     std_logic_vector (1 downto 0);
    WR_DMA_1_READDATA_I        : in     std_logic_vector (511 downto 0);
    WR_DMA_1_WAITREQUEST_I     : in     std_logic ;
    WR_DMA_1_BURSTCOUNT_O      : out    std_logic_vector (3 downto 0);
    WR_DMA_1_READDATAVALID_I   : in     std_logic ;
    RXM_WAITREQUEST_I          : in     std_logic ;
    RXM_ADDRESS_O              : out    std_logic_vector (21 downto 0);
    RXM_BYTEENABLE_O           : out    std_logic_vector (3 downto 0);
    RXM_READ_O                 : out    std_logic ;
    RXM_READDATA_I             : in     std_logic_vector (31 downto 0);
    RXM_READDATAVALID_I        : in     std_logic ;
    RXM_WRITE_O                : out    std_logic ;
    RXM_WRITEDATA_O            : out    std_logic_vector (31 downto 0);
    RXM_RESPONSE_I             : in     std_logic_vector (1 downto 0);
    RXM_WRITE_RESPONSE_VALID_I : in     std_logic ;
    RX_IN0                     : in     std_logic ;
    RX_IN1                     : in     std_logic ;
    RX_IN2                     : in     std_logic ;
    RX_IN3                     : in     std_logic ;
    RX_IN4                     : in     std_logic ;
    RX_IN5                     : in     std_logic ;
    RX_IN6                     : in     std_logic ;
    RX_IN7                     : in     std_logic ;
    RX_IN8                     : in     std_logic ;
    RX_IN9                     : in     std_logic ;
    RX_IN10                    : in     std_logic ;
    RX_IN11                    : in     std_logic ;
    RX_IN12                    : in     std_logic ;
    RX_IN13                    : in     std_logic ;
    RX_IN14                    : in     std_logic ;
    RX_IN15                    : in     std_logic ;
    RX_IN0_N                   : in     std_logic ;
    RX_IN1_N                   : in     std_logic ;
    RX_IN2_N                   : in     std_logic ;
    RX_IN3_N                   : in     std_logic ;
    RX_IN4_N                   : in     std_logic ;
    RX_IN5_N                   : in     std_logic ;
    RX_IN6_N                   : in     std_logic ;
    RX_IN7_N                   : in     std_logic ;
    RX_IN8_N                   : in     std_logic ;
    RX_IN9_N                   : in     std_logic ;
    RX_IN10_N                  : in     std_logic ;
    RX_IN11_N                  : in     std_logic ;
    RX_IN12_N                  : in     std_logic ;
    RX_IN13_N                  : in     std_logic ;
    RX_IN14_N                  : in     std_logic ;
    RX_IN15_N                  : in     std_logic ;
    TX_OUT0                    : out    std_logic ;
    TX_OUT1                    : out    std_logic ;
    TX_OUT2                    : out    std_logic ;
    TX_OUT3                    : out    std_logic ;
    TX_OUT4                    : out    std_logic ;
    TX_OUT5                    : out    std_logic ;
    TX_OUT6                    : out    std_logic ;
    TX_OUT7                    : out    std_logic ;
    TX_OUT8                    : out    std_logic ;
    TX_OUT9                    : out    std_logic ;
    TX_OUT10                   : out    std_logic ;
    TX_OUT11                   : out    std_logic ;
    TX_OUT12                   : out    std_logic ;
    TX_OUT13                   : out    std_logic ;
    TX_OUT14                   : out    std_logic ;
    TX_OUT15                   : out    std_logic ;
    TX_OUT0_N                  : out    std_logic ;
    TX_OUT1_N                  : out    std_logic ;
    TX_OUT2_N                  : out    std_logic ;
    TX_OUT3_N                  : out    std_logic ;
    TX_OUT4_N                  : out    std_logic ;
    TX_OUT5_N                  : out    std_logic ;
    TX_OUT6_N                  : out    std_logic ;
    TX_OUT7_N                  : out    std_logic ;
    TX_OUT8_N                  : out    std_logic ;
    TX_OUT9_N                  : out    std_logic ;
    TX_OUT10_N                 : out    std_logic ;
    TX_OUT11_N                 : out    std_logic ;
    TX_OUT12_N                 : out    std_logic ;
    TX_OUT13_N                 : out    std_logic ;
    TX_OUT14_N                 : out    std_logic ;
    TX_OUT15_N                 : out    std_logic ;
    USER_MSIX_VALID_I          : in     std_logic ;
    USER_MSIX_READY_O          : out    std_logic ;
    USER_MSIX_DATA_I           : in     std_logic_vector (15 downto 0);
    PIN_PERST_I                : in     std_logic ;
    CLK_REF_I_0                : in     std_logic ;
    CLK_REF_I_1                : in     std_logic ;
    RST_PCIE_N_O               : out    std_logic ;
    NINIT_DONE_I               : in     std_logic ;
    WR_DMA_2_WAITREQUEST_I     : in     std_logic ;
    WR_DMA_2_READDATA_I        : in     std_logic_vector (511DOWNTO 0);
    WR_DMA_2_READDATAVALID_I   : in     std_logic ;
    WR_DMA_2_RESPONSE_I        : in     std_logIc_vector (1 downto 0);
    RD_DMA_2_WAITREQUEST_I     : in     std_logic ;
    WR_DMA_3_READDATAVALID_I   : in     std_logic ;
    RD_DMA_3_BURSTCOUNT_O      : out    std_logic_vector (3 downto 0);
    RD_DMA_3_BYTEENABLE_O      : out    std_logic_vector (63 downto 0);
    WR_DMA_3_WAITREQUEST_I     : in     std_logic ;
    WR_DMA_3_READDATA_I        : in     std_logic_vector (511 downto 0);
    WR_DMA_3_ADDRESS_O         : out    std_logic_vector (25 downto 0);
    RD_DMA_3_WAITREQUEST_I     : in     std_logic ;
    WR_DMA_2_BURSTCOUNT_O      : out    std_logic_vector (3 downto 0);
    RD_DMA_2_WRITEDATA_O       : out    std_logic_vector (511 downto 0);
    RD_DMA_2_BURSTCOUNT_O      : out    std_logic_vector (3 downto 0);
    RD_DMA_2_WRITE_O           : out    std_logic ;
    WR_DMA_3_BURSTCOUNT_O      : out    std_logic_vector (3 downto 0);
    WR_DMA_3_RESPONSE_I        : in     std_logic_vector (1 downto 0);
    RD_DMA_3_ADDRESS_O         : out    std_logic_vector (25 downto 0);
    RD_DMA_3_WRITE_O           : out    std_logic ;
    RD_DMA_3_WRITEDATA_O       : out    std_logic_vector (511 downto 0);
    WR_DMA_3_READ_O            : out    std_logic ;
    RD_DMA_2_BYTEENABLE_O      : out    std_logic_vector (63 downto 0);
    RD_DMA_2_ADDRESS_O         : out    std_logic_vector (25 downto 0);
    WR_DMA_2_READ_O            : out    std_logic ;
    WR_DMA_2_ADDRESS_O         : out    std_logic_vector (25DOWNTO 0)
  );
  end component fdas_pcie;
  component fdas_reset_release
  port (
    NINIT_DONE : out    std_logic  -- ninit_done
  );
  end component fdas_reset_release;

  -- Optional embedded configurations
  -- pragma synthesis_off
  for all : fdas_clkgen use entity fdas_top_lib.fdas_clkgen;
  for all : fdas_core use entity fdas_core_lib.fdas_core;
  for all : fdas_ddr_controller_calibration use entity fdas_top_lib.fdas_ddr_controller_calibration;
  for all : fdas_ddr_controller_calibration_hps use entity fdas_top_lib.fdas_ddr_controller_calibration_hps;
  for all : fdas_pcie use entity fdas_top_lib.fdas_pcie;
  for all : fdas_reset_release use entity fdas_top_lib.fdas_reset_release;
  for all : reset_sync use entity fdas_core_lib.reset_sync;
  -- pragma synthesis_on


begin
  -- Architecture concurrent statements
  -- HDL Embedded Text Block 2 eb2
  -- eb2 2
  clk_pcie_ref_0_s <= CLK_PCIE_REF_0;                                        
  clk_pcie_ref_1_s <= CLK_PCIE_REF_1;                                        

  -- HDL Embedded Text Block 3 eb3
  -- eb3 3
  
  wr_dma_0_address_s(5 downto 0) <= (others => '0');
  rd_dma_0_address_s(5 downto 0) <= (others => '0');
  wr_dma_2_address_s(5 downto 0) <= (others => '0');
  rd_dma_2_address_s(5 downto 0) <= (others => '0');
  wr_dma_3_address_s(5 downto 0) <= (others => '0');
  rd_dma_3_address_s(5 downto 0) <= (others => '0');
  wr_dma_0_response_s(1 downto 0) <= (others => '0');
  wr_dma_1_response_s(1 downto 0) <= (others => '0');
  wr_dma_2_response_s(1 downto 0) <= (others => '0');
  wr_dma_3_response_s(1 downto 0) <= (others => '0');
  wr_dma_1_waitrequest_s <= '0';
  wr_dma_1_readdata_s(511 downto 0) <= (others => '0');
  wr_dma_1_readdatavalid_s <= '0';
  rd_dma_1_waitrequest_s <= '0';
                                          
  
  

  -- HDL Embedded Text Block 4 eb4
  -- eb4 4
  clk_sys_s <= CLK_SYS;
  clk_mc_s <= CLK_SYS;                                        

  -- HDL Embedded Text Block 6 eb6
  -- eb6 6
  rst_pcie_s <= not rst_pcie_n_s;                                        

  -- HDL Embedded Text Block 7 eb7
  -- eb7 7 
  amm_wait_request_0_s <= not amm_ready_0_s;
  amm_wait_request_2_s <= not amm_ready_2_s;
  amm_wait_request_3_s <= not amm_ready_3_s;
  amm_read_1_s <= '0';
  amm_address_1_s <= (others => '0');
  amm_write_1_s <= '0';
  amm_write_data_1_s <= (others => '0');
  amm_byte_en_1_s <= (others => '0');
  amm_burstcount_1_s <= (others => '0');
  
  ddr_0_reset_s <= not rst_ddr_0_gbl_n_s;
  ddr_1_reset_s <= not rst_ddr_1_gbl_n_s;
  ddr_2_reset_s <= not rst_ddr_2_gbl_n_s;
  ddr_3_reset_s <= not rst_ddr_3_gbl_n_s;
   

  -- HDL Embedded Text Block 8 eb8
  -- eb8 8
  ass_top_v : top_version_s <= std_logic_vector(to_unsigned(top_version_g,16));
  ass_top_r : top_revision_s <= std_logic_vector(to_unsigned(top_revision_g,16));


  -- Instance port mappings.
  fdas_core_i : fdas_core
    generic map (
      ddr_g             => ddr_g,
      fft_g             => fft_g,
      fft_abits_g       => fft_abits_g,
      ifft_g            => ifft_g,
      ifft_loop_g       => ifft_loop_g,
      ifft_loop_bits_g  => ifft_loop_bits_g,
      summer_g          => summer_g,
      harmonic_g        => harmonic_g,
      product_id_g      => product_id_g,
      version_number_g  => core_version_g,
      revision_number_g => core_revision_g,
      res_pages_g       => res_pages_g
    )
    port map (
      AMM_READ_DATA0           => amm_read_data_0_s,
      AMM_READ_DATA2           => amm_read_data_2_s,
      AMM_READ_DATA3           => amm_read_data_3_s,
      AMM_READ_DATA_VALID0     => amm_read_data_valid_0_s,
      AMM_READ_DATA_VALID2     => amm_read_data_valid_2_s,
      AMM_READ_DATA_VALID3     => amm_read_data_valid_3_s,
      AMM_WAIT_REQUEST0        => amm_wait_request_0_s,
      AMM_WAIT_REQUEST2        => amm_wait_request_2_s,
      AMM_WAIT_REQUEST3        => amm_wait_request_3_s,
      CLK_DDR0                 => clk_ddr0_s,
      CLK_DDR2                 => clk_ddr2_s,
      CLK_DDR3                 => clk_ddr3_s,
      CLK_MC                   => clk_mc_s,
      CLK_PCIE                 => clk_pcie_s,
      CLK_SYS                  => clk_sys_s,
      DDR_0_CAL_FAIL           => ddr_0_cal_fail_s,
      DDR_0_CAL_PASS           => ddr_0_cal_success_s,
      DDR_0_RESET_DONE         => ddr_0_reset_done_s,
      DDR_1_CAL_FAIL           => ddr_1_cal_fail_s,
      DDR_1_CAL_PASS           => ddr_1_cal_success_s,
      DDR_1_RESET_DONE         => ddr_1_reset_done_s,
      DDR_2_CAL_FAIL           => ddr_2_cal_fail_s,
      DDR_2_CAL_PASS           => ddr_2_cal_success_s,
      DDR_2_RESET_DONE         => ddr_2_reset_done_s,
      DDR_3_CAL_FAIL           => ddr_3_cal_fail_s,
      DDR_3_CAL_PASS           => ddr_3_cal_success_s,
      DDR_3_RESET_DONE         => ddr_3_reset_done_s,
      RD_DMA_0_ADDRESS         => rd_dma_0_address_s,
      RD_DMA_0_BURST_COUNT     => rd_dma_0_burstcount_s,
      RD_DMA_0_BYTE_EN         => rd_dma_0_byteenable_s,
      RD_DMA_0_WRITE           => rd_dma_0_write_s,
      RD_DMA_0_WRITE_DATA      => rd_dma_0_writedata_s,
      RD_DMA_2_ADDRESS         => rd_dma_2_address_s,
      RD_DMA_2_BURST_COUNT     => rd_dma_burstcount_s,
      RD_DMA_2_BYTE_EN         => rd_dma_2_byteenable_s,
      RD_DMA_2_WRITE           => rd_dma_2_write_s,
      RD_DMA_2_WRITE_DATA      => rd_dma_2_writedata_s,
      RD_DMA_3_ADDRESS         => rd_dma_3_address_s,
      RD_DMA_3_BURST_COUNT     => rd_dma_3_burstcount_s,
      RD_DMA_3_BYTE_EN         => rd_dma_3_byteenable_s,
      RD_DMA_3_WRITE           => rd_dma_3_write_s,
      RD_DMA_3_WRITE_DATA      => rd_dma_3_writedata_s,
      RST_DDR0_N               => rst_ddr0_n_s,
      RST_DDR2_N               => rst_ddr2_n_s,
      RST_DDR3_N               => rst_ddr3_s,
      RST_GLOBAL_N             => rst_pcie_n_s,
      RST_MC_N                 => rst_mc_n_s,
      RST_PCIE_N               => rst_pcie_n_s,
      RXM_ADDRESS              => rxm_address_s,
      RXM_BYTE_ENABLE          => rxm_byteenable_s,
      RXM_READ                 => rxm_read_s,
      RXM_WRITE                => rxm_write_s,
      RXM_WRITE_DATA           => rxm_writedata_s,
      TOP_REVISION             => top_revision_s,
      TOP_VERSION              => top_version_s,
      USR_EVENT_MSIX_READY     => user_msix_ready_s,
      WR_DMA_0_ADDRESS         => wr_dma_0_address_s,
      WR_DMA_0_BURST_COUNT     => wr_dma_0_burstcount_s,
      WR_DMA_0_READ            => wr_dma_0_read_s,
      WR_DMA_2_ADDRESS         => wr_dma_2_address_s,
      WR_DMA_2_BURST_COUNT     => wr_dma_2_burstcount_s,
      WR_DMA_2_READ            => wr_dma_2_read_s,
      WR_DMA_3_ADDRESS         => wr_dma_3_address_s,
      WR_DMA_3_BURST_COUNT     => wr_dma_3_burstcount_s,
      WR_DMA_3_READ            => wr_dma_3_read_s,
      AMM_ADDRESS0             => amm_address_0_s,
      AMM_ADDRESS2             => amm_address_2_s,
      AMM_ADDRESS3             => amm_address_3_s,
      AMM_BURSTCOUNT0          => amm_burstcount_0_s,
      AMM_BURSTCOUNT2          => amm_burstcount_2_s,
      AMM_BURSTCOUNT3          => amm_burstcount_3_s,
      AMM_BYTE_EN0             => amm_byte_en_0_s,
      AMM_BYTE_EN2             => amm_byte_en_2_s,
      AMM_BYTE_EN3             => amm_byte_en_3_s,
      AMM_READ0                => amm_read_0_s,
      AMM_READ2                => amm_read_2_s,
      AMM_READ3                => amm_read_3_s,
      AMM_WRITE0               => amm_write_0_s,
      AMM_WRITE2               => amm_write_2_s,
      AMM_WRITE3               => amm_write_3_s,
      AMM_WRITE_DATA0          => amm_write_data_0_s,
      AMM_WRITE_DATA2          => amm_write_data_2_s,
      AMM_WRITE_DATA3          => amm_write_data_3_s,
      DDR_0_RST_N              => rst_ddr_0_gbl_n_s,
      DDR_1_RST_N              => rst_ddr_1_gbl_n_s,
      DDR_2_RST_N              => rst_ddr_2_gbl_n_s,
      DDR_3_RST_N              => rst_ddr_3_gbl_n_s,
      RD_DMA_0_WAIT_REQUEST    => rd_dma_0_waitrequest_s,
      RD_DMA_2_WAIT_REQUEST    => rd_dma_2_waitrequest_s,
      RD_DMA_3_WAIT_REQUEST    => rd_dma_3_waitrequest_s,
      RXM_READ_DATA            => rxm_readdata_s,
      RXM_READ_DATA_VALD       => rxm_readdatavalid_s,
      RXM_RESPONSE             => rxm_response_s,
      RXM_WAIT_REQUEST         => rxm_waitrequest_s,
      RXM_WRITE_RESPONSE_VALID => rxm_write_response_valid_s,
      USR_EVENT_MSIX_DATA      => user_msix_data_s,
      USR_EVENT_MSIX_VALID     => user_msix_valid_s,
      WR_DMA_0_READ_DATA       => wr_dma_0_readdata_s,
      WR_DMA_0_READ_DATA_VALID => wr_dma_0_readdatavalid_s,
      WR_DMA_0_WAIT_REQUEST    => wr_dma_0_waitrequest_s,
      WR_DMA_2_READ_DATA       => wr_dma_2_readdata_s,
      WR_DMA_2_READ_DATA_VALID => wr_dma_2_readdatavalid_s,
      WR_DMA_2_WAIT_REQUEST    => wr_dma_2_waitrequest_s,
      WR_DMA_3_READ_DATA       => wr_dma_3_readdata_s,
      WR_DMA_3_READ_DATA_VALID => wr_dma_3_readdatavalid_s,
      WR_DMA_3_WAIT_REQUEST    => wr_dma_3_waitrequest_s
    );
  rst_mc_i : reset_sync
    port map (
      RST_N     => rst_pcie_n_s,
      CLK       => clk_mc_s,
      RST_OUT_N => rst_mc_n_s
    );
  clkgen_i : fdas_clkgen
    port map (
      CLK_OUT => CLK_SYS,
      CLK_REF => clk_pcie_s,
      RST     => rst_pcie_s
    );
  ddr_controller_23 : fdas_ddr_controller_calibration
    port map (
      LOCAL_RESET_REQ_2_I   => ddr_2_reset_s,
      LOCAL_RESET_DONE_2_O  => ddr_2_reset_done_s,
      PLL_REF_CLK_2_I       => PLL_REF_CLK_2,
      OCT_RZQIN2_I          => OCT_RZQIN2,
      MEM2_CK_O             => MEM2_CK,
      MEM2_CK_N_O           => MEM2_CK_N,
      MEM2_A_O              => MEM2_A,
      MEM2_ACT_N_O          => MEM2_ACT_N,
      MEM2_BA_O             => MEM2_BA,
      MEM2_BG_O             => MEM2_BG,
      MEM2_CKE_O            => MEM2_CKE,
      MEM2_CS_N_O           => MEM2_CS_N,
      MEM2_ODT_O            => MEM2_ODT,
      MEM2_RESET_N_O        => MEM2_RESET_N,
      MEM2_PAR_O            => MEM2_PAR,
      MEM2_ALERT_N_I        => MEM2_ALERT_N,
      MEM2_DQS_IO           => MEM2_DQS,
      MEM2_DQS_N_IO         => MEM2_DQS_N,
      MEM2_DQ_IO            => MEM2_DQ,
      MEM2_DBI_N_IO         => MEM2_DBI_N,
      LOCAL_CAL_SUCCESS_2_O => ddr_2_cal_success_s,
      LOCAL_CAL_FAIL_2_O    => ddr_2_cal_fail_s,
      EMIF_USER_RESET_N_2_O => rst_ddr2_n_s,
      EMIF_USR_CLK_2_O      => clk_ddr2_s,
      AMM_READY_2_O         => amm_ready_2_s,
      AMM_READ_2_I          => amm_read_2_s,
      AMM_WRITE_2_I         => amm_write_2_s,
      AMM_ADDRESS_2_I       => amm_address_2_s(31 DOWNTO 6),
      AMM_READDATA_2_O      => amm_read_data_2_s,
      AMM_WRITEDATA_2_I     => amm_write_data_2_s,
      AMM_BURSTCOUNT_2_I    => amm_burstcount_2_s,
      AMM_BYTEENABLE_2_I    => amm_byte_en_2_s,
      AMM_READDATAVALID_2_O => amm_read_data_valid_2_s,
      LOCAL_RESET_REQ_3_I   => ddr_3_reset_s,
      LOCAL_RESET_DONE_3_O  => ddr_3_reset_done_s,
      PLL_REF_CLK_3_I       => PLL_REF_CLK_3,
      OCT_RZQIN3_I          => OCT_RZQIN3,
      MEM3_CK_O             => MEM3_CK,
      MEM3_CK_N_O           => MEM3_CK_N,
      MEM3_A_O              => MEM3_A,
      MEM3_ACT_N_O          => MEM3_ACT_N,
      MEM3_BA_O             => MEM3_BA,
      MEM3_BG_O             => MEM3_BG,
      MEM3_CKE_O            => MEM3_CKE,
      MEM3_CS_N_O           => MEM3_CS_N,
      MEM3_ODT_O            => MEM3_ODT,
      MEM3_RESET_N_O        => MEM3_RESET_N,
      MEM3_PAR_O            => MEM3_PAR,
      MEM3_ALERT_N_I        => MEM3_ALERT_N,
      MEM3_DQS_IO           => MEM3_DQS,
      MEM3_DQS_N_IO         => MEM3_DQS_N,
      MEM3_DQ_IO            => MEM3_DQ,
      MEM3_DBI_N_IO         => MEM3_DBI_N,
      LOCAL_CAL_SUCCESS_3_O => ddr_3_cal_success_s,
      LOCAL_CAL_FAIL_3_O    => ddr_3_cal_fail_s,
      EMIF_USER_RESET_N_3_O => rst_ddr3_s,
      EMIF_USR_CLK_3_O      => clk_ddr3_s,
      AMM_READY_3_O         => amm_ready_3_s,
      AMM_READ_3_I          => amm_read_3_s,
      AMM_WRITE_3_I         => amm_write_3_s,
      AMM_ADDRESS_3_I       => amm_address_3_s(31 DOWNTO 6),
      AMM_READDATA_3_O      => amm_read_data_3_s,
      AMM_WRITEDATA_3_I     => amm_write_data_3_s,
      AMM_BURSTCOUNT_3_I    => amm_burstcount_3_s,
      AMM_BYTEENABLE_3_I    => amm_byte_en_3_s,
      AMM_READDATAVALID_3_O => amm_read_data_valid_3_s
    );
  ddr_controller_01 : fdas_ddr_controller_calibration_hps
    port map (
      LOCAL_RESET_REQ_0_I   => ddr_0_reset_s,
      LOCAL_RESET_DONE_0_O  => ddr_0_reset_done_s,
      PLL_REF_CLK_0_I       => PLL_REF_CLK_0,
      OCT_RZQIN0_I          => OCT_RZQIN0,
      MEM0_CK_O             => MEM0_CK,
      MEM0_CK_N_O           => MEM0_CK_N,
      MEM0_A_O              => MEM0_A,
      MEM0_ACT_N_O          => MEM0_ACT_N,
      MEM0_BA_O             => MEM0_BA,
      MEM0_BG_O             => MEM0_BG,
      MEM0_CKE_O            => MEM0_CKE,
      MEM0_CS_N_O           => MEM0_CS_N,
      MEM0_ODT_O            => MEM0_ODT,
      MEM0_RESET_N_O        => MEM0_RESET_N,
      MEM0_PAR_O            => MEM0_PAR,
      MEM0_ALERT_N_I        => MEM0_ALERT_N,
      MEM0_DQS_IO           => MEM0_DQS,
      MEM0_DQS_N_IO         => MEM0_DQS_N,
      MEM0_DQ_IO            => MEM0_DQ,
      MEM0_DBI_N_IO         => MEM0_DBI_N,
      LOCAL_CAL_SUCCESS_0_O => ddr_0_cal_success_s,
      LOCAL_CAL_FAIL_0_O    => ddr_0_cal_fail_s,
      EMIF_USER_RESET_N_0_O => rst_ddr0_n_s,
      EMIF_USR_CLK_0_O      => clk_ddr0_s,
      AMM_READY_0_O         => amm_ready_0_s,
      AMM_READ_0_I          => amm_read_0_s,
      AMM_WRITE_0_I         => amm_write_0_s,
      AMM_ADDRESS_0_I       => amm_address_0_s(31 downto 6),
      AMM_READDATA_0_O      => amm_read_data_0_s,
      AMM_WRITEDATA_0_I     => amm_write_data_0_s,
      AMM_BURSTCOUNT_0_I    => amm_burstcount_0_s,
      AMM_BYTEENABLE_0_I    => amm_byte_en_0_s,
      AMM_READDATAVALID_0_O => amm_read_data_valid_0_s,
      LOCAL_RESET_REQ_1_I   => ddr_1_reset_s,
      LOCAL_RESET_DONE_1_O  => ddr_1_reset_done_s,
      PLL_REF_CLK_1_I       => PLL_REF_CLK_1,
      OCT_RZQIN1_I          => OCT_RZQIN1,
      MEM1_CK_O             => MEM1_CK,
      MEM1_CK_N_O           => MEM1_CK_N,
      MEM1_A_O              => MEM1_A,
      MEM1_ACT_N_O          => MEM1_ACT_N,
      MEM1_BA_O             => MEM1_BA,
      MEM1_BG_O             => MEM1_BG,
      MEM1_CKE_O            => MEM1_CKE,
      MEM1_CS_N_O           => MEM1_CS_N,
      MEM1_ODT_O            => MEM1_ODT,
      MEM1_RESET_N_O        => MEM1_RESET_N,
      MEM1_PAR_O            => MEM1_PAR,
      MEM1_ALERT_N_I        => MEM1_ALERT_N,
      MEM1_DQS_IO           => MEM1_DQS,
      MEM1_DQS_N_IO         => MEM1_DQS_N,
      MEM1_DQ_IO            => MEM1_DQ,
      MEM1_DBI_N_IO         => MEM1_DBI_N,
      LOCAL_CAL_SUCCESS_1_O => ddr_1_cal_success_s,
      LOCAL_CAL_FAIL_1_O    => ddr_1_cal_fail_s,
      EMIF_USER_RESET_N_1_O => open,
      EMIF_USR_CLK_1_O      => open,
      AMM_READY_1_O         => open,
      AMM_READ_1_I          => amm_read_1_s,
      AMM_WRITE_1_I         => amm_write_1_s,
      AMM_ADDRESS_1_I       => amm_address_1_s,
      AMM_READDATA_1_O      => open,
      AMM_WRITEDATA_1_I     => amm_write_data_1_s,
      AMM_BURSTCOUNT_1_I    => amm_burstcount_1_s,
      AMM_BYTEENABLE_1_I    => amm_byte_en_1_s,
      AMM_READDATAVALID_1_O => open
    );
  pcie_i : fdas_pcie
    port map (
      CLK_PCIE_O                 => clk_pcie_s,
      RD_DMA_0_ADDRESS_O         => rd_dma_0_address_s(31 downto 6),
      RD_DMA_0_WRITE_O           => rd_dma_0_write_s,
      RD_DMA_0_WRITEDATA_O       => rd_dma_0_writedata_s,
      RD_DMA_0_WAITREQUEST_I     => rd_dma_0_waitrequest_s,
      RD_DMA_0_BURSTCOUNT_O      => rd_dma_0_burstcount_s,
      RD_DMA_0_BYTEENABLE_O      => rd_dma_0_byteenable_s,
      RD_DMA_1_ADDRESS_O         => open,
      RD_DMA_1_WRITE_O           => open,
      RD_DMA_1_WRITEDATA_O       => open,
      RD_DMA_1_WAITREQUEST_I     => rd_dma_1_waitrequest_s,
      RD_DMA_1_BURSTCOUNT_O      => open,
      RD_DMA_1_BYTEENABLE_O      => open,
      WR_DMA_0_ADDRESS_O         => wr_dma_0_address_s(31 downto 6),
      WR_DMA_0_READ_O            => wr_dma_0_read_s,
      WR_DMA_0_RESPONSE_I        => wr_dma_0_response_s,
      WR_DMA_0_READDATA_I        => wr_dma_0_readdata_s,
      WR_DMA_0_WAITREQUEST_I     => wr_dma_0_waitrequest_s,
      WR_DMA_0_BURSTCOUNT_O      => wr_dma_0_burstcount_s,
      WR_DMA_0_READDATAVALID_I   => wr_dma_0_readdatavalid_s,
      WR_DMA_1_ADDRESS_O         => open,
      WR_DMA_1_READ_O            => open,
      WR_DMA_1_RESPONSE_I        => wr_dma_1_response_s,
      WR_DMA_1_READDATA_I        => wr_dma_1_readdata_s,
      WR_DMA_1_WAITREQUEST_I     => wr_dma_1_waitrequest_s,
      WR_DMA_1_BURSTCOUNT_O      => open,
      WR_DMA_1_READDATAVALID_I   => wr_dma_1_readdatavalid_s,
      RXM_WAITREQUEST_I          => rxm_waitrequest_s,
      RXM_ADDRESS_O              => rxm_address_s,
      RXM_BYTEENABLE_O           => rxm_byteenable_s,
      RXM_READ_O                 => rxm_read_s,
      RXM_READDATA_I             => rxm_readdata_s,
      RXM_READDATAVALID_I        => rxm_readdatavalid_s,
      RXM_WRITE_O                => rxm_write_s,
      RXM_WRITEDATA_O            => rxm_writedata_s,
      RXM_RESPONSE_I             => rxm_response_s,
      RXM_WRITE_RESPONSE_VALID_I => rxm_write_response_valid_s,
      RX_IN0                     => RX_IN0,
      RX_IN1                     => RX_IN1,
      RX_IN2                     => RX_IN2,
      RX_IN3                     => RX_IN3,
      RX_IN4                     => RX_IN4,
      RX_IN5                     => RX_IN5,
      RX_IN6                     => RX_IN6,
      RX_IN7                     => RX_IN7,
      RX_IN8                     => RX_IN8,
      RX_IN9                     => RX_IN9,
      RX_IN10                    => RX_IN10,
      RX_IN11                    => RX_IN11,
      RX_IN12                    => RX_IN12,
      RX_IN13                    => RX_IN13,
      RX_IN14                    => RX_IN14,
      RX_IN15                    => RX_IN15,
      RX_IN0_N                   => RX_IN0_N,
      RX_IN1_N                   => RX_IN1_N,
      RX_IN2_N                   => RX_IN2_N,
      RX_IN3_N                   => RX_IN3_N,
      RX_IN4_N                   => RX_IN4_N,
      RX_IN5_N                   => RX_IN5_N,
      RX_IN6_N                   => RX_IN6_N,
      RX_IN7_N                   => RX_IN7_N,
      RX_IN8_N                   => RX_IN8_N,
      RX_IN9_N                   => RX_IN9_N,
      RX_IN10_N                  => RX_IN10_N,
      RX_IN11_N                  => RX_IN11_N,
      RX_IN12_N                  => RX_IN12_N,
      RX_IN13_N                  => RX_IN13_N,
      RX_IN14_N                  => RX_IN14_N,
      RX_IN15_N                  => RX_IN15_N,
      TX_OUT0                    => TX_OUT0,
      TX_OUT1                    => TX_OUT1,
      TX_OUT2                    => TX_OUT2,
      TX_OUT3                    => TX_OUT3,
      TX_OUT4                    => TX_OUT4,
      TX_OUT5                    => TX_OUT5,
      TX_OUT6                    => TX_OUT6,
      TX_OUT7                    => TX_OUT7,
      TX_OUT8                    => TX_OUT8,
      TX_OUT9                    => TX_OUT9,
      TX_OUT10                   => TX_OUT10,
      TX_OUT11                   => TX_OUT11,
      TX_OUT12                   => TX_OUT12,
      TX_OUT13                   => TX_OUT13,
      TX_OUT14                   => TX_OUT14,
      TX_OUT15                   => TX_OUT15,
      TX_OUT0_N                  => TX_OUT0_N,
      TX_OUT1_N                  => TX_OUT1_N,
      TX_OUT2_N                  => TX_OUT2_N,
      TX_OUT3_N                  => TX_OUT3_N,
      TX_OUT4_N                  => TX_OUT4_N,
      TX_OUT5_N                  => TX_OUT5_N,
      TX_OUT6_N                  => TX_OUT6_N,
      TX_OUT7_N                  => TX_OUT7_N,
      TX_OUT8_N                  => TX_OUT8_N,
      TX_OUT9_N                  => TX_OUT9_N,
      TX_OUT10_N                 => TX_OUT10_N,
      TX_OUT11_N                 => TX_OUT11_N,
      TX_OUT12_N                 => TX_OUT12_N,
      TX_OUT13_N                 => TX_OUT13_N,
      TX_OUT14_N                 => TX_OUT14_N,
      TX_OUT15_N                 => TX_OUT15_N,
      USER_MSIX_VALID_I          => user_msix_valid_s,
      USER_MSIX_READY_O          => user_msix_ready_s,
      USER_MSIX_DATA_I           => user_msix_data_s,
      PIN_PERST_I                => PIN_PERST_N,
      CLK_REF_I_0                => clk_pcie_ref_0_s,
      CLK_REF_I_1                => clk_pcie_ref_1_s,
      RST_PCIE_N_O               => rst_pcie_n_s,
      NINIT_DONE_I               => ninit_done_s,
      WR_DMA_2_WAITREQUEST_I     => wr_dma_2_waitrequest_s,
      WR_DMA_2_READDATA_I        => wr_dma_2_readdata_s,
      WR_DMA_2_READDATAVALID_I   => wr_dma_2_readdatavalid_s,
      WR_DMA_2_RESPONSE_I        => wr_dma_2_response_s,
      RD_DMA_2_WAITREQUEST_I     => rd_dma_2_waitrequest_s,
      WR_DMA_3_READDATAVALID_I   => wr_dma_3_readdatavalid_s,
      RD_DMA_3_BURSTCOUNT_O      => rd_dma_3_burstcount_s,
      RD_DMA_3_BYTEENABLE_O      => rd_dma_3_byteenable_s,
      WR_DMA_3_WAITREQUEST_I     => wr_dma_3_waitrequest_s,
      WR_DMA_3_READDATA_I        => wr_dma_3_readdata_s,
      WR_DMA_3_ADDRESS_O         => wr_dma_3_address_s(31 DOWNTO 6),
      RD_DMA_3_WAITREQUEST_I     => rd_dma_3_waitrequest_s,
      WR_DMA_2_BURSTCOUNT_O      => wr_dma_2_burstcount_s,
      RD_DMA_2_WRITEDATA_O       => rd_dma_2_writedata_s,
      RD_DMA_2_BURSTCOUNT_O      => rd_dma_burstcount_s,
      RD_DMA_2_WRITE_O           => rd_dma_2_write_s,
      WR_DMA_3_BURSTCOUNT_O      => wr_dma_3_burstcount_s,
      WR_DMA_3_RESPONSE_I        => wr_dma_3_response_s,
      RD_DMA_3_ADDRESS_O         => rd_dma_3_address_s(31 DOWNTO 6),
      RD_DMA_3_WRITE_O           => rd_dma_3_write_s,
      RD_DMA_3_WRITEDATA_O       => rd_dma_3_writedata_s,
      WR_DMA_3_READ_O            => wr_dma_3_read_s,
      RD_DMA_2_BYTEENABLE_O      => rd_dma_2_byteenable_s,
      RD_DMA_2_ADDRESS_O         => rd_dma_2_address_s(31 DOWNTO 6),
      WR_DMA_2_READ_O            => wr_dma_2_read_s,
      WR_DMA_2_ADDRESS_O         => wr_dma_2_address_s(31 DOWNTO 6)
    );
  reset_release_i : fdas_reset_release
    port map (
      NINIT_DONE => ninit_done_s
    );

end architecture scm;
