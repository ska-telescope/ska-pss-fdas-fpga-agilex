----------------------------------------------------------------------------
-- Module Name:  hsumfilt
--
-- Source Path:  hsum_lib/hdl/hsumfilt.vhd
--
-- Created:
--          by - droogm (COVNETICSDT17)
--          at - 10:27:04 31/01/2024
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.2a (Build 3)
----------------------------------------------------------------------------
--       __
--    ,/'__`\                             _     _
--   ,/ /  )_)   _   _   _   ___     __  | |__ (_)   __    ___
--   ( (    _  /' `\\ \ / //' _ `\ /'__`\|  __)| | /'__`)/',__)
--   '\ \__) )( (_) )\ ' / | ( ) |(  ___/| |_, | |( (___ \__, \
--    '\___,/  \___/  \_/  (_) (_)`\____)(___,)(_)`\___,)(____/
--
-- Copyright (c) Covnetics Limited 2024 All Rights Reserved. The information
-- contained herein remains the property of Covnetics Limited and may not be
-- copied or reproduced in any format or medium without the written consent
-- of Covnetics Limited.
--
----------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;
library hsum_lib;
use hsum_lib.hsum_pkg.all;

entity hsumfilt is
  generic( 
    adder_latency_g : natural range 1 to 7;
    harmonic_g      : natural range 8 to 16    --Max number of harmonics that may be processed (including fundamental).
  );
  port( 
    -- Configuration.
    h             : in     std_logic_vector (3 downto 0);                                 -- Number of harmonics to process.
    a             : in     std_logic_vector (3 downto 0);                                 -- Number of orbital acceleration ambiguity slopes to process.
    t_filter_en   : in     std_logic;                                                     -- Filter enable.
    -- Inputs from SUMMER.
    tc_in         : in     std_logic_vector (last_column_c(harmonic_g-1)-1 downto 0);
    pwr_in        : in     std_logic_vector (last_column_c(harmonic_g-1)*32-1 downto 0);
    row_info_in   : in     std_logic_vector (harmonic_g*7-1 downto 0);
    last_result   : in     std_logic;
    -- Inputs from TGEN.
    seed_col      : in     std_logic_vector (21 downto 0);
    clear_results : in     std_logic;                                                     -- Initialise filter.
    -- Outputs to result store.
    tc_out        : out    std_logic_vector (last_column_c(harmonic_g-1)-1 downto 0);
    pwr_out       : out    std_logic_vector (last_column_c(harmonic_g-1)*32-1 downto 0);
    row_info_out  : out    std_logic_vector (harmonic_g*7-1 downto 0);
    seed_col_out  : out    std_logic_vector (21 downto 0);
    -- Clock and reset.
    clk_sys       : in     std_logic;
    rst_sys_n     : in     std_logic
  );

-- Declarations

end entity hsumfilt ;
