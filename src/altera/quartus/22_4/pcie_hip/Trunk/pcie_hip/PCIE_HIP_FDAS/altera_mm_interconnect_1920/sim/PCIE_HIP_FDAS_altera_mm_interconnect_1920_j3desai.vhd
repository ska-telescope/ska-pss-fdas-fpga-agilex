-- PCIE_HIP_FDAS_altera_mm_interconnect_1920_j3desai.vhd

-- This file was auto-generated from altera_mm_interconnect_hw.tcl.  If you edit it your changes
-- will probably be lost.
-- 
-- Generated using ACDS version 22.4 94

library IEEE;
library altera_merlin_master_translator_191;
library altera_merlin_slave_translator_191;
library altera_merlin_master_agent_191;
library altera_merlin_slave_agent_191;
library altera_avalon_sc_fifo_1931;
library altera_merlin_router_1921;
library altera_merlin_demultiplexer_1921;
library altera_merlin_multiplexer_1921;
library altera_merlin_waitrequest_adapter_191;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity PCIE_HIP_FDAS_altera_mm_interconnect_1920_j3desai is
	port (
		intel_pcie_ptile_mcdma_0_p0_h2ddm_master_address                                      : in  std_logic_vector(63 downto 0)  := (others => '0'); --                                        intel_pcie_ptile_mcdma_0_p0_h2ddm_master.address
		intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest                                  : out std_logic;                                         --                                                                                .waitrequest
		intel_pcie_ptile_mcdma_0_p0_h2ddm_master_burstcount                                   : in  std_logic_vector(3 downto 0)   := (others => '0'); --                                                                                .burstcount
		intel_pcie_ptile_mcdma_0_p0_h2ddm_master_byteenable                                   : in  std_logic_vector(63 downto 0)  := (others => '0'); --                                                                                .byteenable
		intel_pcie_ptile_mcdma_0_p0_h2ddm_master_write                                        : in  std_logic                      := '0';             --                                                                                .write
		intel_pcie_ptile_mcdma_0_p0_h2ddm_master_writedata                                    : in  std_logic_vector(511 downto 0) := (others => '0'); --                                                                                .writedata
		dma_rd_0_s0_address                                                                   : out std_logic_vector(25 downto 0);                     --                                                                     dma_rd_0_s0.address
		dma_rd_0_s0_write                                                                     : out std_logic;                                         --                                                                                .write
		dma_rd_0_s0_writedata                                                                 : out std_logic_vector(511 downto 0);                    --                                                                                .writedata
		dma_rd_0_s0_burstcount                                                                : out std_logic_vector(3 downto 0);                      --                                                                                .burstcount
		dma_rd_0_s0_byteenable                                                                : out std_logic_vector(63 downto 0);                     --                                                                                .byteenable
		dma_rd_0_s0_waitrequest                                                               : in  std_logic                      := '0';             --                                                                                .waitrequest
		dma_rd_1_s0_address                                                                   : out std_logic_vector(25 downto 0);                     --                                                                     dma_rd_1_s0.address
		dma_rd_1_s0_write                                                                     : out std_logic;                                         --                                                                                .write
		dma_rd_1_s0_writedata                                                                 : out std_logic_vector(511 downto 0);                    --                                                                                .writedata
		dma_rd_1_s0_burstcount                                                                : out std_logic_vector(3 downto 0);                      --                                                                                .burstcount
		dma_rd_1_s0_byteenable                                                                : out std_logic_vector(63 downto 0);                     --                                                                                .byteenable
		dma_rd_1_s0_waitrequest                                                               : in  std_logic                      := '0';             --                                                                                .waitrequest
		dma_rd_2_s0_address                                                                   : out std_logic_vector(25 downto 0);                     --                                                                     dma_rd_2_s0.address
		dma_rd_2_s0_write                                                                     : out std_logic;                                         --                                                                                .write
		dma_rd_2_s0_writedata                                                                 : out std_logic_vector(511 downto 0);                    --                                                                                .writedata
		dma_rd_2_s0_burstcount                                                                : out std_logic_vector(3 downto 0);                      --                                                                                .burstcount
		dma_rd_2_s0_byteenable                                                                : out std_logic_vector(63 downto 0);                     --                                                                                .byteenable
		dma_rd_2_s0_waitrequest                                                               : in  std_logic                      := '0';             --                                                                                .waitrequest
		dma_rd_3_s0_address                                                                   : out std_logic_vector(25 downto 0);                     --                                                                     dma_rd_3_s0.address
		dma_rd_3_s0_write                                                                     : out std_logic;                                         --                                                                                .write
		dma_rd_3_s0_writedata                                                                 : out std_logic_vector(511 downto 0);                    --                                                                                .writedata
		dma_rd_3_s0_burstcount                                                                : out std_logic_vector(3 downto 0);                      --                                                                                .burstcount
		dma_rd_3_s0_byteenable                                                                : out std_logic_vector(63 downto 0);                     --                                                                                .byteenable
		dma_rd_3_s0_waitrequest                                                               : in  std_logic                      := '0';             --                                                                                .waitrequest
		dma_rd_0_reset_reset_bridge_in_reset_reset                                            : in  std_logic                      := '0';             --                                            dma_rd_0_reset_reset_bridge_in_reset.reset
		intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset : in  std_logic                      := '0';             -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset.reset
		intel_pcie_ptile_mcdma_0_app_clk_clk                                                  : in  std_logic                      := '0'              --                                                intel_pcie_ptile_mcdma_0_app_clk.clk
	);
end entity PCIE_HIP_FDAS_altera_mm_interconnect_1920_j3desai;

architecture rtl of PCIE_HIP_FDAS_altera_mm_interconnect_1920_j3desai is
	component PCIE_HIP_FDAS_altera_merlin_master_translator_191_q6cbhvi_cmp is
		generic (
			AV_ADDRESS_W                : integer := 32;
			AV_DATA_W                   : integer := 32;
			AV_BURSTCOUNT_W             : integer := 4;
			AV_BYTEENABLE_W             : integer := 4;
			UAV_ADDRESS_W               : integer := 38;
			UAV_BURSTCOUNT_W            : integer := 10;
			USE_READ                    : integer := 1;
			USE_WRITE                   : integer := 1;
			USE_BEGINBURSTTRANSFER      : integer := 0;
			USE_BEGINTRANSFER           : integer := 0;
			USE_CHIPSELECT              : integer := 0;
			USE_BURSTCOUNT              : integer := 1;
			USE_READDATAVALID           : integer := 1;
			USE_WAITREQUEST             : integer := 1;
			USE_READRESPONSE            : integer := 0;
			USE_WRITERESPONSE           : integer := 0;
			AV_SYMBOLS_PER_WORD         : integer := 4;
			AV_ADDRESS_SYMBOLS          : integer := 0;
			AV_BURSTCOUNT_SYMBOLS       : integer := 0;
			AV_CONSTANT_BURST_BEHAVIOR  : integer := 0;
			UAV_CONSTANT_BURST_BEHAVIOR : integer := 0;
			AV_LINEWRAPBURSTS           : integer := 0;
			AV_REGISTERINCOMINGSIGNALS  : integer := 0;
			SYNC_RESET                  : integer := 0;
			WAITREQUEST_ALLOWANCE       : integer := 0
		);
		port (
			clk                    : in  std_logic                      := 'X';             -- clk
			reset                  : in  std_logic                      := 'X';             -- reset
			uav_address            : out std_logic_vector(63 downto 0);                     -- address
			uav_burstcount         : out std_logic_vector(9 downto 0);                      -- burstcount
			uav_read               : out std_logic;                                         -- read
			uav_write              : out std_logic;                                         -- write
			uav_waitrequest        : in  std_logic                      := 'X';             -- waitrequest
			uav_readdatavalid      : in  std_logic                      := 'X';             -- readdatavalid
			uav_byteenable         : out std_logic_vector(63 downto 0);                     -- byteenable
			uav_readdata           : in  std_logic_vector(511 downto 0) := (others => 'X'); -- readdata
			uav_writedata          : out std_logic_vector(511 downto 0);                    -- writedata
			uav_lock               : out std_logic;                                         -- lock
			uav_debugaccess        : out std_logic;                                         -- debugaccess
			av_address             : in  std_logic_vector(63 downto 0)  := (others => 'X'); -- address
			av_waitrequest         : out std_logic;                                         -- waitrequest
			av_burstcount          : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- burstcount
			av_byteenable          : in  std_logic_vector(63 downto 0)  := (others => 'X'); -- byteenable
			av_write               : in  std_logic                      := 'X';             -- write
			av_writedata           : in  std_logic_vector(511 downto 0) := (others => 'X'); -- writedata
			av_beginbursttransfer  : in  std_logic                      := 'X';             -- beginbursttransfer
			av_begintransfer       : in  std_logic                      := 'X';             -- begintransfer
			av_chipselect          : in  std_logic                      := 'X';             -- chipselect
			av_read                : in  std_logic                      := 'X';             -- read
			av_readdata            : out std_logic_vector(511 downto 0);                    -- readdata
			av_readdatavalid       : out std_logic;                                         -- readdatavalid
			av_lock                : in  std_logic                      := 'X';             -- lock
			av_debugaccess         : in  std_logic                      := 'X';             -- debugaccess
			uav_clken              : out std_logic;                                         -- clken
			av_clken               : in  std_logic                      := 'X';             -- clken
			uav_response           : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- response
			av_response            : out std_logic_vector(1 downto 0);                      -- response
			uav_writeresponsevalid : in  std_logic                      := 'X';             -- writeresponsevalid
			av_writeresponsevalid  : out std_logic                                          -- writeresponsevalid
		);
	end component PCIE_HIP_FDAS_altera_merlin_master_translator_191_q6cbhvi_cmp;

	component PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki_cmp is
		generic (
			AV_ADDRESS_W                   : integer := 30;
			AV_DATA_W                      : integer := 32;
			UAV_DATA_W                     : integer := 32;
			AV_BURSTCOUNT_W                : integer := 4;
			AV_BYTEENABLE_W                : integer := 4;
			UAV_BYTEENABLE_W               : integer := 4;
			UAV_ADDRESS_W                  : integer := 32;
			UAV_BURSTCOUNT_W               : integer := 4;
			AV_READLATENCY                 : integer := 0;
			USE_READDATAVALID              : integer := 1;
			USE_WAITREQUEST                : integer := 1;
			USE_UAV_CLKEN                  : integer := 0;
			USE_READRESPONSE               : integer := 0;
			USE_WRITERESPONSE              : integer := 0;
			AV_SYMBOLS_PER_WORD            : integer := 4;
			AV_ADDRESS_SYMBOLS             : integer := 0;
			AV_BURSTCOUNT_SYMBOLS          : integer := 0;
			AV_CONSTANT_BURST_BEHAVIOR     : integer := 0;
			UAV_CONSTANT_BURST_BEHAVIOR    : integer := 0;
			AV_REQUIRE_UNALIGNED_ADDRESSES : integer := 0;
			CHIPSELECT_THROUGH_READLATENCY : integer := 0;
			AV_READ_WAIT_CYCLES            : integer := 0;
			AV_WRITE_WAIT_CYCLES           : integer := 0;
			AV_SETUP_WAIT_CYCLES           : integer := 0;
			AV_DATA_HOLD_CYCLES            : integer := 0;
			WAITREQUEST_ALLOWANCE          : integer := 0;
			SYNC_RESET                     : integer := 0
		);
		port (
			clk                    : in  std_logic                      := 'X';             -- clk
			reset                  : in  std_logic                      := 'X';             -- reset
			uav_address            : in  std_logic_vector(63 downto 0)  := (others => 'X'); -- address
			uav_burstcount         : in  std_logic_vector(9 downto 0)   := (others => 'X'); -- burstcount
			uav_read               : in  std_logic                      := 'X';             -- read
			uav_write              : in  std_logic                      := 'X';             -- write
			uav_waitrequest        : out std_logic;                                         -- waitrequest
			uav_readdatavalid      : out std_logic;                                         -- readdatavalid
			uav_byteenable         : in  std_logic_vector(63 downto 0)  := (others => 'X'); -- byteenable
			uav_readdata           : out std_logic_vector(511 downto 0);                    -- readdata
			uav_writedata          : in  std_logic_vector(511 downto 0) := (others => 'X'); -- writedata
			uav_lock               : in  std_logic                      := 'X';             -- lock
			uav_debugaccess        : in  std_logic                      := 'X';             -- debugaccess
			av_address             : out std_logic_vector(25 downto 0);                     -- address
			av_write               : out std_logic;                                         -- write
			av_writedata           : out std_logic_vector(511 downto 0);                    -- writedata
			av_burstcount          : out std_logic_vector(3 downto 0);                      -- burstcount
			av_byteenable          : out std_logic_vector(63 downto 0);                     -- byteenable
			av_waitrequest         : in  std_logic                      := 'X';             -- waitrequest
			av_read                : out std_logic;                                         -- read
			av_readdata            : in  std_logic_vector(511 downto 0) := (others => 'X'); -- readdata
			av_begintransfer       : out std_logic;                                         -- begintransfer
			av_beginbursttransfer  : out std_logic;                                         -- beginbursttransfer
			av_readdatavalid       : in  std_logic                      := 'X';             -- readdatavalid
			av_writebyteenable     : out std_logic_vector(63 downto 0);                     -- writebyteenable
			av_lock                : out std_logic;                                         -- lock
			av_chipselect          : out std_logic;                                         -- chipselect
			av_clken               : out std_logic;                                         -- clken
			uav_clken              : in  std_logic                      := 'X';             -- clken
			av_debugaccess         : out std_logic;                                         -- debugaccess
			av_outputenable        : out std_logic;                                         -- outputenable
			uav_response           : out std_logic_vector(1 downto 0);                      -- response
			av_response            : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- response
			uav_writeresponsevalid : out std_logic;                                         -- writeresponsevalid
			av_writeresponsevalid  : in  std_logic                      := 'X'              -- writeresponsevalid
		);
	end component PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki_cmp;

	component PCIE_HIP_FDAS_altera_merlin_master_agent_191_mpbm6tq_cmp is
		generic (
			PKT_WUNIQUE               : integer := 125;
			PKT_DOMAIN_H              : integer := 124;
			PKT_DOMAIN_L              : integer := 123;
			PKT_SNOOP_H               : integer := 122;
			PKT_SNOOP_L               : integer := 119;
			PKT_BARRIER_H             : integer := 118;
			PKT_BARRIER_L             : integer := 117;
			PKT_ORI_BURST_SIZE_H      : integer := 116;
			PKT_ORI_BURST_SIZE_L      : integer := 114;
			PKT_RESPONSE_STATUS_H     : integer := 113;
			PKT_RESPONSE_STATUS_L     : integer := 112;
			PKT_QOS_H                 : integer := 111;
			PKT_QOS_L                 : integer := 108;
			PKT_DATA_SIDEBAND_H       : integer := 107;
			PKT_DATA_SIDEBAND_L       : integer := 100;
			PKT_ADDR_SIDEBAND_H       : integer := 99;
			PKT_ADDR_SIDEBAND_L       : integer := 95;
			PKT_BURST_TYPE_H          : integer := 94;
			PKT_BURST_TYPE_L          : integer := 93;
			PKT_CACHE_H               : integer := 92;
			PKT_CACHE_L               : integer := 89;
			PKT_THREAD_ID_H           : integer := 88;
			PKT_THREAD_ID_L           : integer := 87;
			PKT_BURST_SIZE_H          : integer := 86;
			PKT_BURST_SIZE_L          : integer := 84;
			PKT_TRANS_EXCLUSIVE       : integer := 83;
			PKT_TRANS_LOCK            : integer := 82;
			PKT_BEGIN_BURST           : integer := 81;
			PKT_PROTECTION_H          : integer := 80;
			PKT_PROTECTION_L          : integer := 80;
			PKT_BURSTWRAP_H           : integer := 79;
			PKT_BURSTWRAP_L           : integer := 77;
			PKT_BYTE_CNT_H            : integer := 76;
			PKT_BYTE_CNT_L            : integer := 74;
			PKT_ADDR_H                : integer := 73;
			PKT_ADDR_L                : integer := 42;
			PKT_TRANS_COMPRESSED_READ : integer := 41;
			PKT_TRANS_POSTED          : integer := 40;
			PKT_TRANS_WRITE           : integer := 39;
			PKT_TRANS_READ            : integer := 38;
			PKT_DATA_H                : integer := 37;
			PKT_DATA_L                : integer := 6;
			PKT_BYTEEN_H              : integer := 5;
			PKT_BYTEEN_L              : integer := 2;
			PKT_SRC_ID_H              : integer := 1;
			PKT_SRC_ID_L              : integer := 1;
			PKT_DEST_ID_H             : integer := 0;
			PKT_DEST_ID_L             : integer := 0;
			ST_DATA_W                 : integer := 126;
			ST_CHANNEL_W              : integer := 1;
			AV_BURSTCOUNT_W           : integer := 3;
			SUPPRESS_0_BYTEEN_RSP     : integer := 1;
			ID                        : integer := 1;
			BURSTWRAP_VALUE           : integer := 4;
			CACHE_VALUE               : integer := 0;
			SECURE_ACCESS_BIT         : integer := 1;
			USE_READRESPONSE          : integer := 0;
			USE_WRITERESPONSE         : integer := 0;
			DOMAIN_VALUE              : integer := 3;
			BARRIER_VALUE             : integer := 0;
			SNOOP_VALUE               : integer := 0;
			WUNIQUE_VALUE             : integer := 0;
			SYNC_RESET                : integer := 0
		);
		port (
			clk                   : in  std_logic                      := 'X';             -- clk
			reset                 : in  std_logic                      := 'X';             -- reset
			av_address            : in  std_logic_vector(63 downto 0)  := (others => 'X'); -- address
			av_write              : in  std_logic                      := 'X';             -- write
			av_read               : in  std_logic                      := 'X';             -- read
			av_writedata          : in  std_logic_vector(511 downto 0) := (others => 'X'); -- writedata
			av_readdata           : out std_logic_vector(511 downto 0);                    -- readdata
			av_waitrequest        : out std_logic;                                         -- waitrequest
			av_readdatavalid      : out std_logic;                                         -- readdatavalid
			av_byteenable         : in  std_logic_vector(63 downto 0)  := (others => 'X'); -- byteenable
			av_burstcount         : in  std_logic_vector(9 downto 0)   := (others => 'X'); -- burstcount
			av_debugaccess        : in  std_logic                      := 'X';             -- debugaccess
			av_lock               : in  std_logic                      := 'X';             -- lock
			cp_valid              : out std_logic;                                         -- valid
			cp_data               : out std_logic_vector(691 downto 0);                    -- data
			cp_startofpacket      : out std_logic;                                         -- startofpacket
			cp_endofpacket        : out std_logic;                                         -- endofpacket
			cp_ready              : in  std_logic                      := 'X';             -- ready
			rp_valid              : in  std_logic                      := 'X';             -- valid
			rp_data               : in  std_logic_vector(691 downto 0) := (others => 'X'); -- data
			rp_channel            : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- channel
			rp_startofpacket      : in  std_logic                      := 'X';             -- startofpacket
			rp_endofpacket        : in  std_logic                      := 'X';             -- endofpacket
			rp_ready              : out std_logic;                                         -- ready
			av_response           : out std_logic_vector(1 downto 0);                      -- response
			av_writeresponsevalid : out std_logic                                          -- writeresponsevalid
		);
	end component PCIE_HIP_FDAS_altera_merlin_master_agent_191_mpbm6tq_cmp;

	component PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri_cmp is
		generic (
			PKT_ORI_BURST_SIZE_H      : integer := 90;
			PKT_ORI_BURST_SIZE_L      : integer := 88;
			PKT_RESPONSE_STATUS_H     : integer := 87;
			PKT_RESPONSE_STATUS_L     : integer := 86;
			PKT_BURST_SIZE_H          : integer := 85;
			PKT_BURST_SIZE_L          : integer := 83;
			PKT_TRANS_LOCK            : integer := 82;
			PKT_BEGIN_BURST           : integer := 81;
			PKT_PROTECTION_H          : integer := 80;
			PKT_PROTECTION_L          : integer := 80;
			PKT_BURSTWRAP_H           : integer := 79;
			PKT_BURSTWRAP_L           : integer := 77;
			PKT_BYTE_CNT_H            : integer := 76;
			PKT_BYTE_CNT_L            : integer := 74;
			PKT_ADDR_H                : integer := 73;
			PKT_ADDR_L                : integer := 42;
			PKT_TRANS_COMPRESSED_READ : integer := 41;
			PKT_TRANS_POSTED          : integer := 40;
			PKT_TRANS_WRITE           : integer := 39;
			PKT_TRANS_READ            : integer := 38;
			PKT_DATA_H                : integer := 37;
			PKT_DATA_L                : integer := 6;
			PKT_BYTEEN_H              : integer := 5;
			PKT_BYTEEN_L              : integer := 2;
			PKT_SRC_ID_H              : integer := 1;
			PKT_SRC_ID_L              : integer := 1;
			PKT_DEST_ID_H             : integer := 0;
			PKT_DEST_ID_L             : integer := 0;
			PKT_SYMBOL_W              : integer := 8;
			ST_CHANNEL_W              : integer := 8;
			ST_DATA_W                 : integer := 96;
			AVS_BURSTCOUNT_W          : integer := 4;
			SUPPRESS_0_BYTEEN_CMD     : integer := 1;
			USE_MEMORY_BLOCKS         : integer := 0;
			PREVENT_FIFO_OVERFLOW     : integer := 0;
			USE_READRESPONSE          : integer := 0;
			USE_WRITERESPONSE         : integer := 0;
			ECC_ENABLE                : integer := 0;
			SYNC_RESET                : integer := 0
		);
		port (
			clk                     : in  std_logic                      := 'X';             -- clk
			reset                   : in  std_logic                      := 'X';             -- reset
			m0_address              : out std_logic_vector(63 downto 0);                     -- address
			m0_burstcount           : out std_logic_vector(9 downto 0);                      -- burstcount
			m0_byteenable           : out std_logic_vector(63 downto 0);                     -- byteenable
			m0_debugaccess          : out std_logic;                                         -- debugaccess
			m0_lock                 : out std_logic;                                         -- lock
			m0_readdata             : in  std_logic_vector(511 downto 0) := (others => 'X'); -- readdata
			m0_readdatavalid        : in  std_logic                      := 'X';             -- readdatavalid
			m0_read                 : out std_logic;                                         -- read
			m0_waitrequest          : in  std_logic                      := 'X';             -- waitrequest
			m0_writedata            : out std_logic_vector(511 downto 0);                    -- writedata
			m0_write                : out std_logic;                                         -- write
			rp_endofpacket          : out std_logic;                                         -- endofpacket
			rp_ready                : in  std_logic                      := 'X';             -- ready
			rp_valid                : out std_logic;                                         -- valid
			rp_data                 : out std_logic_vector(691 downto 0);                    -- data
			rp_startofpacket        : out std_logic;                                         -- startofpacket
			cp_ready                : out std_logic;                                         -- ready
			cp_valid                : in  std_logic                      := 'X';             -- valid
			cp_data                 : in  std_logic_vector(691 downto 0) := (others => 'X'); -- data
			cp_startofpacket        : in  std_logic                      := 'X';             -- startofpacket
			cp_endofpacket          : in  std_logic                      := 'X';             -- endofpacket
			cp_channel              : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- channel
			rf_sink_ready           : out std_logic;                                         -- ready
			rf_sink_valid           : in  std_logic                      := 'X';             -- valid
			rf_sink_startofpacket   : in  std_logic                      := 'X';             -- startofpacket
			rf_sink_endofpacket     : in  std_logic                      := 'X';             -- endofpacket
			rf_sink_data            : in  std_logic_vector(692 downto 0) := (others => 'X'); -- data
			rf_source_ready         : in  std_logic                      := 'X';             -- ready
			rf_source_valid         : out std_logic;                                         -- valid
			rf_source_startofpacket : out std_logic;                                         -- startofpacket
			rf_source_endofpacket   : out std_logic;                                         -- endofpacket
			rf_source_data          : out std_logic_vector(692 downto 0);                    -- data
			rdata_fifo_sink_ready   : out std_logic;                                         -- ready
			rdata_fifo_sink_valid   : in  std_logic                      := 'X';             -- valid
			rdata_fifo_sink_data    : in  std_logic_vector(513 downto 0) := (others => 'X'); -- data
			rdata_fifo_src_ready    : in  std_logic                      := 'X';             -- ready
			rdata_fifo_src_valid    : out std_logic;                                         -- valid
			rdata_fifo_src_data     : out std_logic_vector(513 downto 0);                    -- data
			m0_response             : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- response
			m0_writeresponsevalid   : in  std_logic                      := 'X';             -- writeresponsevalid
			rdata_fifo_sink_error   : in  std_logic                      := 'X'              -- error
		);
	end component PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri_cmp;

	component PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy_cmp is
		generic (
			SYMBOLS_PER_BEAT    : integer := 1;
			BITS_PER_SYMBOL     : integer := 8;
			FIFO_DEPTH          : integer := 16;
			CHANNEL_WIDTH       : integer := 0;
			ERROR_WIDTH         : integer := 0;
			USE_PACKETS         : integer := 0;
			USE_FILL_LEVEL      : integer := 0;
			EMPTY_LATENCY       : integer := 3;
			USE_MEMORY_BLOCKS   : integer := 1;
			USE_STORE_FORWARD   : integer := 0;
			USE_ALMOST_FULL_IF  : integer := 0;
			USE_ALMOST_EMPTY_IF : integer := 0;
			EMPTY_WIDTH         : integer := 1;
			SYNC_RESET          : integer := 0
		);
		port (
			clk               : in  std_logic                      := 'X';             -- clk
			reset             : in  std_logic                      := 'X';             -- reset
			in_data           : in  std_logic_vector(692 downto 0) := (others => 'X'); -- data
			in_valid          : in  std_logic                      := 'X';             -- valid
			in_ready          : out std_logic;                                         -- ready
			in_startofpacket  : in  std_logic                      := 'X';             -- startofpacket
			in_endofpacket    : in  std_logic                      := 'X';             -- endofpacket
			out_data          : out std_logic_vector(692 downto 0);                    -- data
			out_valid         : out std_logic;                                         -- valid
			out_ready         : in  std_logic                      := 'X';             -- ready
			out_startofpacket : out std_logic;                                         -- startofpacket
			out_endofpacket   : out std_logic;                                         -- endofpacket
			csr_address       : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- address
			csr_read          : in  std_logic                      := 'X';             -- read
			csr_write         : in  std_logic                      := 'X';             -- write
			csr_readdata      : out std_logic_vector(31 downto 0);                     -- readdata
			csr_writedata     : in  std_logic_vector(31 downto 0)  := (others => 'X'); -- writedata
			almost_full_data  : out std_logic;                                         -- data
			almost_empty_data : out std_logic;                                         -- data
			in_empty          : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- empty
			out_empty         : out std_logic_vector(0 downto 0);                      -- empty
			in_error          : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- error
			out_error         : out std_logic_vector(0 downto 0);                      -- error
			in_channel        : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- channel
			out_channel       : out std_logic_vector(0 downto 0)                       -- channel
		);
	end component PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy_cmp;

	component PCIE_HIP_FDAS_altera_merlin_router_1921_22ekohy_cmp is
		port (
			sink_ready         : out std_logic;                                         -- ready
			sink_valid         : in  std_logic                      := 'X';             -- valid
			sink_data          : in  std_logic_vector(691 downto 0) := (others => 'X'); -- data
			sink_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink_endofpacket   : in  std_logic                      := 'X';             -- endofpacket
			clk                : in  std_logic                      := 'X';             -- clk
			reset              : in  std_logic                      := 'X';             -- reset
			src_ready          : in  std_logic                      := 'X';             -- ready
			src_valid          : out std_logic;                                         -- valid
			src_data           : out std_logic_vector(691 downto 0);                    -- data
			src_channel        : out std_logic_vector(3 downto 0);                      -- channel
			src_startofpacket  : out std_logic;                                         -- startofpacket
			src_endofpacket    : out std_logic                                          -- endofpacket
		);
	end component PCIE_HIP_FDAS_altera_merlin_router_1921_22ekohy_cmp;

	component PCIE_HIP_FDAS_altera_merlin_router_1921_j3ubbhi_cmp is
		port (
			sink_ready         : out std_logic;                                         -- ready
			sink_valid         : in  std_logic                      := 'X';             -- valid
			sink_data          : in  std_logic_vector(691 downto 0) := (others => 'X'); -- data
			sink_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink_endofpacket   : in  std_logic                      := 'X';             -- endofpacket
			clk                : in  std_logic                      := 'X';             -- clk
			reset              : in  std_logic                      := 'X';             -- reset
			src_ready          : in  std_logic                      := 'X';             -- ready
			src_valid          : out std_logic;                                         -- valid
			src_data           : out std_logic_vector(691 downto 0);                    -- data
			src_channel        : out std_logic_vector(3 downto 0);                      -- channel
			src_startofpacket  : out std_logic;                                         -- startofpacket
			src_endofpacket    : out std_logic                                          -- endofpacket
		);
	end component PCIE_HIP_FDAS_altera_merlin_router_1921_j3ubbhi_cmp;

	component PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_wzxjsgi_cmp is
		port (
			clk                : in  std_logic                      := 'X';             -- clk
			reset              : in  std_logic                      := 'X';             -- reset
			sink_ready         : out std_logic;                                         -- ready
			sink_channel       : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- channel
			sink_data          : in  std_logic_vector(691 downto 0) := (others => 'X'); -- data
			sink_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink_endofpacket   : in  std_logic                      := 'X';             -- endofpacket
			sink_valid         : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- valid
			src0_ready         : in  std_logic                      := 'X';             -- ready
			src0_valid         : out std_logic;                                         -- valid
			src0_data          : out std_logic_vector(691 downto 0);                    -- data
			src0_channel       : out std_logic_vector(3 downto 0);                      -- channel
			src0_startofpacket : out std_logic;                                         -- startofpacket
			src0_endofpacket   : out std_logic;                                         -- endofpacket
			src1_ready         : in  std_logic                      := 'X';             -- ready
			src1_valid         : out std_logic;                                         -- valid
			src1_data          : out std_logic_vector(691 downto 0);                    -- data
			src1_channel       : out std_logic_vector(3 downto 0);                      -- channel
			src1_startofpacket : out std_logic;                                         -- startofpacket
			src1_endofpacket   : out std_logic;                                         -- endofpacket
			src2_ready         : in  std_logic                      := 'X';             -- ready
			src2_valid         : out std_logic;                                         -- valid
			src2_data          : out std_logic_vector(691 downto 0);                    -- data
			src2_channel       : out std_logic_vector(3 downto 0);                      -- channel
			src2_startofpacket : out std_logic;                                         -- startofpacket
			src2_endofpacket   : out std_logic;                                         -- endofpacket
			src3_ready         : in  std_logic                      := 'X';             -- ready
			src3_valid         : out std_logic;                                         -- valid
			src3_data          : out std_logic_vector(691 downto 0);                    -- data
			src3_channel       : out std_logic_vector(3 downto 0);                      -- channel
			src3_startofpacket : out std_logic;                                         -- startofpacket
			src3_endofpacket   : out std_logic                                          -- endofpacket
		);
	end component PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_wzxjsgi_cmp;

	component PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_jqhnmri_cmp is
		port (
			clk                 : in  std_logic                      := 'X';             -- clk
			reset               : in  std_logic                      := 'X';             -- reset
			src_ready           : in  std_logic                      := 'X';             -- ready
			src_valid           : out std_logic;                                         -- valid
			src_data            : out std_logic_vector(691 downto 0);                    -- data
			src_channel         : out std_logic_vector(3 downto 0);                      -- channel
			src_startofpacket   : out std_logic;                                         -- startofpacket
			src_endofpacket     : out std_logic;                                         -- endofpacket
			sink0_ready         : out std_logic;                                         -- ready
			sink0_valid         : in  std_logic                      := 'X';             -- valid
			sink0_channel       : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- channel
			sink0_data          : in  std_logic_vector(691 downto 0) := (others => 'X'); -- data
			sink0_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink0_endofpacket   : in  std_logic                      := 'X'              -- endofpacket
		);
	end component PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_jqhnmri_cmp;

	component PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_aex32mq_cmp is
		port (
			clk                : in  std_logic                      := 'X';             -- clk
			reset              : in  std_logic                      := 'X';             -- reset
			sink_ready         : out std_logic;                                         -- ready
			sink_channel       : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- channel
			sink_data          : in  std_logic_vector(691 downto 0) := (others => 'X'); -- data
			sink_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink_endofpacket   : in  std_logic                      := 'X';             -- endofpacket
			sink_valid         : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- valid
			src0_ready         : in  std_logic                      := 'X';             -- ready
			src0_valid         : out std_logic;                                         -- valid
			src0_data          : out std_logic_vector(691 downto 0);                    -- data
			src0_channel       : out std_logic_vector(3 downto 0);                      -- channel
			src0_startofpacket : out std_logic;                                         -- startofpacket
			src0_endofpacket   : out std_logic                                          -- endofpacket
		);
	end component PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_aex32mq_cmp;

	component PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_li4dm4i_cmp is
		port (
			clk                 : in  std_logic                      := 'X';             -- clk
			reset               : in  std_logic                      := 'X';             -- reset
			src_ready           : in  std_logic                      := 'X';             -- ready
			src_valid           : out std_logic;                                         -- valid
			src_data            : out std_logic_vector(691 downto 0);                    -- data
			src_channel         : out std_logic_vector(3 downto 0);                      -- channel
			src_startofpacket   : out std_logic;                                         -- startofpacket
			src_endofpacket     : out std_logic;                                         -- endofpacket
			sink0_ready         : out std_logic;                                         -- ready
			sink0_valid         : in  std_logic                      := 'X';             -- valid
			sink0_channel       : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- channel
			sink0_data          : in  std_logic_vector(691 downto 0) := (others => 'X'); -- data
			sink0_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink0_endofpacket   : in  std_logic                      := 'X';             -- endofpacket
			sink1_ready         : out std_logic;                                         -- ready
			sink1_valid         : in  std_logic                      := 'X';             -- valid
			sink1_channel       : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- channel
			sink1_data          : in  std_logic_vector(691 downto 0) := (others => 'X'); -- data
			sink1_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink1_endofpacket   : in  std_logic                      := 'X';             -- endofpacket
			sink2_ready         : out std_logic;                                         -- ready
			sink2_valid         : in  std_logic                      := 'X';             -- valid
			sink2_channel       : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- channel
			sink2_data          : in  std_logic_vector(691 downto 0) := (others => 'X'); -- data
			sink2_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink2_endofpacket   : in  std_logic                      := 'X';             -- endofpacket
			sink3_ready         : out std_logic;                                         -- ready
			sink3_valid         : in  std_logic                      := 'X';             -- valid
			sink3_channel       : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- channel
			sink3_data          : in  std_logic_vector(691 downto 0) := (others => 'X'); -- data
			sink3_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink3_endofpacket   : in  std_logic                      := 'X'              -- endofpacket
		);
	end component PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_li4dm4i_cmp;

	component altera_merlin_waitrequest_adapter_cmp is
		generic (
			UAV_ADDRESS_W            : integer := 32;
			UAV_BYTEENABLE_W         : integer := 4;
			UAV_BURSTCOUNT_W         : integer := 10;
			UAV_DATA_W               : integer := 32;
			USE_READRESPONSE         : integer := 1;
			USE_WRITERESPONSE        : integer := 1;
			S0_WAITREQUEST_ALLOWANCE : integer := 1;
			M0_WAITREQUEST_ALLOWANCE : integer := 1;
			SYNC_RESET               : integer := 0
		);
		port (
			clk                   : in  std_logic                                     := 'X';             -- clk
			reset                 : in  std_logic                                     := 'X';             -- reset
			m0_write              : out std_logic;                                                        -- write
			m0_read               : out std_logic;                                                        -- read
			m0_address            : out std_logic_vector(UAV_ADDRESS_W-1 downto 0);                       -- address
			m0_burstcount         : out std_logic_vector(UAV_BURSTCOUNT_W-1 downto 0);                    -- burstcount
			m0_byteenable         : out std_logic_vector(UAV_BYTEENABLE_W-1 downto 0);                    -- byteenable
			m0_writedata          : out std_logic_vector(UAV_DATA_W-1 downto 0);                          -- writedata
			m0_lock               : out std_logic;                                                        -- lock
			m0_debugaccess        : out std_logic;                                                        -- debugaccess
			m0_readdata           : in  std_logic_vector(UAV_DATA_W-1 downto 0)       := (others => 'X'); -- readdata
			m0_readdatavalid      : in  std_logic                                     := 'X';             -- readdatavalid
			m0_waitrequest        : in  std_logic                                     := 'X';             -- waitrequest
			s0_write              : in  std_logic                                     := 'X';             -- write
			s0_read               : in  std_logic                                     := 'X';             -- read
			s0_address            : in  std_logic_vector(UAV_ADDRESS_W-1 downto 0)    := (others => 'X'); -- address
			s0_burstcount         : in  std_logic_vector(UAV_BURSTCOUNT_W-1 downto 0) := (others => 'X'); -- burstcount
			s0_writedata          : in  std_logic_vector(UAV_DATA_W-1 downto 0)       := (others => 'X'); -- writedata
			s0_lock               : in  std_logic                                     := 'X';             -- lock
			s0_debugaccess        : in  std_logic                                     := 'X';             -- debugaccess
			s0_byteenable         : in  std_logic_vector(UAV_BYTEENABLE_W-1 downto 0) := (others => 'X'); -- byteenable
			s0_readdata           : out std_logic_vector(UAV_DATA_W-1 downto 0);                          -- readdata
			s0_readdatavalid      : out std_logic;                                                        -- readdatavalid
			s0_waitrequest        : out std_logic;                                                        -- waitrequest
			s0_writeresponsevalid : out std_logic;                                                        -- writeresponsevalid
			m0_writeresponsevalid : in  std_logic                                     := 'X';             -- writeresponsevalid
			m0_response           : in  std_logic_vector(1 downto 0)                  := (others => 'X'); -- response
			s0_response           : out std_logic_vector(1 downto 0)                                      -- response
		);
	end component altera_merlin_waitrequest_adapter_cmp;

	signal rsp_mux_src_valid                                                                           : std_logic;                      -- rsp_mux:src_valid -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:rp_valid
	signal rsp_mux_src_data                                                                            : std_logic_vector(691 downto 0); -- rsp_mux:src_data -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:rp_data
	signal rsp_mux_src_ready                                                                           : std_logic;                      -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:rp_ready -> rsp_mux:src_ready
	signal rsp_mux_src_channel                                                                         : std_logic_vector(3 downto 0);   -- rsp_mux:src_channel -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:rp_channel
	signal rsp_mux_src_startofpacket                                                                   : std_logic;                      -- rsp_mux:src_startofpacket -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:rp_startofpacket
	signal rsp_mux_src_endofpacket                                                                     : std_logic;                      -- rsp_mux:src_endofpacket -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:rp_endofpacket
	signal dma_rd_0_s0_agent_rf_source_valid                                                           : std_logic;                      -- dma_rd_0_s0_agent:rf_source_valid -> dma_rd_0_s0_agent_rsp_fifo:in_valid
	signal dma_rd_0_s0_agent_rf_source_data                                                            : std_logic_vector(692 downto 0); -- dma_rd_0_s0_agent:rf_source_data -> dma_rd_0_s0_agent_rsp_fifo:in_data
	signal dma_rd_0_s0_agent_rf_source_ready                                                           : std_logic;                      -- dma_rd_0_s0_agent_rsp_fifo:in_ready -> dma_rd_0_s0_agent:rf_source_ready
	signal dma_rd_0_s0_agent_rf_source_startofpacket                                                   : std_logic;                      -- dma_rd_0_s0_agent:rf_source_startofpacket -> dma_rd_0_s0_agent_rsp_fifo:in_startofpacket
	signal dma_rd_0_s0_agent_rf_source_endofpacket                                                     : std_logic;                      -- dma_rd_0_s0_agent:rf_source_endofpacket -> dma_rd_0_s0_agent_rsp_fifo:in_endofpacket
	signal dma_rd_0_s0_agent_rsp_fifo_out_valid                                                        : std_logic;                      -- dma_rd_0_s0_agent_rsp_fifo:out_valid -> dma_rd_0_s0_agent:rf_sink_valid
	signal dma_rd_0_s0_agent_rsp_fifo_out_data                                                         : std_logic_vector(692 downto 0); -- dma_rd_0_s0_agent_rsp_fifo:out_data -> dma_rd_0_s0_agent:rf_sink_data
	signal dma_rd_0_s0_agent_rsp_fifo_out_ready                                                        : std_logic;                      -- dma_rd_0_s0_agent:rf_sink_ready -> dma_rd_0_s0_agent_rsp_fifo:out_ready
	signal dma_rd_0_s0_agent_rsp_fifo_out_startofpacket                                                : std_logic;                      -- dma_rd_0_s0_agent_rsp_fifo:out_startofpacket -> dma_rd_0_s0_agent:rf_sink_startofpacket
	signal dma_rd_0_s0_agent_rsp_fifo_out_endofpacket                                                  : std_logic;                      -- dma_rd_0_s0_agent_rsp_fifo:out_endofpacket -> dma_rd_0_s0_agent:rf_sink_endofpacket
	signal dma_rd_0_s0_agent_rdata_fifo_src_valid                                                      : std_logic;                      -- dma_rd_0_s0_agent:rdata_fifo_src_valid -> dma_rd_0_s0_agent:rdata_fifo_sink_valid
	signal dma_rd_0_s0_agent_rdata_fifo_src_data                                                       : std_logic_vector(513 downto 0); -- dma_rd_0_s0_agent:rdata_fifo_src_data -> dma_rd_0_s0_agent:rdata_fifo_sink_data
	signal dma_rd_0_s0_agent_rdata_fifo_src_ready                                                      : std_logic;                      -- dma_rd_0_s0_agent:rdata_fifo_sink_ready -> dma_rd_0_s0_agent:rdata_fifo_src_ready
	signal cmd_mux_src_valid                                                                           : std_logic;                      -- cmd_mux:src_valid -> dma_rd_0_s0_agent:cp_valid
	signal cmd_mux_src_data                                                                            : std_logic_vector(691 downto 0); -- cmd_mux:src_data -> dma_rd_0_s0_agent:cp_data
	signal cmd_mux_src_ready                                                                           : std_logic;                      -- dma_rd_0_s0_agent:cp_ready -> cmd_mux:src_ready
	signal cmd_mux_src_channel                                                                         : std_logic_vector(3 downto 0);   -- cmd_mux:src_channel -> dma_rd_0_s0_agent:cp_channel
	signal cmd_mux_src_startofpacket                                                                   : std_logic;                      -- cmd_mux:src_startofpacket -> dma_rd_0_s0_agent:cp_startofpacket
	signal cmd_mux_src_endofpacket                                                                     : std_logic;                      -- cmd_mux:src_endofpacket -> dma_rd_0_s0_agent:cp_endofpacket
	signal dma_rd_1_s0_agent_rf_source_valid                                                           : std_logic;                      -- dma_rd_1_s0_agent:rf_source_valid -> dma_rd_1_s0_agent_rsp_fifo:in_valid
	signal dma_rd_1_s0_agent_rf_source_data                                                            : std_logic_vector(692 downto 0); -- dma_rd_1_s0_agent:rf_source_data -> dma_rd_1_s0_agent_rsp_fifo:in_data
	signal dma_rd_1_s0_agent_rf_source_ready                                                           : std_logic;                      -- dma_rd_1_s0_agent_rsp_fifo:in_ready -> dma_rd_1_s0_agent:rf_source_ready
	signal dma_rd_1_s0_agent_rf_source_startofpacket                                                   : std_logic;                      -- dma_rd_1_s0_agent:rf_source_startofpacket -> dma_rd_1_s0_agent_rsp_fifo:in_startofpacket
	signal dma_rd_1_s0_agent_rf_source_endofpacket                                                     : std_logic;                      -- dma_rd_1_s0_agent:rf_source_endofpacket -> dma_rd_1_s0_agent_rsp_fifo:in_endofpacket
	signal dma_rd_1_s0_agent_rsp_fifo_out_valid                                                        : std_logic;                      -- dma_rd_1_s0_agent_rsp_fifo:out_valid -> dma_rd_1_s0_agent:rf_sink_valid
	signal dma_rd_1_s0_agent_rsp_fifo_out_data                                                         : std_logic_vector(692 downto 0); -- dma_rd_1_s0_agent_rsp_fifo:out_data -> dma_rd_1_s0_agent:rf_sink_data
	signal dma_rd_1_s0_agent_rsp_fifo_out_ready                                                        : std_logic;                      -- dma_rd_1_s0_agent:rf_sink_ready -> dma_rd_1_s0_agent_rsp_fifo:out_ready
	signal dma_rd_1_s0_agent_rsp_fifo_out_startofpacket                                                : std_logic;                      -- dma_rd_1_s0_agent_rsp_fifo:out_startofpacket -> dma_rd_1_s0_agent:rf_sink_startofpacket
	signal dma_rd_1_s0_agent_rsp_fifo_out_endofpacket                                                  : std_logic;                      -- dma_rd_1_s0_agent_rsp_fifo:out_endofpacket -> dma_rd_1_s0_agent:rf_sink_endofpacket
	signal dma_rd_1_s0_agent_rdata_fifo_src_valid                                                      : std_logic;                      -- dma_rd_1_s0_agent:rdata_fifo_src_valid -> dma_rd_1_s0_agent:rdata_fifo_sink_valid
	signal dma_rd_1_s0_agent_rdata_fifo_src_data                                                       : std_logic_vector(513 downto 0); -- dma_rd_1_s0_agent:rdata_fifo_src_data -> dma_rd_1_s0_agent:rdata_fifo_sink_data
	signal dma_rd_1_s0_agent_rdata_fifo_src_ready                                                      : std_logic;                      -- dma_rd_1_s0_agent:rdata_fifo_sink_ready -> dma_rd_1_s0_agent:rdata_fifo_src_ready
	signal cmd_mux_001_src_valid                                                                       : std_logic;                      -- cmd_mux_001:src_valid -> dma_rd_1_s0_agent:cp_valid
	signal cmd_mux_001_src_data                                                                        : std_logic_vector(691 downto 0); -- cmd_mux_001:src_data -> dma_rd_1_s0_agent:cp_data
	signal cmd_mux_001_src_ready                                                                       : std_logic;                      -- dma_rd_1_s0_agent:cp_ready -> cmd_mux_001:src_ready
	signal cmd_mux_001_src_channel                                                                     : std_logic_vector(3 downto 0);   -- cmd_mux_001:src_channel -> dma_rd_1_s0_agent:cp_channel
	signal cmd_mux_001_src_startofpacket                                                               : std_logic;                      -- cmd_mux_001:src_startofpacket -> dma_rd_1_s0_agent:cp_startofpacket
	signal cmd_mux_001_src_endofpacket                                                                 : std_logic;                      -- cmd_mux_001:src_endofpacket -> dma_rd_1_s0_agent:cp_endofpacket
	signal dma_rd_2_s0_agent_rf_source_valid                                                           : std_logic;                      -- dma_rd_2_s0_agent:rf_source_valid -> dma_rd_2_s0_agent_rsp_fifo:in_valid
	signal dma_rd_2_s0_agent_rf_source_data                                                            : std_logic_vector(692 downto 0); -- dma_rd_2_s0_agent:rf_source_data -> dma_rd_2_s0_agent_rsp_fifo:in_data
	signal dma_rd_2_s0_agent_rf_source_ready                                                           : std_logic;                      -- dma_rd_2_s0_agent_rsp_fifo:in_ready -> dma_rd_2_s0_agent:rf_source_ready
	signal dma_rd_2_s0_agent_rf_source_startofpacket                                                   : std_logic;                      -- dma_rd_2_s0_agent:rf_source_startofpacket -> dma_rd_2_s0_agent_rsp_fifo:in_startofpacket
	signal dma_rd_2_s0_agent_rf_source_endofpacket                                                     : std_logic;                      -- dma_rd_2_s0_agent:rf_source_endofpacket -> dma_rd_2_s0_agent_rsp_fifo:in_endofpacket
	signal dma_rd_2_s0_agent_rsp_fifo_out_valid                                                        : std_logic;                      -- dma_rd_2_s0_agent_rsp_fifo:out_valid -> dma_rd_2_s0_agent:rf_sink_valid
	signal dma_rd_2_s0_agent_rsp_fifo_out_data                                                         : std_logic_vector(692 downto 0); -- dma_rd_2_s0_agent_rsp_fifo:out_data -> dma_rd_2_s0_agent:rf_sink_data
	signal dma_rd_2_s0_agent_rsp_fifo_out_ready                                                        : std_logic;                      -- dma_rd_2_s0_agent:rf_sink_ready -> dma_rd_2_s0_agent_rsp_fifo:out_ready
	signal dma_rd_2_s0_agent_rsp_fifo_out_startofpacket                                                : std_logic;                      -- dma_rd_2_s0_agent_rsp_fifo:out_startofpacket -> dma_rd_2_s0_agent:rf_sink_startofpacket
	signal dma_rd_2_s0_agent_rsp_fifo_out_endofpacket                                                  : std_logic;                      -- dma_rd_2_s0_agent_rsp_fifo:out_endofpacket -> dma_rd_2_s0_agent:rf_sink_endofpacket
	signal dma_rd_2_s0_agent_rdata_fifo_src_valid                                                      : std_logic;                      -- dma_rd_2_s0_agent:rdata_fifo_src_valid -> dma_rd_2_s0_agent:rdata_fifo_sink_valid
	signal dma_rd_2_s0_agent_rdata_fifo_src_data                                                       : std_logic_vector(513 downto 0); -- dma_rd_2_s0_agent:rdata_fifo_src_data -> dma_rd_2_s0_agent:rdata_fifo_sink_data
	signal dma_rd_2_s0_agent_rdata_fifo_src_ready                                                      : std_logic;                      -- dma_rd_2_s0_agent:rdata_fifo_sink_ready -> dma_rd_2_s0_agent:rdata_fifo_src_ready
	signal cmd_mux_002_src_valid                                                                       : std_logic;                      -- cmd_mux_002:src_valid -> dma_rd_2_s0_agent:cp_valid
	signal cmd_mux_002_src_data                                                                        : std_logic_vector(691 downto 0); -- cmd_mux_002:src_data -> dma_rd_2_s0_agent:cp_data
	signal cmd_mux_002_src_ready                                                                       : std_logic;                      -- dma_rd_2_s0_agent:cp_ready -> cmd_mux_002:src_ready
	signal cmd_mux_002_src_channel                                                                     : std_logic_vector(3 downto 0);   -- cmd_mux_002:src_channel -> dma_rd_2_s0_agent:cp_channel
	signal cmd_mux_002_src_startofpacket                                                               : std_logic;                      -- cmd_mux_002:src_startofpacket -> dma_rd_2_s0_agent:cp_startofpacket
	signal cmd_mux_002_src_endofpacket                                                                 : std_logic;                      -- cmd_mux_002:src_endofpacket -> dma_rd_2_s0_agent:cp_endofpacket
	signal dma_rd_3_s0_agent_rf_source_valid                                                           : std_logic;                      -- dma_rd_3_s0_agent:rf_source_valid -> dma_rd_3_s0_agent_rsp_fifo:in_valid
	signal dma_rd_3_s0_agent_rf_source_data                                                            : std_logic_vector(692 downto 0); -- dma_rd_3_s0_agent:rf_source_data -> dma_rd_3_s0_agent_rsp_fifo:in_data
	signal dma_rd_3_s0_agent_rf_source_ready                                                           : std_logic;                      -- dma_rd_3_s0_agent_rsp_fifo:in_ready -> dma_rd_3_s0_agent:rf_source_ready
	signal dma_rd_3_s0_agent_rf_source_startofpacket                                                   : std_logic;                      -- dma_rd_3_s0_agent:rf_source_startofpacket -> dma_rd_3_s0_agent_rsp_fifo:in_startofpacket
	signal dma_rd_3_s0_agent_rf_source_endofpacket                                                     : std_logic;                      -- dma_rd_3_s0_agent:rf_source_endofpacket -> dma_rd_3_s0_agent_rsp_fifo:in_endofpacket
	signal dma_rd_3_s0_agent_rsp_fifo_out_valid                                                        : std_logic;                      -- dma_rd_3_s0_agent_rsp_fifo:out_valid -> dma_rd_3_s0_agent:rf_sink_valid
	signal dma_rd_3_s0_agent_rsp_fifo_out_data                                                         : std_logic_vector(692 downto 0); -- dma_rd_3_s0_agent_rsp_fifo:out_data -> dma_rd_3_s0_agent:rf_sink_data
	signal dma_rd_3_s0_agent_rsp_fifo_out_ready                                                        : std_logic;                      -- dma_rd_3_s0_agent:rf_sink_ready -> dma_rd_3_s0_agent_rsp_fifo:out_ready
	signal dma_rd_3_s0_agent_rsp_fifo_out_startofpacket                                                : std_logic;                      -- dma_rd_3_s0_agent_rsp_fifo:out_startofpacket -> dma_rd_3_s0_agent:rf_sink_startofpacket
	signal dma_rd_3_s0_agent_rsp_fifo_out_endofpacket                                                  : std_logic;                      -- dma_rd_3_s0_agent_rsp_fifo:out_endofpacket -> dma_rd_3_s0_agent:rf_sink_endofpacket
	signal dma_rd_3_s0_agent_rdata_fifo_src_valid                                                      : std_logic;                      -- dma_rd_3_s0_agent:rdata_fifo_src_valid -> dma_rd_3_s0_agent:rdata_fifo_sink_valid
	signal dma_rd_3_s0_agent_rdata_fifo_src_data                                                       : std_logic_vector(513 downto 0); -- dma_rd_3_s0_agent:rdata_fifo_src_data -> dma_rd_3_s0_agent:rdata_fifo_sink_data
	signal dma_rd_3_s0_agent_rdata_fifo_src_ready                                                      : std_logic;                      -- dma_rd_3_s0_agent:rdata_fifo_sink_ready -> dma_rd_3_s0_agent:rdata_fifo_src_ready
	signal cmd_mux_003_src_valid                                                                       : std_logic;                      -- cmd_mux_003:src_valid -> dma_rd_3_s0_agent:cp_valid
	signal cmd_mux_003_src_data                                                                        : std_logic_vector(691 downto 0); -- cmd_mux_003:src_data -> dma_rd_3_s0_agent:cp_data
	signal cmd_mux_003_src_ready                                                                       : std_logic;                      -- dma_rd_3_s0_agent:cp_ready -> cmd_mux_003:src_ready
	signal cmd_mux_003_src_channel                                                                     : std_logic_vector(3 downto 0);   -- cmd_mux_003:src_channel -> dma_rd_3_s0_agent:cp_channel
	signal cmd_mux_003_src_startofpacket                                                               : std_logic;                      -- cmd_mux_003:src_startofpacket -> dma_rd_3_s0_agent:cp_startofpacket
	signal cmd_mux_003_src_endofpacket                                                                 : std_logic;                      -- cmd_mux_003:src_endofpacket -> dma_rd_3_s0_agent:cp_endofpacket
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent_cp_valid                                     : std_logic;                      -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:cp_valid -> router:sink_valid
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent_cp_data                                      : std_logic_vector(691 downto 0); -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:cp_data -> router:sink_data
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent_cp_ready                                     : std_logic;                      -- router:sink_ready -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:cp_ready
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent_cp_startofpacket                             : std_logic;                      -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:cp_startofpacket -> router:sink_startofpacket
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent_cp_endofpacket                               : std_logic;                      -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:cp_endofpacket -> router:sink_endofpacket
	signal router_src_valid                                                                            : std_logic;                      -- router:src_valid -> cmd_demux:sink_valid
	signal router_src_data                                                                             : std_logic_vector(691 downto 0); -- router:src_data -> cmd_demux:sink_data
	signal router_src_ready                                                                            : std_logic;                      -- cmd_demux:sink_ready -> router:src_ready
	signal router_src_channel                                                                          : std_logic_vector(3 downto 0);   -- router:src_channel -> cmd_demux:sink_channel
	signal router_src_startofpacket                                                                    : std_logic;                      -- router:src_startofpacket -> cmd_demux:sink_startofpacket
	signal router_src_endofpacket                                                                      : std_logic;                      -- router:src_endofpacket -> cmd_demux:sink_endofpacket
	signal dma_rd_0_s0_agent_rp_valid                                                                  : std_logic;                      -- dma_rd_0_s0_agent:rp_valid -> router_001:sink_valid
	signal dma_rd_0_s0_agent_rp_data                                                                   : std_logic_vector(691 downto 0); -- dma_rd_0_s0_agent:rp_data -> router_001:sink_data
	signal dma_rd_0_s0_agent_rp_ready                                                                  : std_logic;                      -- router_001:sink_ready -> dma_rd_0_s0_agent:rp_ready
	signal dma_rd_0_s0_agent_rp_startofpacket                                                          : std_logic;                      -- dma_rd_0_s0_agent:rp_startofpacket -> router_001:sink_startofpacket
	signal dma_rd_0_s0_agent_rp_endofpacket                                                            : std_logic;                      -- dma_rd_0_s0_agent:rp_endofpacket -> router_001:sink_endofpacket
	signal router_001_src_valid                                                                        : std_logic;                      -- router_001:src_valid -> rsp_demux:sink_valid
	signal router_001_src_data                                                                         : std_logic_vector(691 downto 0); -- router_001:src_data -> rsp_demux:sink_data
	signal router_001_src_ready                                                                        : std_logic;                      -- rsp_demux:sink_ready -> router_001:src_ready
	signal router_001_src_channel                                                                      : std_logic_vector(3 downto 0);   -- router_001:src_channel -> rsp_demux:sink_channel
	signal router_001_src_startofpacket                                                                : std_logic;                      -- router_001:src_startofpacket -> rsp_demux:sink_startofpacket
	signal router_001_src_endofpacket                                                                  : std_logic;                      -- router_001:src_endofpacket -> rsp_demux:sink_endofpacket
	signal dma_rd_1_s0_agent_rp_valid                                                                  : std_logic;                      -- dma_rd_1_s0_agent:rp_valid -> router_002:sink_valid
	signal dma_rd_1_s0_agent_rp_data                                                                   : std_logic_vector(691 downto 0); -- dma_rd_1_s0_agent:rp_data -> router_002:sink_data
	signal dma_rd_1_s0_agent_rp_ready                                                                  : std_logic;                      -- router_002:sink_ready -> dma_rd_1_s0_agent:rp_ready
	signal dma_rd_1_s0_agent_rp_startofpacket                                                          : std_logic;                      -- dma_rd_1_s0_agent:rp_startofpacket -> router_002:sink_startofpacket
	signal dma_rd_1_s0_agent_rp_endofpacket                                                            : std_logic;                      -- dma_rd_1_s0_agent:rp_endofpacket -> router_002:sink_endofpacket
	signal router_002_src_valid                                                                        : std_logic;                      -- router_002:src_valid -> rsp_demux_001:sink_valid
	signal router_002_src_data                                                                         : std_logic_vector(691 downto 0); -- router_002:src_data -> rsp_demux_001:sink_data
	signal router_002_src_ready                                                                        : std_logic;                      -- rsp_demux_001:sink_ready -> router_002:src_ready
	signal router_002_src_channel                                                                      : std_logic_vector(3 downto 0);   -- router_002:src_channel -> rsp_demux_001:sink_channel
	signal router_002_src_startofpacket                                                                : std_logic;                      -- router_002:src_startofpacket -> rsp_demux_001:sink_startofpacket
	signal router_002_src_endofpacket                                                                  : std_logic;                      -- router_002:src_endofpacket -> rsp_demux_001:sink_endofpacket
	signal dma_rd_2_s0_agent_rp_valid                                                                  : std_logic;                      -- dma_rd_2_s0_agent:rp_valid -> router_003:sink_valid
	signal dma_rd_2_s0_agent_rp_data                                                                   : std_logic_vector(691 downto 0); -- dma_rd_2_s0_agent:rp_data -> router_003:sink_data
	signal dma_rd_2_s0_agent_rp_ready                                                                  : std_logic;                      -- router_003:sink_ready -> dma_rd_2_s0_agent:rp_ready
	signal dma_rd_2_s0_agent_rp_startofpacket                                                          : std_logic;                      -- dma_rd_2_s0_agent:rp_startofpacket -> router_003:sink_startofpacket
	signal dma_rd_2_s0_agent_rp_endofpacket                                                            : std_logic;                      -- dma_rd_2_s0_agent:rp_endofpacket -> router_003:sink_endofpacket
	signal router_003_src_valid                                                                        : std_logic;                      -- router_003:src_valid -> rsp_demux_002:sink_valid
	signal router_003_src_data                                                                         : std_logic_vector(691 downto 0); -- router_003:src_data -> rsp_demux_002:sink_data
	signal router_003_src_ready                                                                        : std_logic;                      -- rsp_demux_002:sink_ready -> router_003:src_ready
	signal router_003_src_channel                                                                      : std_logic_vector(3 downto 0);   -- router_003:src_channel -> rsp_demux_002:sink_channel
	signal router_003_src_startofpacket                                                                : std_logic;                      -- router_003:src_startofpacket -> rsp_demux_002:sink_startofpacket
	signal router_003_src_endofpacket                                                                  : std_logic;                      -- router_003:src_endofpacket -> rsp_demux_002:sink_endofpacket
	signal dma_rd_3_s0_agent_rp_valid                                                                  : std_logic;                      -- dma_rd_3_s0_agent:rp_valid -> router_004:sink_valid
	signal dma_rd_3_s0_agent_rp_data                                                                   : std_logic_vector(691 downto 0); -- dma_rd_3_s0_agent:rp_data -> router_004:sink_data
	signal dma_rd_3_s0_agent_rp_ready                                                                  : std_logic;                      -- router_004:sink_ready -> dma_rd_3_s0_agent:rp_ready
	signal dma_rd_3_s0_agent_rp_startofpacket                                                          : std_logic;                      -- dma_rd_3_s0_agent:rp_startofpacket -> router_004:sink_startofpacket
	signal dma_rd_3_s0_agent_rp_endofpacket                                                            : std_logic;                      -- dma_rd_3_s0_agent:rp_endofpacket -> router_004:sink_endofpacket
	signal router_004_src_valid                                                                        : std_logic;                      -- router_004:src_valid -> rsp_demux_003:sink_valid
	signal router_004_src_data                                                                         : std_logic_vector(691 downto 0); -- router_004:src_data -> rsp_demux_003:sink_data
	signal router_004_src_ready                                                                        : std_logic;                      -- rsp_demux_003:sink_ready -> router_004:src_ready
	signal router_004_src_channel                                                                      : std_logic_vector(3 downto 0);   -- router_004:src_channel -> rsp_demux_003:sink_channel
	signal router_004_src_startofpacket                                                                : std_logic;                      -- router_004:src_startofpacket -> rsp_demux_003:sink_startofpacket
	signal router_004_src_endofpacket                                                                  : std_logic;                      -- router_004:src_endofpacket -> rsp_demux_003:sink_endofpacket
	signal cmd_demux_src0_valid                                                                        : std_logic;                      -- cmd_demux:src0_valid -> cmd_mux:sink0_valid
	signal cmd_demux_src0_data                                                                         : std_logic_vector(691 downto 0); -- cmd_demux:src0_data -> cmd_mux:sink0_data
	signal cmd_demux_src0_ready                                                                        : std_logic;                      -- cmd_mux:sink0_ready -> cmd_demux:src0_ready
	signal cmd_demux_src0_channel                                                                      : std_logic_vector(3 downto 0);   -- cmd_demux:src0_channel -> cmd_mux:sink0_channel
	signal cmd_demux_src0_startofpacket                                                                : std_logic;                      -- cmd_demux:src0_startofpacket -> cmd_mux:sink0_startofpacket
	signal cmd_demux_src0_endofpacket                                                                  : std_logic;                      -- cmd_demux:src0_endofpacket -> cmd_mux:sink0_endofpacket
	signal cmd_demux_src1_valid                                                                        : std_logic;                      -- cmd_demux:src1_valid -> cmd_mux_001:sink0_valid
	signal cmd_demux_src1_data                                                                         : std_logic_vector(691 downto 0); -- cmd_demux:src1_data -> cmd_mux_001:sink0_data
	signal cmd_demux_src1_ready                                                                        : std_logic;                      -- cmd_mux_001:sink0_ready -> cmd_demux:src1_ready
	signal cmd_demux_src1_channel                                                                      : std_logic_vector(3 downto 0);   -- cmd_demux:src1_channel -> cmd_mux_001:sink0_channel
	signal cmd_demux_src1_startofpacket                                                                : std_logic;                      -- cmd_demux:src1_startofpacket -> cmd_mux_001:sink0_startofpacket
	signal cmd_demux_src1_endofpacket                                                                  : std_logic;                      -- cmd_demux:src1_endofpacket -> cmd_mux_001:sink0_endofpacket
	signal cmd_demux_src2_valid                                                                        : std_logic;                      -- cmd_demux:src2_valid -> cmd_mux_002:sink0_valid
	signal cmd_demux_src2_data                                                                         : std_logic_vector(691 downto 0); -- cmd_demux:src2_data -> cmd_mux_002:sink0_data
	signal cmd_demux_src2_ready                                                                        : std_logic;                      -- cmd_mux_002:sink0_ready -> cmd_demux:src2_ready
	signal cmd_demux_src2_channel                                                                      : std_logic_vector(3 downto 0);   -- cmd_demux:src2_channel -> cmd_mux_002:sink0_channel
	signal cmd_demux_src2_startofpacket                                                                : std_logic;                      -- cmd_demux:src2_startofpacket -> cmd_mux_002:sink0_startofpacket
	signal cmd_demux_src2_endofpacket                                                                  : std_logic;                      -- cmd_demux:src2_endofpacket -> cmd_mux_002:sink0_endofpacket
	signal cmd_demux_src3_valid                                                                        : std_logic;                      -- cmd_demux:src3_valid -> cmd_mux_003:sink0_valid
	signal cmd_demux_src3_data                                                                         : std_logic_vector(691 downto 0); -- cmd_demux:src3_data -> cmd_mux_003:sink0_data
	signal cmd_demux_src3_ready                                                                        : std_logic;                      -- cmd_mux_003:sink0_ready -> cmd_demux:src3_ready
	signal cmd_demux_src3_channel                                                                      : std_logic_vector(3 downto 0);   -- cmd_demux:src3_channel -> cmd_mux_003:sink0_channel
	signal cmd_demux_src3_startofpacket                                                                : std_logic;                      -- cmd_demux:src3_startofpacket -> cmd_mux_003:sink0_startofpacket
	signal cmd_demux_src3_endofpacket                                                                  : std_logic;                      -- cmd_demux:src3_endofpacket -> cmd_mux_003:sink0_endofpacket
	signal rsp_demux_src0_valid                                                                        : std_logic;                      -- rsp_demux:src0_valid -> rsp_mux:sink0_valid
	signal rsp_demux_src0_data                                                                         : std_logic_vector(691 downto 0); -- rsp_demux:src0_data -> rsp_mux:sink0_data
	signal rsp_demux_src0_ready                                                                        : std_logic;                      -- rsp_mux:sink0_ready -> rsp_demux:src0_ready
	signal rsp_demux_src0_channel                                                                      : std_logic_vector(3 downto 0);   -- rsp_demux:src0_channel -> rsp_mux:sink0_channel
	signal rsp_demux_src0_startofpacket                                                                : std_logic;                      -- rsp_demux:src0_startofpacket -> rsp_mux:sink0_startofpacket
	signal rsp_demux_src0_endofpacket                                                                  : std_logic;                      -- rsp_demux:src0_endofpacket -> rsp_mux:sink0_endofpacket
	signal rsp_demux_001_src0_valid                                                                    : std_logic;                      -- rsp_demux_001:src0_valid -> rsp_mux:sink1_valid
	signal rsp_demux_001_src0_data                                                                     : std_logic_vector(691 downto 0); -- rsp_demux_001:src0_data -> rsp_mux:sink1_data
	signal rsp_demux_001_src0_ready                                                                    : std_logic;                      -- rsp_mux:sink1_ready -> rsp_demux_001:src0_ready
	signal rsp_demux_001_src0_channel                                                                  : std_logic_vector(3 downto 0);   -- rsp_demux_001:src0_channel -> rsp_mux:sink1_channel
	signal rsp_demux_001_src0_startofpacket                                                            : std_logic;                      -- rsp_demux_001:src0_startofpacket -> rsp_mux:sink1_startofpacket
	signal rsp_demux_001_src0_endofpacket                                                              : std_logic;                      -- rsp_demux_001:src0_endofpacket -> rsp_mux:sink1_endofpacket
	signal rsp_demux_002_src0_valid                                                                    : std_logic;                      -- rsp_demux_002:src0_valid -> rsp_mux:sink2_valid
	signal rsp_demux_002_src0_data                                                                     : std_logic_vector(691 downto 0); -- rsp_demux_002:src0_data -> rsp_mux:sink2_data
	signal rsp_demux_002_src0_ready                                                                    : std_logic;                      -- rsp_mux:sink2_ready -> rsp_demux_002:src0_ready
	signal rsp_demux_002_src0_channel                                                                  : std_logic_vector(3 downto 0);   -- rsp_demux_002:src0_channel -> rsp_mux:sink2_channel
	signal rsp_demux_002_src0_startofpacket                                                            : std_logic;                      -- rsp_demux_002:src0_startofpacket -> rsp_mux:sink2_startofpacket
	signal rsp_demux_002_src0_endofpacket                                                              : std_logic;                      -- rsp_demux_002:src0_endofpacket -> rsp_mux:sink2_endofpacket
	signal rsp_demux_003_src0_valid                                                                    : std_logic;                      -- rsp_demux_003:src0_valid -> rsp_mux:sink3_valid
	signal rsp_demux_003_src0_data                                                                     : std_logic_vector(691 downto 0); -- rsp_demux_003:src0_data -> rsp_mux:sink3_data
	signal rsp_demux_003_src0_ready                                                                    : std_logic;                      -- rsp_mux:sink3_ready -> rsp_demux_003:src0_ready
	signal rsp_demux_003_src0_channel                                                                  : std_logic_vector(3 downto 0);   -- rsp_demux_003:src0_channel -> rsp_mux:sink3_channel
	signal rsp_demux_003_src0_startofpacket                                                            : std_logic;                      -- rsp_demux_003:src0_startofpacket -> rsp_mux:sink3_startofpacket
	signal rsp_demux_003_src0_endofpacket                                                              : std_logic;                      -- rsp_demux_003:src0_endofpacket -> rsp_mux:sink3_endofpacket
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_readdata          : std_logic_vector(511 downto 0); -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:av_readdata -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:m0_readdata
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_waitrequest       : std_logic;                      -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:av_waitrequest -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:m0_waitrequest
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_debugaccess       : std_logic;                      -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:m0_debugaccess -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:av_debugaccess
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_read              : std_logic;                      -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:m0_read -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:av_read
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_address           : std_logic_vector(63 downto 0);  -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:m0_address -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:av_address
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_byteenable        : std_logic_vector(63 downto 0);  -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:m0_byteenable -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:av_byteenable
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_readdatavalid     : std_logic;                      -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:av_readdatavalid -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:m0_readdatavalid
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_lock              : std_logic;                      -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:m0_lock -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:av_lock
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_write             : std_logic;                      -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:m0_write -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:av_write
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_writedata         : std_logic_vector(511 downto 0); -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:m0_writedata -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:av_writedata
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_burstcount        : std_logic_vector(9 downto 0);   -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:m0_burstcount -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent:av_burstcount
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_waitrequest   : std_logic;                      -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:s0_waitrequest -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator:uav_waitrequest
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_readdata      : std_logic_vector(511 downto 0); -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:s0_readdata -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator:uav_readdata
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_debugaccess   : std_logic;                      -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator:uav_debugaccess -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:s0_debugaccess
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_address       : std_logic_vector(63 downto 0);  -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator:uav_address -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:s0_address
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_read          : std_logic;                      -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator:uav_read -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:s0_read
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_byteenable    : std_logic_vector(63 downto 0);  -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator:uav_byteenable -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:s0_byteenable
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_readdatavalid : std_logic;                      -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:s0_readdatavalid -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator:uav_readdatavalid
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_lock          : std_logic;                      -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator:uav_lock -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:s0_lock
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_write         : std_logic;                      -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator:uav_write -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:s0_write
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_writedata     : std_logic_vector(511 downto 0); -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator:uav_writedata -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:s0_writedata
	signal intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_burstcount    : std_logic_vector(9 downto 0);   -- intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator:uav_burstcount -> intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter:s0_burstcount
	signal dma_rd_0_s0_agent_m0_readdata                                                               : std_logic_vector(511 downto 0); -- dma_rd_0_s0_waitrequest_allowance_adapter:s0_readdata -> dma_rd_0_s0_agent:m0_readdata
	signal dma_rd_0_s0_agent_m0_waitrequest                                                            : std_logic;                      -- dma_rd_0_s0_waitrequest_allowance_adapter:s0_waitrequest -> dma_rd_0_s0_agent:m0_waitrequest
	signal dma_rd_0_s0_agent_m0_debugaccess                                                            : std_logic;                      -- dma_rd_0_s0_agent:m0_debugaccess -> dma_rd_0_s0_waitrequest_allowance_adapter:s0_debugaccess
	signal dma_rd_0_s0_agent_m0_address                                                                : std_logic_vector(63 downto 0);  -- dma_rd_0_s0_agent:m0_address -> dma_rd_0_s0_waitrequest_allowance_adapter:s0_address
	signal dma_rd_0_s0_agent_m0_byteenable                                                             : std_logic_vector(63 downto 0);  -- dma_rd_0_s0_agent:m0_byteenable -> dma_rd_0_s0_waitrequest_allowance_adapter:s0_byteenable
	signal dma_rd_0_s0_agent_m0_read                                                                   : std_logic;                      -- dma_rd_0_s0_agent:m0_read -> dma_rd_0_s0_waitrequest_allowance_adapter:s0_read
	signal dma_rd_0_s0_agent_m0_readdatavalid                                                          : std_logic;                      -- dma_rd_0_s0_waitrequest_allowance_adapter:s0_readdatavalid -> dma_rd_0_s0_agent:m0_readdatavalid
	signal dma_rd_0_s0_agent_m0_lock                                                                   : std_logic;                      -- dma_rd_0_s0_agent:m0_lock -> dma_rd_0_s0_waitrequest_allowance_adapter:s0_lock
	signal dma_rd_0_s0_agent_m0_writedata                                                              : std_logic_vector(511 downto 0); -- dma_rd_0_s0_agent:m0_writedata -> dma_rd_0_s0_waitrequest_allowance_adapter:s0_writedata
	signal dma_rd_0_s0_agent_m0_write                                                                  : std_logic;                      -- dma_rd_0_s0_agent:m0_write -> dma_rd_0_s0_waitrequest_allowance_adapter:s0_write
	signal dma_rd_0_s0_agent_m0_burstcount                                                             : std_logic_vector(9 downto 0);   -- dma_rd_0_s0_agent:m0_burstcount -> dma_rd_0_s0_waitrequest_allowance_adapter:s0_burstcount
	signal dma_rd_0_s0_waitrequest_allowance_adapter_m0_readdata                                       : std_logic_vector(511 downto 0); -- dma_rd_0_s0_translator:uav_readdata -> dma_rd_0_s0_waitrequest_allowance_adapter:m0_readdata
	signal dma_rd_0_s0_waitrequest_allowance_adapter_m0_waitrequest                                    : std_logic;                      -- dma_rd_0_s0_translator:uav_waitrequest -> dma_rd_0_s0_waitrequest_allowance_adapter:m0_waitrequest
	signal dma_rd_0_s0_waitrequest_allowance_adapter_m0_debugaccess                                    : std_logic;                      -- dma_rd_0_s0_waitrequest_allowance_adapter:m0_debugaccess -> dma_rd_0_s0_translator:uav_debugaccess
	signal dma_rd_0_s0_waitrequest_allowance_adapter_m0_read                                           : std_logic;                      -- dma_rd_0_s0_waitrequest_allowance_adapter:m0_read -> dma_rd_0_s0_translator:uav_read
	signal dma_rd_0_s0_waitrequest_allowance_adapter_m0_address                                        : std_logic_vector(63 downto 0);  -- dma_rd_0_s0_waitrequest_allowance_adapter:m0_address -> dma_rd_0_s0_translator:uav_address
	signal dma_rd_0_s0_waitrequest_allowance_adapter_m0_byteenable                                     : std_logic_vector(63 downto 0);  -- dma_rd_0_s0_waitrequest_allowance_adapter:m0_byteenable -> dma_rd_0_s0_translator:uav_byteenable
	signal dma_rd_0_s0_waitrequest_allowance_adapter_m0_readdatavalid                                  : std_logic;                      -- dma_rd_0_s0_translator:uav_readdatavalid -> dma_rd_0_s0_waitrequest_allowance_adapter:m0_readdatavalid
	signal dma_rd_0_s0_waitrequest_allowance_adapter_m0_lock                                           : std_logic;                      -- dma_rd_0_s0_waitrequest_allowance_adapter:m0_lock -> dma_rd_0_s0_translator:uav_lock
	signal dma_rd_0_s0_waitrequest_allowance_adapter_m0_write                                          : std_logic;                      -- dma_rd_0_s0_waitrequest_allowance_adapter:m0_write -> dma_rd_0_s0_translator:uav_write
	signal dma_rd_0_s0_waitrequest_allowance_adapter_m0_writedata                                      : std_logic_vector(511 downto 0); -- dma_rd_0_s0_waitrequest_allowance_adapter:m0_writedata -> dma_rd_0_s0_translator:uav_writedata
	signal dma_rd_0_s0_waitrequest_allowance_adapter_m0_burstcount                                     : std_logic_vector(9 downto 0);   -- dma_rd_0_s0_waitrequest_allowance_adapter:m0_burstcount -> dma_rd_0_s0_translator:uav_burstcount
	signal dma_rd_1_s0_agent_m0_readdata                                                               : std_logic_vector(511 downto 0); -- dma_rd_1_s0_waitrequest_allowance_adapter:s0_readdata -> dma_rd_1_s0_agent:m0_readdata
	signal dma_rd_1_s0_agent_m0_waitrequest                                                            : std_logic;                      -- dma_rd_1_s0_waitrequest_allowance_adapter:s0_waitrequest -> dma_rd_1_s0_agent:m0_waitrequest
	signal dma_rd_1_s0_agent_m0_debugaccess                                                            : std_logic;                      -- dma_rd_1_s0_agent:m0_debugaccess -> dma_rd_1_s0_waitrequest_allowance_adapter:s0_debugaccess
	signal dma_rd_1_s0_agent_m0_address                                                                : std_logic_vector(63 downto 0);  -- dma_rd_1_s0_agent:m0_address -> dma_rd_1_s0_waitrequest_allowance_adapter:s0_address
	signal dma_rd_1_s0_agent_m0_byteenable                                                             : std_logic_vector(63 downto 0);  -- dma_rd_1_s0_agent:m0_byteenable -> dma_rd_1_s0_waitrequest_allowance_adapter:s0_byteenable
	signal dma_rd_1_s0_agent_m0_read                                                                   : std_logic;                      -- dma_rd_1_s0_agent:m0_read -> dma_rd_1_s0_waitrequest_allowance_adapter:s0_read
	signal dma_rd_1_s0_agent_m0_readdatavalid                                                          : std_logic;                      -- dma_rd_1_s0_waitrequest_allowance_adapter:s0_readdatavalid -> dma_rd_1_s0_agent:m0_readdatavalid
	signal dma_rd_1_s0_agent_m0_lock                                                                   : std_logic;                      -- dma_rd_1_s0_agent:m0_lock -> dma_rd_1_s0_waitrequest_allowance_adapter:s0_lock
	signal dma_rd_1_s0_agent_m0_writedata                                                              : std_logic_vector(511 downto 0); -- dma_rd_1_s0_agent:m0_writedata -> dma_rd_1_s0_waitrequest_allowance_adapter:s0_writedata
	signal dma_rd_1_s0_agent_m0_write                                                                  : std_logic;                      -- dma_rd_1_s0_agent:m0_write -> dma_rd_1_s0_waitrequest_allowance_adapter:s0_write
	signal dma_rd_1_s0_agent_m0_burstcount                                                             : std_logic_vector(9 downto 0);   -- dma_rd_1_s0_agent:m0_burstcount -> dma_rd_1_s0_waitrequest_allowance_adapter:s0_burstcount
	signal dma_rd_1_s0_waitrequest_allowance_adapter_m0_readdata                                       : std_logic_vector(511 downto 0); -- dma_rd_1_s0_translator:uav_readdata -> dma_rd_1_s0_waitrequest_allowance_adapter:m0_readdata
	signal dma_rd_1_s0_waitrequest_allowance_adapter_m0_waitrequest                                    : std_logic;                      -- dma_rd_1_s0_translator:uav_waitrequest -> dma_rd_1_s0_waitrequest_allowance_adapter:m0_waitrequest
	signal dma_rd_1_s0_waitrequest_allowance_adapter_m0_debugaccess                                    : std_logic;                      -- dma_rd_1_s0_waitrequest_allowance_adapter:m0_debugaccess -> dma_rd_1_s0_translator:uav_debugaccess
	signal dma_rd_1_s0_waitrequest_allowance_adapter_m0_read                                           : std_logic;                      -- dma_rd_1_s0_waitrequest_allowance_adapter:m0_read -> dma_rd_1_s0_translator:uav_read
	signal dma_rd_1_s0_waitrequest_allowance_adapter_m0_address                                        : std_logic_vector(63 downto 0);  -- dma_rd_1_s0_waitrequest_allowance_adapter:m0_address -> dma_rd_1_s0_translator:uav_address
	signal dma_rd_1_s0_waitrequest_allowance_adapter_m0_byteenable                                     : std_logic_vector(63 downto 0);  -- dma_rd_1_s0_waitrequest_allowance_adapter:m0_byteenable -> dma_rd_1_s0_translator:uav_byteenable
	signal dma_rd_1_s0_waitrequest_allowance_adapter_m0_readdatavalid                                  : std_logic;                      -- dma_rd_1_s0_translator:uav_readdatavalid -> dma_rd_1_s0_waitrequest_allowance_adapter:m0_readdatavalid
	signal dma_rd_1_s0_waitrequest_allowance_adapter_m0_lock                                           : std_logic;                      -- dma_rd_1_s0_waitrequest_allowance_adapter:m0_lock -> dma_rd_1_s0_translator:uav_lock
	signal dma_rd_1_s0_waitrequest_allowance_adapter_m0_write                                          : std_logic;                      -- dma_rd_1_s0_waitrequest_allowance_adapter:m0_write -> dma_rd_1_s0_translator:uav_write
	signal dma_rd_1_s0_waitrequest_allowance_adapter_m0_writedata                                      : std_logic_vector(511 downto 0); -- dma_rd_1_s0_waitrequest_allowance_adapter:m0_writedata -> dma_rd_1_s0_translator:uav_writedata
	signal dma_rd_1_s0_waitrequest_allowance_adapter_m0_burstcount                                     : std_logic_vector(9 downto 0);   -- dma_rd_1_s0_waitrequest_allowance_adapter:m0_burstcount -> dma_rd_1_s0_translator:uav_burstcount
	signal dma_rd_2_s0_agent_m0_readdata                                                               : std_logic_vector(511 downto 0); -- dma_rd_2_s0_waitrequest_allowance_adapter:s0_readdata -> dma_rd_2_s0_agent:m0_readdata
	signal dma_rd_2_s0_agent_m0_waitrequest                                                            : std_logic;                      -- dma_rd_2_s0_waitrequest_allowance_adapter:s0_waitrequest -> dma_rd_2_s0_agent:m0_waitrequest
	signal dma_rd_2_s0_agent_m0_debugaccess                                                            : std_logic;                      -- dma_rd_2_s0_agent:m0_debugaccess -> dma_rd_2_s0_waitrequest_allowance_adapter:s0_debugaccess
	signal dma_rd_2_s0_agent_m0_address                                                                : std_logic_vector(63 downto 0);  -- dma_rd_2_s0_agent:m0_address -> dma_rd_2_s0_waitrequest_allowance_adapter:s0_address
	signal dma_rd_2_s0_agent_m0_byteenable                                                             : std_logic_vector(63 downto 0);  -- dma_rd_2_s0_agent:m0_byteenable -> dma_rd_2_s0_waitrequest_allowance_adapter:s0_byteenable
	signal dma_rd_2_s0_agent_m0_read                                                                   : std_logic;                      -- dma_rd_2_s0_agent:m0_read -> dma_rd_2_s0_waitrequest_allowance_adapter:s0_read
	signal dma_rd_2_s0_agent_m0_readdatavalid                                                          : std_logic;                      -- dma_rd_2_s0_waitrequest_allowance_adapter:s0_readdatavalid -> dma_rd_2_s0_agent:m0_readdatavalid
	signal dma_rd_2_s0_agent_m0_lock                                                                   : std_logic;                      -- dma_rd_2_s0_agent:m0_lock -> dma_rd_2_s0_waitrequest_allowance_adapter:s0_lock
	signal dma_rd_2_s0_agent_m0_writedata                                                              : std_logic_vector(511 downto 0); -- dma_rd_2_s0_agent:m0_writedata -> dma_rd_2_s0_waitrequest_allowance_adapter:s0_writedata
	signal dma_rd_2_s0_agent_m0_write                                                                  : std_logic;                      -- dma_rd_2_s0_agent:m0_write -> dma_rd_2_s0_waitrequest_allowance_adapter:s0_write
	signal dma_rd_2_s0_agent_m0_burstcount                                                             : std_logic_vector(9 downto 0);   -- dma_rd_2_s0_agent:m0_burstcount -> dma_rd_2_s0_waitrequest_allowance_adapter:s0_burstcount
	signal dma_rd_2_s0_waitrequest_allowance_adapter_m0_readdata                                       : std_logic_vector(511 downto 0); -- dma_rd_2_s0_translator:uav_readdata -> dma_rd_2_s0_waitrequest_allowance_adapter:m0_readdata
	signal dma_rd_2_s0_waitrequest_allowance_adapter_m0_waitrequest                                    : std_logic;                      -- dma_rd_2_s0_translator:uav_waitrequest -> dma_rd_2_s0_waitrequest_allowance_adapter:m0_waitrequest
	signal dma_rd_2_s0_waitrequest_allowance_adapter_m0_debugaccess                                    : std_logic;                      -- dma_rd_2_s0_waitrequest_allowance_adapter:m0_debugaccess -> dma_rd_2_s0_translator:uav_debugaccess
	signal dma_rd_2_s0_waitrequest_allowance_adapter_m0_read                                           : std_logic;                      -- dma_rd_2_s0_waitrequest_allowance_adapter:m0_read -> dma_rd_2_s0_translator:uav_read
	signal dma_rd_2_s0_waitrequest_allowance_adapter_m0_address                                        : std_logic_vector(63 downto 0);  -- dma_rd_2_s0_waitrequest_allowance_adapter:m0_address -> dma_rd_2_s0_translator:uav_address
	signal dma_rd_2_s0_waitrequest_allowance_adapter_m0_byteenable                                     : std_logic_vector(63 downto 0);  -- dma_rd_2_s0_waitrequest_allowance_adapter:m0_byteenable -> dma_rd_2_s0_translator:uav_byteenable
	signal dma_rd_2_s0_waitrequest_allowance_adapter_m0_readdatavalid                                  : std_logic;                      -- dma_rd_2_s0_translator:uav_readdatavalid -> dma_rd_2_s0_waitrequest_allowance_adapter:m0_readdatavalid
	signal dma_rd_2_s0_waitrequest_allowance_adapter_m0_lock                                           : std_logic;                      -- dma_rd_2_s0_waitrequest_allowance_adapter:m0_lock -> dma_rd_2_s0_translator:uav_lock
	signal dma_rd_2_s0_waitrequest_allowance_adapter_m0_write                                          : std_logic;                      -- dma_rd_2_s0_waitrequest_allowance_adapter:m0_write -> dma_rd_2_s0_translator:uav_write
	signal dma_rd_2_s0_waitrequest_allowance_adapter_m0_writedata                                      : std_logic_vector(511 downto 0); -- dma_rd_2_s0_waitrequest_allowance_adapter:m0_writedata -> dma_rd_2_s0_translator:uav_writedata
	signal dma_rd_2_s0_waitrequest_allowance_adapter_m0_burstcount                                     : std_logic_vector(9 downto 0);   -- dma_rd_2_s0_waitrequest_allowance_adapter:m0_burstcount -> dma_rd_2_s0_translator:uav_burstcount
	signal dma_rd_3_s0_agent_m0_readdata                                                               : std_logic_vector(511 downto 0); -- dma_rd_3_s0_waitrequest_allowance_adapter:s0_readdata -> dma_rd_3_s0_agent:m0_readdata
	signal dma_rd_3_s0_agent_m0_waitrequest                                                            : std_logic;                      -- dma_rd_3_s0_waitrequest_allowance_adapter:s0_waitrequest -> dma_rd_3_s0_agent:m0_waitrequest
	signal dma_rd_3_s0_agent_m0_debugaccess                                                            : std_logic;                      -- dma_rd_3_s0_agent:m0_debugaccess -> dma_rd_3_s0_waitrequest_allowance_adapter:s0_debugaccess
	signal dma_rd_3_s0_agent_m0_address                                                                : std_logic_vector(63 downto 0);  -- dma_rd_3_s0_agent:m0_address -> dma_rd_3_s0_waitrequest_allowance_adapter:s0_address
	signal dma_rd_3_s0_agent_m0_byteenable                                                             : std_logic_vector(63 downto 0);  -- dma_rd_3_s0_agent:m0_byteenable -> dma_rd_3_s0_waitrequest_allowance_adapter:s0_byteenable
	signal dma_rd_3_s0_agent_m0_read                                                                   : std_logic;                      -- dma_rd_3_s0_agent:m0_read -> dma_rd_3_s0_waitrequest_allowance_adapter:s0_read
	signal dma_rd_3_s0_agent_m0_readdatavalid                                                          : std_logic;                      -- dma_rd_3_s0_waitrequest_allowance_adapter:s0_readdatavalid -> dma_rd_3_s0_agent:m0_readdatavalid
	signal dma_rd_3_s0_agent_m0_lock                                                                   : std_logic;                      -- dma_rd_3_s0_agent:m0_lock -> dma_rd_3_s0_waitrequest_allowance_adapter:s0_lock
	signal dma_rd_3_s0_agent_m0_writedata                                                              : std_logic_vector(511 downto 0); -- dma_rd_3_s0_agent:m0_writedata -> dma_rd_3_s0_waitrequest_allowance_adapter:s0_writedata
	signal dma_rd_3_s0_agent_m0_write                                                                  : std_logic;                      -- dma_rd_3_s0_agent:m0_write -> dma_rd_3_s0_waitrequest_allowance_adapter:s0_write
	signal dma_rd_3_s0_agent_m0_burstcount                                                             : std_logic_vector(9 downto 0);   -- dma_rd_3_s0_agent:m0_burstcount -> dma_rd_3_s0_waitrequest_allowance_adapter:s0_burstcount
	signal dma_rd_3_s0_waitrequest_allowance_adapter_m0_readdata                                       : std_logic_vector(511 downto 0); -- dma_rd_3_s0_translator:uav_readdata -> dma_rd_3_s0_waitrequest_allowance_adapter:m0_readdata
	signal dma_rd_3_s0_waitrequest_allowance_adapter_m0_waitrequest                                    : std_logic;                      -- dma_rd_3_s0_translator:uav_waitrequest -> dma_rd_3_s0_waitrequest_allowance_adapter:m0_waitrequest
	signal dma_rd_3_s0_waitrequest_allowance_adapter_m0_debugaccess                                    : std_logic;                      -- dma_rd_3_s0_waitrequest_allowance_adapter:m0_debugaccess -> dma_rd_3_s0_translator:uav_debugaccess
	signal dma_rd_3_s0_waitrequest_allowance_adapter_m0_read                                           : std_logic;                      -- dma_rd_3_s0_waitrequest_allowance_adapter:m0_read -> dma_rd_3_s0_translator:uav_read
	signal dma_rd_3_s0_waitrequest_allowance_adapter_m0_address                                        : std_logic_vector(63 downto 0);  -- dma_rd_3_s0_waitrequest_allowance_adapter:m0_address -> dma_rd_3_s0_translator:uav_address
	signal dma_rd_3_s0_waitrequest_allowance_adapter_m0_byteenable                                     : std_logic_vector(63 downto 0);  -- dma_rd_3_s0_waitrequest_allowance_adapter:m0_byteenable -> dma_rd_3_s0_translator:uav_byteenable
	signal dma_rd_3_s0_waitrequest_allowance_adapter_m0_readdatavalid                                  : std_logic;                      -- dma_rd_3_s0_translator:uav_readdatavalid -> dma_rd_3_s0_waitrequest_allowance_adapter:m0_readdatavalid
	signal dma_rd_3_s0_waitrequest_allowance_adapter_m0_lock                                           : std_logic;                      -- dma_rd_3_s0_waitrequest_allowance_adapter:m0_lock -> dma_rd_3_s0_translator:uav_lock
	signal dma_rd_3_s0_waitrequest_allowance_adapter_m0_write                                          : std_logic;                      -- dma_rd_3_s0_waitrequest_allowance_adapter:m0_write -> dma_rd_3_s0_translator:uav_write
	signal dma_rd_3_s0_waitrequest_allowance_adapter_m0_writedata                                      : std_logic_vector(511 downto 0); -- dma_rd_3_s0_waitrequest_allowance_adapter:m0_writedata -> dma_rd_3_s0_translator:uav_writedata
	signal dma_rd_3_s0_waitrequest_allowance_adapter_m0_burstcount                                     : std_logic_vector(9 downto 0);   -- dma_rd_3_s0_waitrequest_allowance_adapter:m0_burstcount -> dma_rd_3_s0_translator:uav_burstcount

	for intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator : PCIE_HIP_FDAS_altera_merlin_master_translator_191_q6cbhvi_cmp
		use entity altera_merlin_master_translator_191.PCIE_HIP_FDAS_altera_merlin_master_translator_191_q6cbhvi;
	for dma_rd_0_s0_translator : PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki_cmp
		use entity altera_merlin_slave_translator_191.PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki;
	for dma_rd_1_s0_translator : PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki_cmp
		use entity altera_merlin_slave_translator_191.PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki;
	for dma_rd_2_s0_translator : PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki_cmp
		use entity altera_merlin_slave_translator_191.PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki;
	for dma_rd_3_s0_translator : PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki_cmp
		use entity altera_merlin_slave_translator_191.PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki;
	for intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent : PCIE_HIP_FDAS_altera_merlin_master_agent_191_mpbm6tq_cmp
		use entity altera_merlin_master_agent_191.PCIE_HIP_FDAS_altera_merlin_master_agent_191_mpbm6tq;
	for dma_rd_0_s0_agent : PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri_cmp
		use entity altera_merlin_slave_agent_191.PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri;
	for dma_rd_1_s0_agent : PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri_cmp
		use entity altera_merlin_slave_agent_191.PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri;
	for dma_rd_2_s0_agent : PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri_cmp
		use entity altera_merlin_slave_agent_191.PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri;
	for dma_rd_3_s0_agent : PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri_cmp
		use entity altera_merlin_slave_agent_191.PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri;
	for dma_rd_0_s0_agent_rsp_fifo : PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy_cmp
		use entity altera_avalon_sc_fifo_1931.PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy;
	for dma_rd_1_s0_agent_rsp_fifo : PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy_cmp
		use entity altera_avalon_sc_fifo_1931.PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy;
	for dma_rd_2_s0_agent_rsp_fifo : PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy_cmp
		use entity altera_avalon_sc_fifo_1931.PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy;
	for dma_rd_3_s0_agent_rsp_fifo : PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy_cmp
		use entity altera_avalon_sc_fifo_1931.PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy;
	for router : PCIE_HIP_FDAS_altera_merlin_router_1921_22ekohy_cmp
		use entity altera_merlin_router_1921.PCIE_HIP_FDAS_altera_merlin_router_1921_22ekohy;
	for router_001 : PCIE_HIP_FDAS_altera_merlin_router_1921_j3ubbhi_cmp
		use entity altera_merlin_router_1921.PCIE_HIP_FDAS_altera_merlin_router_1921_j3ubbhi;
	for router_002 : PCIE_HIP_FDAS_altera_merlin_router_1921_j3ubbhi_cmp
		use entity altera_merlin_router_1921.PCIE_HIP_FDAS_altera_merlin_router_1921_j3ubbhi;
	for router_003 : PCIE_HIP_FDAS_altera_merlin_router_1921_j3ubbhi_cmp
		use entity altera_merlin_router_1921.PCIE_HIP_FDAS_altera_merlin_router_1921_j3ubbhi;
	for router_004 : PCIE_HIP_FDAS_altera_merlin_router_1921_j3ubbhi_cmp
		use entity altera_merlin_router_1921.PCIE_HIP_FDAS_altera_merlin_router_1921_j3ubbhi;
	for cmd_demux : PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_wzxjsgi_cmp
		use entity altera_merlin_demultiplexer_1921.PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_wzxjsgi;
	for cmd_mux : PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_jqhnmri_cmp
		use entity altera_merlin_multiplexer_1921.PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_jqhnmri;
	for cmd_mux_001 : PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_jqhnmri_cmp
		use entity altera_merlin_multiplexer_1921.PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_jqhnmri;
	for cmd_mux_002 : PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_jqhnmri_cmp
		use entity altera_merlin_multiplexer_1921.PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_jqhnmri;
	for cmd_mux_003 : PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_jqhnmri_cmp
		use entity altera_merlin_multiplexer_1921.PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_jqhnmri;
	for rsp_demux : PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_aex32mq_cmp
		use entity altera_merlin_demultiplexer_1921.PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_aex32mq;
	for rsp_demux_001 : PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_aex32mq_cmp
		use entity altera_merlin_demultiplexer_1921.PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_aex32mq;
	for rsp_demux_002 : PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_aex32mq_cmp
		use entity altera_merlin_demultiplexer_1921.PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_aex32mq;
	for rsp_demux_003 : PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_aex32mq_cmp
		use entity altera_merlin_demultiplexer_1921.PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_aex32mq;
	for rsp_mux : PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_li4dm4i_cmp
		use entity altera_merlin_multiplexer_1921.PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_li4dm4i;
	for intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter : altera_merlin_waitrequest_adapter_cmp
		use entity altera_merlin_waitrequest_adapter_191.altera_merlin_waitrequest_adapter;
	for dma_rd_0_s0_waitrequest_allowance_adapter : altera_merlin_waitrequest_adapter_cmp
		use entity altera_merlin_waitrequest_adapter_191.altera_merlin_waitrequest_adapter;
	for dma_rd_1_s0_waitrequest_allowance_adapter : altera_merlin_waitrequest_adapter_cmp
		use entity altera_merlin_waitrequest_adapter_191.altera_merlin_waitrequest_adapter;
	for dma_rd_2_s0_waitrequest_allowance_adapter : altera_merlin_waitrequest_adapter_cmp
		use entity altera_merlin_waitrequest_adapter_191.altera_merlin_waitrequest_adapter;
	for dma_rd_3_s0_waitrequest_allowance_adapter : altera_merlin_waitrequest_adapter_cmp
		use entity altera_merlin_waitrequest_adapter_191.altera_merlin_waitrequest_adapter;
begin

	intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator : component PCIE_HIP_FDAS_altera_merlin_master_translator_191_q6cbhvi_cmp
		generic map (
			AV_ADDRESS_W                => 64,
			AV_DATA_W                   => 512,
			AV_BURSTCOUNT_W             => 4,
			AV_BYTEENABLE_W             => 64,
			UAV_ADDRESS_W               => 64,
			UAV_BURSTCOUNT_W            => 10,
			USE_READ                    => 0,
			USE_WRITE                   => 1,
			USE_BEGINBURSTTRANSFER      => 0,
			USE_BEGINTRANSFER           => 0,
			USE_CHIPSELECT              => 0,
			USE_BURSTCOUNT              => 1,
			USE_READDATAVALID           => 0,
			USE_WAITREQUEST             => 1,
			USE_READRESPONSE            => 0,
			USE_WRITERESPONSE           => 0,
			AV_SYMBOLS_PER_WORD         => 64,
			AV_ADDRESS_SYMBOLS          => 1,
			AV_BURSTCOUNT_SYMBOLS       => 0,
			AV_CONSTANT_BURST_BEHAVIOR  => 1,
			UAV_CONSTANT_BURST_BEHAVIOR => 0,
			AV_LINEWRAPBURSTS           => 0,
			AV_REGISTERINCOMINGSIGNALS  => 0,
			SYNC_RESET                  => 1,
			WAITREQUEST_ALLOWANCE       => 16
		)
		port map (
			clk                    => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                        --                       clk.clk
			reset                  => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset,       --                     reset.reset
			uav_address            => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_address,       -- avalon_universal_master_0.address
			uav_burstcount         => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_burstcount,    --                          .burstcount
			uav_read               => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_read,          --                          .read
			uav_write              => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_write,         --                          .write
			uav_waitrequest        => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_waitrequest,   --                          .waitrequest
			uav_readdatavalid      => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_readdatavalid, --                          .readdatavalid
			uav_byteenable         => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_byteenable,    --                          .byteenable
			uav_readdata           => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_readdata,      --                          .readdata
			uav_writedata          => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_writedata,     --                          .writedata
			uav_lock               => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_lock,          --                          .lock
			uav_debugaccess        => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_debugaccess,   --                          .debugaccess
			av_address             => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_address,                                            --      avalon_anti_master_0.address
			av_waitrequest         => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest,                                        --                          .waitrequest
			av_burstcount          => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_burstcount,                                         --                          .burstcount
			av_byteenable          => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_byteenable,                                         --                          .byteenable
			av_write               => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_write,                                              --                          .write
			av_writedata           => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_writedata,                                          --                          .writedata
			av_beginbursttransfer  => '0',                                                                                         --               (terminated)
			av_begintransfer       => '0',                                                                                         --               (terminated)
			av_chipselect          => '0',                                                                                         --               (terminated)
			av_read                => '0',                                                                                         --               (terminated)
			av_readdata            => open,                                                                                        --               (terminated)
			av_readdatavalid       => open,                                                                                        --               (terminated)
			av_lock                => '0',                                                                                         --               (terminated)
			av_debugaccess         => '0',                                                                                         --               (terminated)
			uav_clken              => open,                                                                                        --               (terminated)
			av_clken               => '1',                                                                                         --               (terminated)
			uav_response           => "00",                                                                                        --               (terminated)
			av_response            => open,                                                                                        --               (terminated)
			uav_writeresponsevalid => '0',                                                                                         --               (terminated)
			av_writeresponsevalid  => open                                                                                         --               (terminated)
		);

	dma_rd_0_s0_translator : component PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki_cmp
		generic map (
			AV_ADDRESS_W                   => 26,
			AV_DATA_W                      => 512,
			UAV_DATA_W                     => 512,
			AV_BURSTCOUNT_W                => 4,
			AV_BYTEENABLE_W                => 64,
			UAV_BYTEENABLE_W               => 64,
			UAV_ADDRESS_W                  => 64,
			UAV_BURSTCOUNT_W               => 10,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 0,
			USE_WAITREQUEST                => 1,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 64,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 1,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0,
			WAITREQUEST_ALLOWANCE          => 16,
			SYNC_RESET                     => 1
		)
		port map (
			clk                    => intel_pcie_ptile_mcdma_0_app_clk_clkclk.clk
			reset                  => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset,                                                                                                                                                                                                                                                                                                                                                                                                                                              --                    reset.reset
			uav_address            => dma_rd_0_s0_waitrequest_allowance_adapter_m0_address,                                                                                                                                                                                                                                                                                                                                                                                                                                                                               -- avalon_universal_slave_0.address
			uav_burstcount         => dma_rd_0_s0_waitrequest_allowance_adapter_m0_burstcount,                                                                                                                                                                                                                                                                                                                                                                                                                                                                            --                         .burstcount
			uav_read               => dma_rd_0_s0_waitrequest_allowance_adapter_m0_read,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  --                         .read
			uav_write              => dma_rd_0_s0_waitrequest_allowance_adapter_m0_write,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 --                         .write
			uav_waitrequest        => dma_rd_0_s0_waitrequest_allowance_adapter_m0_waitrequest,                                                                                                                                                                                                                                                                                                                                                                                                                                                                           --                         .waitrequest
			uav_readdatavalid      => dma_rd_0_s0_waitrequest_allowance_adapter_m0_readdatavalid,                                                                                                                                                                                                                                                                                                                                                                                                                                                                         --                         .readdatavalid
			uav_byteenable         => dma_rd_0_s0_waitrequest_allowance_adapter_m0_byteenable,                                                                                                                                                                                                                                                                                                                                                                                                                                                                            --                         .byteenable
			uav_readdata           => dma_rd_0_s0_waitrequest_allowance_adapter_m0_readdata,                                                                                                                                                                                                                                                                                                                                                                                                                                                                              --                         .readdata
			uav_writedata          => dma_rd_0_s0_waitrequest_allowance_adapter_m0_writedata,                                                                                                                                                                                                                                                                                                                                                                                                                                                                             --                         .writedata
			uav_lock               => dma_rd_0_s0_waitrequest_allowance_adapter_m0_lock,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  --                         .lock
			uav_debugaccess        => dma_rd_0_s0_waitrequest_allowance_adapter_m0_debugaccess,                                                                                                                                                                                                                                                                                                                                                                                                                                                                           --                         .debugaccess
			av_address             => dma_rd_0_s0_addressavalon_anti_slave_0.address
			av_write               => dma_rd_0_s0_writewrite
			av_writedata           => dma_rd_0_s0_writedatawritedata
			av_burstcount          => dma_rd_0_s0_burstcountburstcount
			av_byteenable          => dma_rd_0_s0_byteenablebyteenable
			av_waitrequest         => dma_rd_0_s0_waitrequestwaitrequest
			av_read                => openterminated)
			av_readdataterminated)
			av_begintransfer       => openterminated)
			av_beginbursttransfer  => openterminated)
			av_readdatavalidterminated)
			av_writebyteenable     => openterminated)
			av_lock                => openterminated)
			av_chipselect          => openterminated)
			av_clken               => openterminated)
			uav_clkenterminated)
			av_debugaccess         => openterminated)
			av_outputenable        => openterminated)
			uav_response           => openterminated)
			av_responseterminated)
			uav_writeresponsevalid => openterminated)
			av_writeresponsevalidterminated)
		);

	dma_rd_1_s0_translator : component PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki_cmp
		generic map (
			AV_ADDRESS_W                   => 26,
			AV_DATA_W                      => 512,
			UAV_DATA_W                     => 512,
			AV_BURSTCOUNT_W                => 4,
			AV_BYTEENABLE_W                => 64,
			UAV_BYTEENABLE_W               => 64,
			UAV_ADDRESS_W                  => 64,
			UAV_BURSTCOUNT_W               => 10,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 0,
			USE_WAITREQUEST                => 1,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 64,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 1,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0,
			WAITREQUEST_ALLOWANCE          => 16,
			SYNC_RESET                     => 1
		)
		port map (
			clk                    => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               --                      clk.clk
			reset                  => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset,                                                                                                                                                                                                                                                                                                                                                                                                                                              --                    reset.reset
			uav_address            => dma_rd_1_s0_waitrequest_allowance_adapter_m0_address,                                                                                                                                                                                                                                                                                                                                                                                                                                                                               -- avalon_universal_slave_0.address
			uav_burstcount         => dma_rd_1_s0_waitrequest_allowance_adapter_m0_burstcount,                                                                                                                                                                                                                                                                                                                                                                                                                                                                            --                         .burstcount
			uav_read               => dma_rd_1_s0_waitrequest_allowance_adapter_m0_read,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  --                         .read
			uav_write              => dma_rd_1_s0_waitrequest_allowance_adapter_m0_write,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 --                         .write
			uav_waitrequest        => dma_rd_1_s0_waitrequest_allowance_adapter_m0_waitrequest,                                                                                                                                                                                                                                                                                                                                                                                                                                                                           --                         .waitrequest
			uav_readdatavalid      => dma_rd_1_s0_waitrequest_allowance_adapter_m0_readdatavalid,                                                                                                                                                                                                                                                                                                                                                                                                                                                                         --                         .readdatavalid
			uav_byteenable         => dma_rd_1_s0_waitrequest_allowance_adapter_m0_byteenable,                                                                                                                                                                                                                                                                                                                                                                                                                                                                            --                         .byteenable
			uav_readdata           => dma_rd_1_s0_waitrequest_allowance_adapter_m0_readdata,                                                                                                                                                                                                                                                                                                                                                                                                                                                                              --                         .readdata
			uav_writedata          => dma_rd_1_s0_waitrequest_allowance_adapter_m0_writedata,                                                                                                                                                                                                                                                                                                                                                                                                                                                                             --                         .writedata
			uav_lock               => dma_rd_1_s0_waitrequest_allowance_adapter_m0_lock,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  --                         .lock
			uav_debugaccess        => dma_rd_1_s0_waitrequest_allowance_adapter_m0_debugaccess,                                                                                                                                                                                                                                                                                                                                                                                                                                                                           --                         .debugaccess
			av_address             => dma_rd_1_s0_addressavalon_anti_slave_0.address
			av_write               => dma_rd_1_s0_writewrite
			av_writedata           => dma_rd_1_s0_writedatawritedata
			av_burstcount          => dma_rd_1_s0_burstcountburstcount
			av_byteenable          => dma_rd_1_s0_byteenablebyteenable
			av_waitrequest         => dma_rd_1_s0_waitrequestwaitrequest
			av_read                => openterminated)
			av_readdataterminated)
			av_begintransfer       => openterminated)
			av_beginbursttransfer  => open,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               --              (terminated)
			av_readdatavalidterminated)
			av_writebyteenable     => openterminated)
			av_lock                => openterminated)
			av_chipselect          => open,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               --              (terminated)
			av_clken               => openterminated)
			uav_clkenterminated)
			av_debugaccess         => openterminated)
			av_outputenable        => openterminated)
			uav_response           => openterminated)
			av_responseterminated)
			uav_writeresponsevalid => openterminated)
			av_writeresponsevalidterminated)
		);

	dma_rd_2_s0_translator : component PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki_cmp
		generic map (
			AV_ADDRESS_W                   => 26,
			AV_DATA_W                      => 512,
			UAV_DATA_W                     => 512,
			AV_BURSTCOUNT_W                => 4,
			AV_BYTEENABLE_W                => 64,
			UAV_BYTEENABLE_W               => 64,
			UAV_ADDRESS_W                  => 64,
			UAV_BURSTCOUNT_W               => 10,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 0,
			USE_WAITREQUEST                => 1,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 64,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 1,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0,
			WAITREQUEST_ALLOWANCE          => 16,
			SYNC_RESET                     => 1
		)
		port map (
			clk                    => intel_pcie_ptile_mcdma_0_app_clk_clkclk.clk
			reset                  => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset,                                                                                                                                                                                                                                                                                                                                                                                                                                              --                    reset.reset
			uav_address            => dma_rd_2_s0_waitrequest_allowance_adapter_m0_address,                                                                                                                                                                                                                                                                                                                                                                                                                                                                               -- avalon_universal_slave_0.address
			uav_burstcount         => dma_rd_2_s0_waitrequest_allowance_adapter_m0_burstcount,                                                                                                                                                                                                                                                                                                                                                                                                                                                                            --                         .burstcount
			uav_read               => dma_rd_2_s0_waitrequest_allowance_adapter_m0_read,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  --                         .read
			uav_write              => dma_rd_2_s0_waitrequest_allowance_adapter_m0_write,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 --                         .write
			uav_waitrequest        => dma_rd_2_s0_waitrequest_allowance_adapter_m0_waitrequest,                                                                                                                                                                                                                                                                                                                                                                                                                                                                           --                         .waitrequest
			uav_readdatavalid      => dma_rd_2_s0_waitrequest_allowance_adapter_m0_readdatavalid,                                                                                                                                                                                                                                                                                                                                                                                                                                                                         --                         .readdatavalid
			uav_byteenable         => dma_rd_2_s0_waitrequest_allowance_adapter_m0_byteenable,                                                                                                                                                                                                                                                                                                                                                                                                                                                                            --                         .byteenable
			uav_readdata           => dma_rd_2_s0_waitrequest_allowance_adapter_m0_readdata,                                                                                                                                                                                                                                                                                                                                                                                                                                                                              --                         .readdata
			uav_writedata          => dma_rd_2_s0_waitrequest_allowance_adapter_m0_writedata,                                                                                                                                                                                                                                                                                                                                                                                                                                                                             --                         .writedata
			uav_lock               => dma_rd_2_s0_waitrequest_allowance_adapter_m0_lock,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  --                         .lock
			uav_debugaccess        => dma_rd_2_s0_waitrequest_allowance_adapter_m0_debugaccess,                                                                                                                                                                                                                                                                                                                                                                                                                                                                           --                         .debugaccess
			av_address             => dma_rd_2_s0_address,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                --      avalon_anti_slave_0.address
			av_write               => dma_rd_2_s0_writewrite
			av_writedata           => dma_rd_2_s0_writedatawritedata
			av_burstcount          => dma_rd_2_s0_burstcountburstcount
			av_byteenable          => dma_rd_2_s0_byteenablebyteenable
			av_waitrequest         => dma_rd_2_s0_waitrequestwaitrequest
			av_read                => openterminated)
			av_readdataterminated)
			av_begintransfer       => openterminated)
			av_beginbursttransfer  => openterminated)
			av_readdatavalidterminated)
			av_writebyteenable     => openterminated)
			av_lock                => openterminated)
			av_chipselect          => openterminated)
			av_clken               => openterminated)
			uav_clkenterminated)
			av_debugaccess         => openterminated)
			av_outputenable        => openterminated)
			uav_response           => openterminated)
			av_responseterminated)
			uav_writeresponsevalid => openterminated)
			av_writeresponsevalidterminated)
		);

	dma_rd_3_s0_translator : component PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki_cmp
		generic map (
			AV_ADDRESS_W                   => 26,
			AV_DATA_W                      => 512,
			UAV_DATA_W                     => 512,
			AV_BURSTCOUNT_W                => 4,
			AV_BYTEENABLE_W                => 64,
			UAV_BYTEENABLE_W               => 64,
			UAV_ADDRESS_W                  => 64,
			UAV_BURSTCOUNT_W               => 10,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 0,
			USE_WAITREQUEST                => 1,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 64,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 1,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0,
			WAITREQUEST_ALLOWANCE          => 16,
			SYNC_RESET                     => 1
		)
		port map (
			clk                    => intel_pcie_ptile_mcdma_0_app_clk_clkclk.clk
			reset                  => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset,                                                                                                                                                                                                                                                                                                                                                                                                                                              --                    reset.reset
			uav_address            => dma_rd_3_s0_waitrequest_allowance_adapter_m0_address,                                                                                                                                                                                                                                                                                                                                                                                                                                                                               -- avalon_universal_slave_0.address
			uav_burstcount         => dma_rd_3_s0_waitrequest_allowance_adapter_m0_burstcount,                                                                                                                                                                                                                                                                                                                                                                                                                                                                            --                         .burstcount
			uav_read               => dma_rd_3_s0_waitrequest_allowance_adapter_m0_read,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  --                         .read
			uav_write              => dma_rd_3_s0_waitrequest_allowance_adapter_m0_write,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 --                         .write
			uav_waitrequest        => dma_rd_3_s0_waitrequest_allowance_adapter_m0_waitrequest,                                                                                                                                                                                                                                                                                                                                                                                                                                                                           --                         .waitrequest
			uav_readdatavalid      => dma_rd_3_s0_waitrequest_allowance_adapter_m0_readdatavalid,                                                                                                                                                                                                                                                                                                                                                                                                                                                                         --                         .readdatavalid
			uav_byteenable         => dma_rd_3_s0_waitrequest_allowance_adapter_m0_byteenable,                                                                                                                                                                                                                                                                                                                                                                                                                                                                            --                         .byteenable
			uav_readdata           => dma_rd_3_s0_waitrequest_allowance_adapter_m0_readdata,                                                                                                                                                                                                                                                                                                                                                                                                                                                                              --                         .readdata
			uav_writedata          => dma_rd_3_s0_waitrequest_allowance_adapter_m0_writedata,                                                                                                                                                                                                                                                                                                                                                                                                                                                                             --                         .writedata
			uav_lock               => dma_rd_3_s0_waitrequest_allowance_adapter_m0_lock,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  --                         .lock
			uav_debugaccess        => dma_rd_3_s0_waitrequest_allowance_adapter_m0_debugaccess,                                                                                                                                                                                                                                                                                                                                                                                                                                                                           --                         .debugaccess
			av_address             => dma_rd_3_s0_addressavalon_anti_slave_0.address
			av_write               => dma_rd_3_s0_writewrite
			av_writedata           => dma_rd_3_s0_writedata,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              --                         .writedata
			av_burstcount          => dma_rd_3_s0_burstcountburstcount
			av_byteenable          => dma_rd_3_s0_byteenablebyteenable
			av_waitrequest         => dma_rd_3_s0_waitrequestwaitrequest
			av_read                => openterminated)
			av_readdataterminated)
			av_begintransfer       => open,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               --              (terminated)
			av_beginbursttransfer  => openterminated)
			av_readdatavalidterminated)
			av_writebyteenable     => open,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               --              (terminated)
			av_lock                => openterminated)
			av_chipselect          => openterminated)
			av_clken               => openterminated)
			uav_clkenterminated)
			av_debugaccess         => openterminated)
			av_outputenable        => openterminated)
			uav_response           => openterminated)
			av_responseterminated)
			uav_writeresponsevalid => openterminated)
			av_writeresponsevalidterminated)
		);

	intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent : component PCIE_HIP_FDAS_altera_merlin_master_agent_191_mpbm6tq_cmp
		generic map (
			PKT_WUNIQUE               => 691,
			PKT_DOMAIN_H              => 690,
			PKT_DOMAIN_L              => 689,
			PKT_SNOOP_H               => 688,
			PKT_SNOOP_L               => 685,
			PKT_BARRIER_H             => 684,
			PKT_BARRIER_L             => 683,
			PKT_ORI_BURST_SIZE_H      => 682,
			PKT_ORI_BURST_SIZE_L      => 680,
			PKT_RESPONSE_STATUS_H     => 679,
			PKT_RESPONSE_STATUS_L     => 678,
			PKT_QOS_H                 => 665,
			PKT_QOS_L                 => 665,
			PKT_DATA_SIDEBAND_H       => 663,
			PKT_DATA_SIDEBAND_L       => 663,
			PKT_ADDR_SIDEBAND_H       => 662,
			PKT_ADDR_SIDEBAND_L       => 662,
			PKT_BURST_TYPE_H          => 661,
			PKT_BURST_TYPE_L          => 660,
			PKT_CACHE_H               => 677,
			PKT_CACHE_L               => 674,
			PKT_THREAD_ID_H           => 670,
			PKT_THREAD_ID_L           => 670,
			PKT_BURST_SIZE_H          => 659,
			PKT_BURST_SIZE_L          => 657,
			PKT_TRANS_EXCLUSIVE       => 645,
			PKT_TRANS_LOCK            => 644,
			PKT_BEGIN_BURST           => 664,
			PKT_PROTECTION_H          => 673,
			PKT_PROTECTION_L          => 671,
			PKT_BURSTWRAP_H           => 656,
			PKT_BURSTWRAP_L           => 656,
			PKT_BYTE_CNT_H            => 655,
			PKT_BYTE_CNT_L            => 646,
			PKT_ADDR_H                => 639,
			PKT_ADDR_L                => 576,
			PKT_TRANS_COMPRESSED_READ => 640,
			PKT_TRANS_POSTED          => 641,
			PKT_TRANS_WRITE           => 642,
			PKT_TRANS_READ            => 643,
			PKT_DATA_H                => 511,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 575,
			PKT_BYTEEN_L              => 512,
			PKT_SRC_ID_H              => 667,
			PKT_SRC_ID_L              => 666,
			PKT_DEST_ID_H             => 669,
			PKT_DEST_ID_L             => 668,
			ST_DATA_W                 => 692,
			ST_CHANNEL_W              => 4,
			AV_BURSTCOUNT_W           => 10,
			SUPPRESS_0_BYTEEN_RSP     => 0,
			ID                        => 0,
			BURSTWRAP_VALUE           => 1,
			CACHE_VALUE               => 0,
			SECURE_ACCESS_BIT         => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			DOMAIN_VALUE              => 3,
			BARRIER_VALUE             => 0,
			SNOOP_VALUE               => 0,
			WUNIQUE_VALUE             => 0,
			SYNC_RESET                => 1
		)
		port map (
			clk                   => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                    --       clk.clk
			reset                 => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset,   -- clk_reset.reset
			av_address            => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_address,       --        av.address
			av_write              => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_write,         --          .write
			av_read               => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_read,          --          .read
			av_writedata          => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_writedata,     --          .writedata
			av_readdata           => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_readdata,      --          .readdata
			av_waitrequest        => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_waitrequest,   --          .waitrequest
			av_readdatavalid      => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_readdatavalid, --          .readdatavalid
			av_byteenable         => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_byteenable,    --          .byteenable
			av_burstcount         => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_burstcount,    --          .burstcount
			av_debugaccess        => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_debugaccess,   --          .debugaccess
			av_lock               => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_lock,          --          .lock
			cp_valid              => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent_cp_valid,                                 --        cp.valid
			cp_data               => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent_cp_data,                                  --          .data
			cp_startofpacket      => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent_cp_startofpacket,                         --          .startofpacket
			cp_endofpacket        => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent_cp_endofpacket,                           --          .endofpacket
			cp_ready              => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent_cp_ready,                                 --          .ready
			rp_valid              => rsp_mux_src_valid,                                                                       --        rp.valid
			rp_data               => rsp_mux_src_data,                                                                        --          .data
			rp_channel            => rsp_mux_src_channel,                                                                     --          .channel
			rp_startofpacket      => rsp_mux_src_startofpacket,                                                               --          .startofpacket
			rp_endofpacket        => rsp_mux_src_endofpacket,                                                                 --          .endofpacket
			rp_ready              => rsp_mux_src_ready,                                                                       --          .ready
			av_response           => open,                                                                                    -- (terminated)
			av_writeresponsevalid => open                                                                                     -- (terminated)
		);

	dma_rd_0_s0_agent : component PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri_cmp
		generic map (
			PKT_ORI_BURST_SIZE_H      => 682,
			PKT_ORI_BURST_SIZE_L      => 680,
			PKT_RESPONSE_STATUS_H     => 679,
			PKT_RESPONSE_STATUS_L     => 678,
			PKT_BURST_SIZE_H          => 659,
			PKT_BURST_SIZE_L          => 657,
			PKT_TRANS_LOCK            => 644,
			PKT_BEGIN_BURST           => 664,
			PKT_PROTECTION_H          => 673,
			PKT_PROTECTION_L          => 671,
			PKT_BURSTWRAP_H           => 656,
			PKT_BURSTWRAP_L           => 656,
			PKT_BYTE_CNT_H            => 655,
			PKT_BYTE_CNT_L            => 646,
			PKT_ADDR_H                => 639,
			PKT_ADDR_L                => 576,
			PKT_TRANS_COMPRESSED_READ => 640,
			PKT_TRANS_POSTED          => 641,
			PKT_TRANS_WRITE           => 642,
			PKT_TRANS_READ            => 643,
			PKT_DATA_H                => 511,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 575,
			PKT_BYTEEN_L              => 512,
			PKT_SRC_ID_H              => 667,
			PKT_SRC_ID_L              => 666,
			PKT_DEST_ID_H             => 669,
			PKT_DEST_ID_L             => 668,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 4,
			ST_DATA_W                 => 692,
			AVS_BURSTCOUNT_W          => 10,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			USE_MEMORY_BLOCKS         => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0,
			SYNC_RESET                => 1
		)
		port map (
			clk                     => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --             clk.clk
			reset                   => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, --       clk_reset.reset
			m0_address              => dma_rd_0_s0_agent_m0_address,                                                          --              m0.address
			m0_burstcount           => dma_rd_0_s0_agent_m0_burstcount,                                                       --                .burstcount
			m0_byteenable           => dma_rd_0_s0_agent_m0_byteenable,                                                       --                .byteenable
			m0_debugaccess          => dma_rd_0_s0_agent_m0_debugaccess,                                                      --                .debugaccess
			m0_lock                 => dma_rd_0_s0_agent_m0_lock,                                                             --                .lock
			m0_readdata             => dma_rd_0_s0_agent_m0_readdata,                                                         --                .readdata
			m0_readdatavalid        => dma_rd_0_s0_agent_m0_readdatavalid,                                                    --                .readdatavalid
			m0_read                 => dma_rd_0_s0_agent_m0_read,                                                             --                .read
			m0_waitrequest          => dma_rd_0_s0_agent_m0_waitrequest,                                                      --                .waitrequest
			m0_writedata            => dma_rd_0_s0_agent_m0_writedata,                                                        --                .writedata
			m0_write                => dma_rd_0_s0_agent_m0_write,                                                            --                .write
			rp_endofpacket          => dma_rd_0_s0_agent_rp_endofpacket,                                                      --              rp.endofpacket
			rp_ready                => dma_rd_0_s0_agent_rp_ready,                                                            --                .ready
			rp_valid                => dma_rd_0_s0_agent_rp_valid,                                                            --                .valid
			rp_data                 => dma_rd_0_s0_agent_rp_data,                                                             --                .data
			rp_startofpacket        => dma_rd_0_s0_agent_rp_startofpacket,                                                    --                .startofpacket
			cp_ready                => cmd_mux_src_ready,                                                                     --              cp.ready
			cp_valid                => cmd_mux_src_valid,                                                                     --                .valid
			cp_data                 => cmd_mux_src_data,                                                                      --                .data
			cp_startofpacket        => cmd_mux_src_startofpacket,                                                             --                .startofpacket
			cp_endofpacket          => cmd_mux_src_endofpacket,                                                               --                .endofpacket
			cp_channel              => cmd_mux_src_channel,                                                                   --                .channel
			rf_sink_ready           => dma_rd_0_s0_agent_rsp_fifo_out_ready,                                                  --         rf_sink.ready
			rf_sink_valid           => dma_rd_0_s0_agent_rsp_fifo_out_valid,                                                  --                .valid
			rf_sink_startofpacket   => dma_rd_0_s0_agent_rsp_fifo_out_startofpacket,                                          --                .startofpacket
			rf_sink_endofpacket     => dma_rd_0_s0_agent_rsp_fifo_out_endofpacket,                                            --                .endofpacket
			rf_sink_data            => dma_rd_0_s0_agent_rsp_fifo_out_data,                                                   --                .data
			rf_source_ready         => dma_rd_0_s0_agent_rf_source_ready,                                                     --       rf_source.ready
			rf_source_valid         => dma_rd_0_s0_agent_rf_source_valid,                                                     --                .valid
			rf_source_startofpacket => dma_rd_0_s0_agent_rf_source_startofpacket,                                             --                .startofpacket
			rf_source_endofpacket   => dma_rd_0_s0_agent_rf_source_endofpacket,                                               --                .endofpacket
			rf_source_data          => dma_rd_0_s0_agent_rf_source_data,                                                      --                .data
			rdata_fifo_sink_ready   => dma_rd_0_s0_agent_rdata_fifo_src_ready,                                                -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => dma_rd_0_s0_agent_rdata_fifo_src_valid,                                                --                .valid
			rdata_fifo_sink_data    => dma_rd_0_s0_agent_rdata_fifo_src_data,                                                 --                .data
			rdata_fifo_src_ready    => dma_rd_0_s0_agent_rdata_fifo_src_ready,                                                --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => dma_rd_0_s0_agent_rdata_fifo_src_valid,                                                --                .valid
			rdata_fifo_src_data     => dma_rd_0_s0_agent_rdata_fifo_src_data,                                                 --                .data
			m0_response             => "00",                                                                                  --     (terminated)
			m0_writeresponsevalid   => '0',                                                                                   --     (terminated)
			rdata_fifo_sink_error   => '0'                                                                                    --     (terminated)
		);

	dma_rd_0_s0_agent_rsp_fifo : component PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy_cmp
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 693,
			FIFO_DEPTH          => 2,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0,
			EMPTY_WIDTH         => 1,
			SYNC_RESET          => 1
		)
		port map (
			clk               => intel_pcie_ptile_mcdma_0_app_clk_clk,         --       clk.clk
			reset             => dma_rd_0_reset_reset_bridge_in_reset_reset,   -- clk_reset.reset
			in_data           => dma_rd_0_s0_agent_rf_source_data,             --        in.data
			in_valid          => dma_rd_0_s0_agent_rf_source_valid,            --          .valid
			in_ready          => dma_rd_0_s0_agent_rf_source_ready,            --          .ready
			in_startofpacket  => dma_rd_0_s0_agent_rf_source_startofpacket,    --          .startofpacket
			in_endofpacket    => dma_rd_0_s0_agent_rf_source_endofpacket,      --          .endofpacket
			out_data          => dma_rd_0_s0_agent_rsp_fifo_out_data,          --       out.data
			out_valid         => dma_rd_0_s0_agent_rsp_fifo_out_valid,         --          .valid
			out_ready         => dma_rd_0_s0_agent_rsp_fifo_out_ready,         --          .ready
			out_startofpacket => dma_rd_0_s0_agent_rsp_fifo_out_startofpacket, --          .startofpacket
			out_endofpacket   => dma_rd_0_s0_agent_rsp_fifo_out_endofpacket,   --          .endofpacket
			csr_address       => "00",                                         -- (terminated)
			csr_read          => '0',                                          -- (terminated)
			csr_write         => '0',                                          -- (terminated)
			csr_readdata      => open,                                         -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",           -- (terminated)
			almost_full_data  => open,                                         -- (terminated)
			almost_empty_data => open,                                         -- (terminated)
			in_empty          => "0",                                          -- (terminated)
			out_empty         => open,                                         -- (terminated)
			in_error          => "0",                                          -- (terminated)
			out_error         => open,                                         -- (terminated)
			in_channel        => "0",                                          -- (terminated)
			out_channel       => open                                          -- (terminated)
		);

	dma_rd_1_s0_agent : component PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri_cmp
		generic map (
			PKT_ORI_BURST_SIZE_H      => 682,
			PKT_ORI_BURST_SIZE_L      => 680,
			PKT_RESPONSE_STATUS_H     => 679,
			PKT_RESPONSE_STATUS_L     => 678,
			PKT_BURST_SIZE_H          => 659,
			PKT_BURST_SIZE_L          => 657,
			PKT_TRANS_LOCK            => 644,
			PKT_BEGIN_BURST           => 664,
			PKT_PROTECTION_H          => 673,
			PKT_PROTECTION_L          => 671,
			PKT_BURSTWRAP_H           => 656,
			PKT_BURSTWRAP_L           => 656,
			PKT_BYTE_CNT_H            => 655,
			PKT_BYTE_CNT_L            => 646,
			PKT_ADDR_H                => 639,
			PKT_ADDR_L                => 576,
			PKT_TRANS_COMPRESSED_READ => 640,
			PKT_TRANS_POSTED          => 641,
			PKT_TRANS_WRITE           => 642,
			PKT_TRANS_READ            => 643,
			PKT_DATA_H                => 511,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 575,
			PKT_BYTEEN_L              => 512,
			PKT_SRC_ID_H              => 667,
			PKT_SRC_ID_L              => 666,
			PKT_DEST_ID_H             => 669,
			PKT_DEST_ID_L             => 668,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 4,
			ST_DATA_W                 => 692,
			AVS_BURSTCOUNT_W          => 10,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			USE_MEMORY_BLOCKS         => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0,
			SYNC_RESET                => 1
		)
		port map (
			clk                     => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --             clk.clk
			reset                   => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, --       clk_reset.reset
			m0_address              => dma_rd_1_s0_agent_m0_address,                                                          --              m0.address
			m0_burstcount           => dma_rd_1_s0_agent_m0_burstcount,                                                       --                .burstcount
			m0_byteenable           => dma_rd_1_s0_agent_m0_byteenable,                                                       --                .byteenable
			m0_debugaccess          => dma_rd_1_s0_agent_m0_debugaccess,                                                      --                .debugaccess
			m0_lock                 => dma_rd_1_s0_agent_m0_lock,                                                             --                .lock
			m0_readdata             => dma_rd_1_s0_agent_m0_readdata,                                                         --                .readdata
			m0_readdatavalid        => dma_rd_1_s0_agent_m0_readdatavalid,                                                    --                .readdatavalid
			m0_read                 => dma_rd_1_s0_agent_m0_read,                                                             --                .read
			m0_waitrequest          => dma_rd_1_s0_agent_m0_waitrequest,                                                      --                .waitrequest
			m0_writedata            => dma_rd_1_s0_agent_m0_writedata,                                                        --                .writedata
			m0_write                => dma_rd_1_s0_agent_m0_write,                                                            --                .write
			rp_endofpacket          => dma_rd_1_s0_agent_rp_endofpacket,                                                      --              rp.endofpacket
			rp_ready                => dma_rd_1_s0_agent_rp_ready,                                                            --                .ready
			rp_valid                => dma_rd_1_s0_agent_rp_valid,                                                            --                .valid
			rp_data                 => dma_rd_1_s0_agent_rp_data,                                                             --                .data
			rp_startofpacket        => dma_rd_1_s0_agent_rp_startofpacket,                                                    --                .startofpacket
			cp_ready                => cmd_mux_001_src_ready,                                                                 --              cp.ready
			cp_valid                => cmd_mux_001_src_valid,                                                                 --                .valid
			cp_data                 => cmd_mux_001_src_data,                                                                  --                .data
			cp_startofpacket        => cmd_mux_001_src_startofpacket,                                                         --                .startofpacket
			cp_endofpacket          => cmd_mux_001_src_endofpacket,                                                           --                .endofpacket
			cp_channel              => cmd_mux_001_src_channel,                                                               --                .channel
			rf_sink_ready           => dma_rd_1_s0_agent_rsp_fifo_out_ready,                                                  --         rf_sink.ready
			rf_sink_valid           => dma_rd_1_s0_agent_rsp_fifo_out_valid,                                                  --                .valid
			rf_sink_startofpacket   => dma_rd_1_s0_agent_rsp_fifo_out_startofpacket,                                          --                .startofpacket
			rf_sink_endofpacket     => dma_rd_1_s0_agent_rsp_fifo_out_endofpacket,                                            --                .endofpacket
			rf_sink_data            => dma_rd_1_s0_agent_rsp_fifo_out_data,                                                   --                .data
			rf_source_ready         => dma_rd_1_s0_agent_rf_source_ready,                                                     --       rf_source.ready
			rf_source_valid         => dma_rd_1_s0_agent_rf_source_valid,                                                     --                .valid
			rf_source_startofpacket => dma_rd_1_s0_agent_rf_source_startofpacket,                                             --                .startofpacket
			rf_source_endofpacket   => dma_rd_1_s0_agent_rf_source_endofpacket,                                               --                .endofpacket
			rf_source_data          => dma_rd_1_s0_agent_rf_source_data,                                                      --                .data
			rdata_fifo_sink_ready   => dma_rd_1_s0_agent_rdata_fifo_src_ready,                                                -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => dma_rd_1_s0_agent_rdata_fifo_src_valid,                                                --                .valid
			rdata_fifo_sink_data    => dma_rd_1_s0_agent_rdata_fifo_src_data,                                                 --                .data
			rdata_fifo_src_ready    => dma_rd_1_s0_agent_rdata_fifo_src_ready,                                                --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => dma_rd_1_s0_agent_rdata_fifo_src_valid,                                                --                .valid
			rdata_fifo_src_data     => dma_rd_1_s0_agent_rdata_fifo_src_data,                                                 --                .data
			m0_response             => "00",                                                                                  --     (terminated)
			m0_writeresponsevalid   => '0',                                                                                   --     (terminated)
			rdata_fifo_sink_error   => '0'                                                                                    --     (terminated)
		);

	dma_rd_1_s0_agent_rsp_fifo : component PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy_cmp
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 693,
			FIFO_DEPTH          => 2,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0,
			EMPTY_WIDTH         => 1,
			SYNC_RESET          => 1
		)
		port map (
			clk               => intel_pcie_ptile_mcdma_0_app_clk_clk,         --       clk.clk
			reset             => dma_rd_0_reset_reset_bridge_in_reset_reset,   -- clk_reset.reset
			in_data           => dma_rd_1_s0_agent_rf_source_data,             --        in.data
			in_valid          => dma_rd_1_s0_agent_rf_source_valid,            --          .valid
			in_ready          => dma_rd_1_s0_agent_rf_source_ready,            --          .ready
			in_startofpacket  => dma_rd_1_s0_agent_rf_source_startofpacket,    --          .startofpacket
			in_endofpacket    => dma_rd_1_s0_agent_rf_source_endofpacket,      --          .endofpacket
			out_data          => dma_rd_1_s0_agent_rsp_fifo_out_data,          --       out.data
			out_valid         => dma_rd_1_s0_agent_rsp_fifo_out_valid,         --          .valid
			out_ready         => dma_rd_1_s0_agent_rsp_fifo_out_ready,         --          .ready
			out_startofpacket => dma_rd_1_s0_agent_rsp_fifo_out_startofpacket, --          .startofpacket
			out_endofpacket   => dma_rd_1_s0_agent_rsp_fifo_out_endofpacket,   --          .endofpacket
			csr_address       => "00",                                         -- (terminated)
			csr_read          => '0',                                          -- (terminated)
			csr_write         => '0',                                          -- (terminated)
			csr_readdata      => open,                                         -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",           -- (terminated)
			almost_full_data  => open,                                         -- (terminated)
			almost_empty_data => open,                                         -- (terminated)
			in_empty          => "0",                                          -- (terminated)
			out_empty         => open,                                         -- (terminated)
			in_error          => "0",                                          -- (terminated)
			out_error         => open,                                         -- (terminated)
			in_channel        => "0",                                          -- (terminated)
			out_channel       => open                                          -- (terminated)
		);

	dma_rd_2_s0_agent : component PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri_cmp
		generic map (
			PKT_ORI_BURST_SIZE_H      => 682,
			PKT_ORI_BURST_SIZE_L      => 680,
			PKT_RESPONSE_STATUS_H     => 679,
			PKT_RESPONSE_STATUS_L     => 678,
			PKT_BURST_SIZE_H          => 659,
			PKT_BURST_SIZE_L          => 657,
			PKT_TRANS_LOCK            => 644,
			PKT_BEGIN_BURST           => 664,
			PKT_PROTECTION_H          => 673,
			PKT_PROTECTION_L          => 671,
			PKT_BURSTWRAP_H           => 656,
			PKT_BURSTWRAP_L           => 656,
			PKT_BYTE_CNT_H            => 655,
			PKT_BYTE_CNT_L            => 646,
			PKT_ADDR_H                => 639,
			PKT_ADDR_L                => 576,
			PKT_TRANS_COMPRESSED_READ => 640,
			PKT_TRANS_POSTED          => 641,
			PKT_TRANS_WRITE           => 642,
			PKT_TRANS_READ            => 643,
			PKT_DATA_H                => 511,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 575,
			PKT_BYTEEN_L              => 512,
			PKT_SRC_ID_H              => 667,
			PKT_SRC_ID_L              => 666,
			PKT_DEST_ID_H             => 669,
			PKT_DEST_ID_L             => 668,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 4,
			ST_DATA_W                 => 692,
			AVS_BURSTCOUNT_W          => 10,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			USE_MEMORY_BLOCKS         => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0,
			SYNC_RESET                => 1
		)
		port map (
			clk                     => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --             clk.clk
			reset                   => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, --       clk_reset.reset
			m0_address              => dma_rd_2_s0_agent_m0_address,                                                          --              m0.address
			m0_burstcount           => dma_rd_2_s0_agent_m0_burstcount,                                                       --                .burstcount
			m0_byteenable           => dma_rd_2_s0_agent_m0_byteenable,                                                       --                .byteenable
			m0_debugaccess          => dma_rd_2_s0_agent_m0_debugaccess,                                                      --                .debugaccess
			m0_lock                 => dma_rd_2_s0_agent_m0_lock,                                                             --                .lock
			m0_readdata             => dma_rd_2_s0_agent_m0_readdata,                                                         --                .readdata
			m0_readdatavalid        => dma_rd_2_s0_agent_m0_readdatavalid,                                                    --                .readdatavalid
			m0_read                 => dma_rd_2_s0_agent_m0_read,                                                             --                .read
			m0_waitrequest          => dma_rd_2_s0_agent_m0_waitrequest,                                                      --                .waitrequest
			m0_writedata            => dma_rd_2_s0_agent_m0_writedata,                                                        --                .writedata
			m0_write                => dma_rd_2_s0_agent_m0_write,                                                            --                .write
			rp_endofpacket          => dma_rd_2_s0_agent_rp_endofpacket,                                                      --              rp.endofpacket
			rp_ready                => dma_rd_2_s0_agent_rp_ready,                                                            --                .ready
			rp_valid                => dma_rd_2_s0_agent_rp_valid,                                                            --                .valid
			rp_data                 => dma_rd_2_s0_agent_rp_data,                                                             --                .data
			rp_startofpacket        => dma_rd_2_s0_agent_rp_startofpacket,                                                    --                .startofpacket
			cp_ready                => cmd_mux_002_src_ready,                                                                 --              cp.ready
			cp_valid                => cmd_mux_002_src_valid,                                                                 --                .valid
			cp_data                 => cmd_mux_002_src_data,                                                                  --                .data
			cp_startofpacket        => cmd_mux_002_src_startofpacket,                                                         --                .startofpacket
			cp_endofpacket          => cmd_mux_002_src_endofpacket,                                                           --                .endofpacket
			cp_channel              => cmd_mux_002_src_channel,                                                               --                .channel
			rf_sink_ready           => dma_rd_2_s0_agent_rsp_fifo_out_ready,                                                  --         rf_sink.ready
			rf_sink_valid           => dma_rd_2_s0_agent_rsp_fifo_out_valid,                                                  --                .valid
			rf_sink_startofpacket   => dma_rd_2_s0_agent_rsp_fifo_out_startofpacket,                                          --                .startofpacket
			rf_sink_endofpacket     => dma_rd_2_s0_agent_rsp_fifo_out_endofpacket,                                            --                .endofpacket
			rf_sink_data            => dma_rd_2_s0_agent_rsp_fifo_out_data,                                                   --                .data
			rf_source_ready         => dma_rd_2_s0_agent_rf_source_ready,                                                     --       rf_source.ready
			rf_source_valid         => dma_rd_2_s0_agent_rf_source_valid,                                                     --                .valid
			rf_source_startofpacket => dma_rd_2_s0_agent_rf_source_startofpacket,                                             --                .startofpacket
			rf_source_endofpacket   => dma_rd_2_s0_agent_rf_source_endofpacket,                                               --                .endofpacket
			rf_source_data          => dma_rd_2_s0_agent_rf_source_data,                                                      --                .data
			rdata_fifo_sink_ready   => dma_rd_2_s0_agent_rdata_fifo_src_ready,                                                -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => dma_rd_2_s0_agent_rdata_fifo_src_valid,                                                --                .valid
			rdata_fifo_sink_data    => dma_rd_2_s0_agent_rdata_fifo_src_data,                                                 --                .data
			rdata_fifo_src_ready    => dma_rd_2_s0_agent_rdata_fifo_src_ready,                                                --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => dma_rd_2_s0_agent_rdata_fifo_src_valid,                                                --                .valid
			rdata_fifo_src_data     => dma_rd_2_s0_agent_rdata_fifo_src_data,                                                 --                .data
			m0_response             => "00",                                                                                  --     (terminated)
			m0_writeresponsevalid   => '0',                                                                                   --     (terminated)
			rdata_fifo_sink_error   => '0'                                                                                    --     (terminated)
		);

	dma_rd_2_s0_agent_rsp_fifo : component PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy_cmp
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 693,
			FIFO_DEPTH          => 2,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0,
			EMPTY_WIDTH         => 1,
			SYNC_RESET          => 1
		)
		port map (
			clk               => intel_pcie_ptile_mcdma_0_app_clk_clk,         --       clk.clk
			reset             => dma_rd_0_reset_reset_bridge_in_reset_reset,   -- clk_reset.reset
			in_data           => dma_rd_2_s0_agent_rf_source_data,             --        in.data
			in_valid          => dma_rd_2_s0_agent_rf_source_valid,            --          .valid
			in_ready          => dma_rd_2_s0_agent_rf_source_ready,            --          .ready
			in_startofpacket  => dma_rd_2_s0_agent_rf_source_startofpacket,    --          .startofpacket
			in_endofpacket    => dma_rd_2_s0_agent_rf_source_endofpacket,      --          .endofpacket
			out_data          => dma_rd_2_s0_agent_rsp_fifo_out_data,          --       out.data
			out_valid         => dma_rd_2_s0_agent_rsp_fifo_out_valid,         --          .valid
			out_ready         => dma_rd_2_s0_agent_rsp_fifo_out_ready,         --          .ready
			out_startofpacket => dma_rd_2_s0_agent_rsp_fifo_out_startofpacket, --          .startofpacket
			out_endofpacket   => dma_rd_2_s0_agent_rsp_fifo_out_endofpacket,   --          .endofpacket
			csr_address       => "00",                                         -- (terminated)
			csr_read          => '0',                                          -- (terminated)
			csr_write         => '0',                                          -- (terminated)
			csr_readdata      => open,                                         -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",           -- (terminated)
			almost_full_data  => open,                                         -- (terminated)
			almost_empty_data => open,                                         -- (terminated)
			in_empty          => "0",                                          -- (terminated)
			out_empty         => open,                                         -- (terminated)
			in_error          => "0",                                          -- (terminated)
			out_error         => open,                                         -- (terminated)
			in_channel        => "0",                                          -- (terminated)
			out_channel       => open                                          -- (terminated)
		);

	dma_rd_3_s0_agent : component PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri_cmp
		generic map (
			PKT_ORI_BURST_SIZE_H      => 682,
			PKT_ORI_BURST_SIZE_L      => 680,
			PKT_RESPONSE_STATUS_H     => 679,
			PKT_RESPONSE_STATUS_L     => 678,
			PKT_BURST_SIZE_H          => 659,
			PKT_BURST_SIZE_L          => 657,
			PKT_TRANS_LOCK            => 644,
			PKT_BEGIN_BURST           => 664,
			PKT_PROTECTION_H          => 673,
			PKT_PROTECTION_L          => 671,
			PKT_BURSTWRAP_H           => 656,
			PKT_BURSTWRAP_L           => 656,
			PKT_BYTE_CNT_H            => 655,
			PKT_BYTE_CNT_L            => 646,
			PKT_ADDR_H                => 639,
			PKT_ADDR_L                => 576,
			PKT_TRANS_COMPRESSED_READ => 640,
			PKT_TRANS_POSTED          => 641,
			PKT_TRANS_WRITE           => 642,
			PKT_TRANS_READ            => 643,
			PKT_DATA_H                => 511,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 575,
			PKT_BYTEEN_L              => 512,
			PKT_SRC_ID_H              => 667,
			PKT_SRC_ID_L              => 666,
			PKT_DEST_ID_H             => 669,
			PKT_DEST_ID_L             => 668,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 4,
			ST_DATA_W                 => 692,
			AVS_BURSTCOUNT_W          => 10,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			USE_MEMORY_BLOCKS         => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0,
			SYNC_RESET                => 1
		)
		port map (
			clk                     => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --             clk.clk
			reset                   => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, --       clk_reset.reset
			m0_address              => dma_rd_3_s0_agent_m0_address,                                                          --              m0.address
			m0_burstcount           => dma_rd_3_s0_agent_m0_burstcount,                                                       --                .burstcount
			m0_byteenable           => dma_rd_3_s0_agent_m0_byteenable,                                                       --                .byteenable
			m0_debugaccess          => dma_rd_3_s0_agent_m0_debugaccess,                                                      --                .debugaccess
			m0_lock                 => dma_rd_3_s0_agent_m0_lock,                                                             --                .lock
			m0_readdata             => dma_rd_3_s0_agent_m0_readdata,                                                         --                .readdata
			m0_readdatavalid        => dma_rd_3_s0_agent_m0_readdatavalid,                                                    --                .readdatavalid
			m0_read                 => dma_rd_3_s0_agent_m0_read,                                                             --                .read
			m0_waitrequest          => dma_rd_3_s0_agent_m0_waitrequest,                                                      --                .waitrequest
			m0_writedata            => dma_rd_3_s0_agent_m0_writedata,                                                        --                .writedata
			m0_write                => dma_rd_3_s0_agent_m0_write,                                                            --                .write
			rp_endofpacket          => dma_rd_3_s0_agent_rp_endofpacket,                                                      --              rp.endofpacket
			rp_ready                => dma_rd_3_s0_agent_rp_ready,                                                            --                .ready
			rp_valid                => dma_rd_3_s0_agent_rp_valid,                                                            --                .valid
			rp_data                 => dma_rd_3_s0_agent_rp_data,                                                             --                .data
			rp_startofpacket        => dma_rd_3_s0_agent_rp_startofpacket,                                                    --                .startofpacket
			cp_ready                => cmd_mux_003_src_ready,                                                                 --              cp.ready
			cp_valid                => cmd_mux_003_src_valid,                                                                 --                .valid
			cp_data                 => cmd_mux_003_src_data,                                                                  --                .data
			cp_startofpacket        => cmd_mux_003_src_startofpacket,                                                         --                .startofpacket
			cp_endofpacket          => cmd_mux_003_src_endofpacket,                                                           --                .endofpacket
			cp_channel              => cmd_mux_003_src_channel,                                                               --                .channel
			rf_sink_ready           => dma_rd_3_s0_agent_rsp_fifo_out_ready,                                                  --         rf_sink.ready
			rf_sink_valid           => dma_rd_3_s0_agent_rsp_fifo_out_valid,                                                  --                .valid
			rf_sink_startofpacket   => dma_rd_3_s0_agent_rsp_fifo_out_startofpacket,                                          --                .startofpacket
			rf_sink_endofpacket     => dma_rd_3_s0_agent_rsp_fifo_out_endofpacket,                                            --                .endofpacket
			rf_sink_data            => dma_rd_3_s0_agent_rsp_fifo_out_data,                                                   --                .data
			rf_source_ready         => dma_rd_3_s0_agent_rf_source_ready,                                                     --       rf_source.ready
			rf_source_valid         => dma_rd_3_s0_agent_rf_source_valid,                                                     --                .valid
			rf_source_startofpacket => dma_rd_3_s0_agent_rf_source_startofpacket,                                             --                .startofpacket
			rf_source_endofpacket   => dma_rd_3_s0_agent_rf_source_endofpacket,                                               --                .endofpacket
			rf_source_data          => dma_rd_3_s0_agent_rf_source_data,                                                      --                .data
			rdata_fifo_sink_ready   => dma_rd_3_s0_agent_rdata_fifo_src_ready,                                                -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => dma_rd_3_s0_agent_rdata_fifo_src_valid,                                                --                .valid
			rdata_fifo_sink_data    => dma_rd_3_s0_agent_rdata_fifo_src_data,                                                 --                .data
			rdata_fifo_src_ready    => dma_rd_3_s0_agent_rdata_fifo_src_ready,                                                --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => dma_rd_3_s0_agent_rdata_fifo_src_valid,                                                --                .valid
			rdata_fifo_src_data     => dma_rd_3_s0_agent_rdata_fifo_src_data,                                                 --                .data
			m0_response             => "00",                                                                                  --     (terminated)
			m0_writeresponsevalid   => '0',                                                                                   --     (terminated)
			rdata_fifo_sink_error   => '0'                                                                                    --     (terminated)
		);

	dma_rd_3_s0_agent_rsp_fifo : component PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy_cmp
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 693,
			FIFO_DEPTH          => 2,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0,
			EMPTY_WIDTH         => 1,
			SYNC_RESET          => 1
		)
		port map (
			clk               => intel_pcie_ptile_mcdma_0_app_clk_clk,         --       clk.clk
			reset             => dma_rd_0_reset_reset_bridge_in_reset_reset,   -- clk_reset.reset
			in_data           => dma_rd_3_s0_agent_rf_source_data,             --        in.data
			in_valid          => dma_rd_3_s0_agent_rf_source_valid,            --          .valid
			in_ready          => dma_rd_3_s0_agent_rf_source_ready,            --          .ready
			in_startofpacket  => dma_rd_3_s0_agent_rf_source_startofpacket,    --          .startofpacket
			in_endofpacket    => dma_rd_3_s0_agent_rf_source_endofpacket,      --          .endofpacket
			out_data          => dma_rd_3_s0_agent_rsp_fifo_out_data,          --       out.data
			out_valid         => dma_rd_3_s0_agent_rsp_fifo_out_valid,         --          .valid
			out_ready         => dma_rd_3_s0_agent_rsp_fifo_out_ready,         --          .ready
			out_startofpacket => dma_rd_3_s0_agent_rsp_fifo_out_startofpacket, --          .startofpacket
			out_endofpacket   => dma_rd_3_s0_agent_rsp_fifo_out_endofpacket,   --          .endofpacket
			csr_address       => "00",                                         -- (terminated)
			csr_read          => '0',                                          -- (terminated)
			csr_write         => '0',                                          -- (terminated)
			csr_readdata      => open,                                         -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",           -- (terminated)
			almost_full_data  => open,                                         -- (terminated)
			almost_empty_data => open,                                         -- (terminated)
			in_empty          => "0",                                          -- (terminated)
			out_empty         => open,                                         -- (terminated)
			in_error          => "0",                                          -- (terminated)
			out_error         => open,                                         -- (terminated)
			in_channel        => "0",                                          -- (terminated)
			out_channel       => open                                          -- (terminated)
		);

	router : component PCIE_HIP_FDAS_altera_merlin_router_1921_22ekohy_cmp
		port map (
			sink_ready         => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent_cp_ready,                               --      sink.ready
			sink_valid         => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent_cp_valid,                               --          .valid
			sink_data          => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent_cp_data,                                --          .data
			sink_startofpacket => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent_cp_startofpacket,                       --          .startofpacket
			sink_endofpacket   => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_agent_cp_endofpacket,                         --          .endofpacket
			clk                => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --       clk.clk
			reset              => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_src_ready,                                                                      --       src.ready
			src_valid          => router_src_valid,                                                                      --          .valid
			src_data           => router_src_data,                                                                       --          .data
			src_channel        => router_src_channel,                                                                    --          .channel
			src_startofpacket  => router_src_startofpacket,                                                              --          .startofpacket
			src_endofpacket    => router_src_endofpacket                                                                 --          .endofpacket
		);

	router_001 : component PCIE_HIP_FDAS_altera_merlin_router_1921_j3ubbhi_cmp
		port map (
			sink_ready         => dma_rd_0_s0_agent_rp_ready,                                                            --      sink.ready
			sink_valid         => dma_rd_0_s0_agent_rp_valid,                                                            --          .valid
			sink_data          => dma_rd_0_s0_agent_rp_data,                                                             --          .data
			sink_startofpacket => dma_rd_0_s0_agent_rp_startofpacket,                                                    --          .startofpacket
			sink_endofpacket   => dma_rd_0_s0_agent_rp_endofpacket,                                                      --          .endofpacket
			clk                => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --       clk.clk
			reset              => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_001_src_ready,                                                                  --       src.ready
			src_valid          => router_001_src_valid,                                                                  --          .valid
			src_data           => router_001_src_data,                                                                   --          .data
			src_channel        => router_001_src_channel,                                                                --          .channel
			src_startofpacket  => router_001_src_startofpacket,                                                          --          .startofpacket
			src_endofpacket    => router_001_src_endofpacket                                                             --          .endofpacket
		);

	router_002 : component PCIE_HIP_FDAS_altera_merlin_router_1921_j3ubbhi_cmp
		port map (
			sink_ready         => dma_rd_1_s0_agent_rp_ready,                                                            --      sink.ready
			sink_valid         => dma_rd_1_s0_agent_rp_valid,                                                            --          .valid
			sink_data          => dma_rd_1_s0_agent_rp_data,                                                             --          .data
			sink_startofpacket => dma_rd_1_s0_agent_rp_startofpacket,                                                    --          .startofpacket
			sink_endofpacket   => dma_rd_1_s0_agent_rp_endofpacket,                                                      --          .endofpacket
			clk                => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --       clk.clk
			reset              => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_002_src_ready,                                                                  --       src.ready
			src_valid          => router_002_src_valid,                                                                  --          .valid
			src_data           => router_002_src_data,                                                                   --          .data
			src_channel        => router_002_src_channel,                                                                --          .channel
			src_startofpacket  => router_002_src_startofpacket,                                                          --          .startofpacket
			src_endofpacket    => router_002_src_endofpacket                                                             --          .endofpacket
		);

	router_003 : component PCIE_HIP_FDAS_altera_merlin_router_1921_j3ubbhi_cmp
		port map (
			sink_ready         => dma_rd_2_s0_agent_rp_ready,                                                            --      sink.ready
			sink_valid         => dma_rd_2_s0_agent_rp_valid,                                                            --          .valid
			sink_data          => dma_rd_2_s0_agent_rp_data,                                                             --          .data
			sink_startofpacket => dma_rd_2_s0_agent_rp_startofpacket,                                                    --          .startofpacket
			sink_endofpacket   => dma_rd_2_s0_agent_rp_endofpacket,                                                      --          .endofpacket
			clk                => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --       clk.clk
			reset              => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_003_src_ready,                                                                  --       src.ready
			src_valid          => router_003_src_valid,                                                                  --          .valid
			src_data           => router_003_src_data,                                                                   --          .data
			src_channel        => router_003_src_channel,                                                                --          .channel
			src_startofpacket  => router_003_src_startofpacket,                                                          --          .startofpacket
			src_endofpacket    => router_003_src_endofpacket                                                             --          .endofpacket
		);

	router_004 : component PCIE_HIP_FDAS_altera_merlin_router_1921_j3ubbhi_cmp
		port map (
			sink_ready         => dma_rd_3_s0_agent_rp_ready,                                                            --      sink.ready
			sink_valid         => dma_rd_3_s0_agent_rp_valid,                                                            --          .valid
			sink_data          => dma_rd_3_s0_agent_rp_data,                                                             --          .data
			sink_startofpacket => dma_rd_3_s0_agent_rp_startofpacket,                                                    --          .startofpacket
			sink_endofpacket   => dma_rd_3_s0_agent_rp_endofpacket,                                                      --          .endofpacket
			clk                => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --       clk.clk
			reset              => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_004_src_ready,                                                                  --       src.ready
			src_valid          => router_004_src_valid,                                                                  --          .valid
			src_data           => router_004_src_data,                                                                   --          .data
			src_channel        => router_004_src_channel,                                                                --          .channel
			src_startofpacket  => router_004_src_startofpacket,                                                          --          .startofpacket
			src_endofpacket    => router_004_src_endofpacket                                                             --          .endofpacket
		);

	cmd_demux : component PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_wzxjsgi_cmp
		port map (
			clk                => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --       clk.clk
			reset              => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_src_ready,                                                                      --      sink.ready
			sink_channel       => router_src_channel,                                                                    --          .channel
			sink_data          => router_src_data,                                                                       --          .data
			sink_startofpacket => router_src_startofpacket,                                                              --          .startofpacket
			sink_endofpacket   => router_src_endofpacket,                                                                --          .endofpacket
			sink_valid(0)      => router_src_valid,                                                                      --          .valid
			src0_ready         => cmd_demux_src0_ready,                                                                  --      src0.ready
			src0_valid         => cmd_demux_src0_valid,                                                                  --          .valid
			src0_data          => cmd_demux_src0_data,                                                                   --          .data
			src0_channel       => cmd_demux_src0_channel,                                                                --          .channel
			src0_startofpacket => cmd_demux_src0_startofpacket,                                                          --          .startofpacket
			src0_endofpacket   => cmd_demux_src0_endofpacket,                                                            --          .endofpacket
			src1_ready         => cmd_demux_src1_ready,                                                                  --      src1.ready
			src1_valid         => cmd_demux_src1_valid,                                                                  --          .valid
			src1_data          => cmd_demux_src1_data,                                                                   --          .data
			src1_channel       => cmd_demux_src1_channel,                                                                --          .channel
			src1_startofpacket => cmd_demux_src1_startofpacket,                                                          --          .startofpacket
			src1_endofpacket   => cmd_demux_src1_endofpacket,                                                            --          .endofpacket
			src2_ready         => cmd_demux_src2_ready,                                                                  --      src2.ready
			src2_valid         => cmd_demux_src2_valid,                                                                  --          .valid
			src2_data          => cmd_demux_src2_data,                                                                   --          .data
			src2_channel       => cmd_demux_src2_channel,                                                                --          .channel
			src2_startofpacket => cmd_demux_src2_startofpacket,                                                          --          .startofpacket
			src2_endofpacket   => cmd_demux_src2_endofpacket,                                                            --          .endofpacket
			src3_ready         => cmd_demux_src3_ready,                                                                  --      src3.ready
			src3_valid         => cmd_demux_src3_valid,                                                                  --          .valid
			src3_data          => cmd_demux_src3_data,                                                                   --          .data
			src3_channel       => cmd_demux_src3_channel,                                                                --          .channel
			src3_startofpacket => cmd_demux_src3_startofpacket,                                                          --          .startofpacket
			src3_endofpacket   => cmd_demux_src3_endofpacket                                                             --          .endofpacket
		);

	cmd_mux : component PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_jqhnmri_cmp
		port map (
			clk                 => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --       clk.clk
			reset               => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_src_ready,                                                                     --       src.ready
			src_valid           => cmd_mux_src_valid,                                                                     --          .valid
			src_data            => cmd_mux_src_data,                                                                      --          .data
			src_channel         => cmd_mux_src_channel,                                                                   --          .channel
			src_startofpacket   => cmd_mux_src_startofpacket,                                                             --          .startofpacket
			src_endofpacket     => cmd_mux_src_endofpacket,                                                               --          .endofpacket
			sink0_ready         => cmd_demux_src0_ready,                                                                  --     sink0.ready
			sink0_valid         => cmd_demux_src0_valid,                                                                  --          .valid
			sink0_channel       => cmd_demux_src0_channel,                                                                --          .channel
			sink0_data          => cmd_demux_src0_data,                                                                   --          .data
			sink0_startofpacket => cmd_demux_src0_startofpacket,                                                          --          .startofpacket
			sink0_endofpacket   => cmd_demux_src0_endofpacket                                                             --          .endofpacket
		);

	cmd_mux_001 : component PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_jqhnmri_cmp
		port map (
			clk                 => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --       clk.clk
			reset               => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_001_src_ready,                                                                 --       src.ready
			src_valid           => cmd_mux_001_src_valid,                                                                 --          .valid
			src_data            => cmd_mux_001_src_data,                                                                  --          .data
			src_channel         => cmd_mux_001_src_channel,                                                               --          .channel
			src_startofpacket   => cmd_mux_001_src_startofpacket,                                                         --          .startofpacket
			src_endofpacket     => cmd_mux_001_src_endofpacket,                                                           --          .endofpacket
			sink0_ready         => cmd_demux_src1_ready,                                                                  --     sink0.ready
			sink0_valid         => cmd_demux_src1_valid,                                                                  --          .valid
			sink0_channel       => cmd_demux_src1_channel,                                                                --          .channel
			sink0_data          => cmd_demux_src1_data,                                                                   --          .data
			sink0_startofpacket => cmd_demux_src1_startofpacket,                                                          --          .startofpacket
			sink0_endofpacket   => cmd_demux_src1_endofpacket                                                             --          .endofpacket
		);

	cmd_mux_002 : component PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_jqhnmri_cmp
		port map (
			clk                 => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --       clk.clk
			reset               => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_002_src_ready,                                                                 --       src.ready
			src_valid           => cmd_mux_002_src_valid,                                                                 --          .valid
			src_data            => cmd_mux_002_src_data,                                                                  --          .data
			src_channel         => cmd_mux_002_src_channel,                                                               --          .channel
			src_startofpacket   => cmd_mux_002_src_startofpacket,                                                         --          .startofpacket
			src_endofpacket     => cmd_mux_002_src_endofpacket,                                                           --          .endofpacket
			sink0_ready         => cmd_demux_src2_ready,                                                                  --     sink0.ready
			sink0_valid         => cmd_demux_src2_valid,                                                                  --          .valid
			sink0_channel       => cmd_demux_src2_channel,                                                                --          .channel
			sink0_data          => cmd_demux_src2_data,                                                                   --          .data
			sink0_startofpacket => cmd_demux_src2_startofpacket,                                                          --          .startofpacket
			sink0_endofpacket   => cmd_demux_src2_endofpacket                                                             --          .endofpacket
		);

	cmd_mux_003 : component PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_jqhnmri_cmp
		port map (
			clk                 => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --       clk.clk
			reset               => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_003_src_ready,                                                                 --       src.ready
			src_valid           => cmd_mux_003_src_valid,                                                                 --          .valid
			src_data            => cmd_mux_003_src_data,                                                                  --          .data
			src_channel         => cmd_mux_003_src_channel,                                                               --          .channel
			src_startofpacket   => cmd_mux_003_src_startofpacket,                                                         --          .startofpacket
			src_endofpacket     => cmd_mux_003_src_endofpacket,                                                           --          .endofpacket
			sink0_ready         => cmd_demux_src3_ready,                                                                  --     sink0.ready
			sink0_valid         => cmd_demux_src3_valid,                                                                  --          .valid
			sink0_channel       => cmd_demux_src3_channel,                                                                --          .channel
			sink0_data          => cmd_demux_src3_data,                                                                   --          .data
			sink0_startofpacket => cmd_demux_src3_startofpacket,                                                          --          .startofpacket
			sink0_endofpacket   => cmd_demux_src3_endofpacket                                                             --          .endofpacket
		);

	rsp_demux : component PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_aex32mq_cmp
		port map (
			clk                => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --       clk.clk
			reset              => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_001_src_ready,                                                                  --      sink.ready
			sink_channel       => router_001_src_channel,                                                                --          .channel
			sink_data          => router_001_src_data,                                                                   --          .data
			sink_startofpacket => router_001_src_startofpacket,                                                          --          .startofpacket
			sink_endofpacket   => router_001_src_endofpacket,                                                            --          .endofpacket
			sink_valid(0)      => router_001_src_valid,                                                                  --          .valid
			src0_ready         => rsp_demux_src0_ready,                                                                  --      src0.ready
			src0_valid         => rsp_demux_src0_valid,                                                                  --          .valid
			src0_data          => rsp_demux_src0_data,                                                                   --          .data
			src0_channel       => rsp_demux_src0_channel,                                                                --          .channel
			src0_startofpacket => rsp_demux_src0_startofpacket,                                                          --          .startofpacket
			src0_endofpacket   => rsp_demux_src0_endofpacket                                                             --          .endofpacket
		);

	rsp_demux_001 : component PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_aex32mq_cmp
		port map (
			clk                => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --       clk.clk
			reset              => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_002_src_ready,                                                                  --      sink.ready
			sink_channel       => router_002_src_channel,                                                                --          .channel
			sink_data          => router_002_src_data,                                                                   --          .data
			sink_startofpacket => router_002_src_startofpacket,                                                          --          .startofpacket
			sink_endofpacket   => router_002_src_endofpacket,                                                            --          .endofpacket
			sink_valid(0)      => router_002_src_valid,                                                                  --          .valid
			src0_ready         => rsp_demux_001_src0_ready,                                                              --      src0.ready
			src0_valid         => rsp_demux_001_src0_valid,                                                              --          .valid
			src0_data          => rsp_demux_001_src0_data,                                                               --          .data
			src0_channel       => rsp_demux_001_src0_channel,                                                            --          .channel
			src0_startofpacket => rsp_demux_001_src0_startofpacket,                                                      --          .startofpacket
			src0_endofpacket   => rsp_demux_001_src0_endofpacket                                                         --          .endofpacket
		);

	rsp_demux_002 : component PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_aex32mq_cmp
		port map (
			clk                => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --       clk.clk
			reset              => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_003_src_ready,                                                                  --      sink.ready
			sink_channel       => router_003_src_channel,                                                                --          .channel
			sink_data          => router_003_src_data,                                                                   --          .data
			sink_startofpacket => router_003_src_startofpacket,                                                          --          .startofpacket
			sink_endofpacket   => router_003_src_endofpacket,                                                            --          .endofpacket
			sink_valid(0)      => router_003_src_valid,                                                                  --          .valid
			src0_ready         => rsp_demux_002_src0_ready,                                                              --      src0.ready
			src0_valid         => rsp_demux_002_src0_valid,                                                              --          .valid
			src0_data          => rsp_demux_002_src0_data,                                                               --          .data
			src0_channel       => rsp_demux_002_src0_channel,                                                            --          .channel
			src0_startofpacket => rsp_demux_002_src0_startofpacket,                                                      --          .startofpacket
			src0_endofpacket   => rsp_demux_002_src0_endofpacket                                                         --          .endofpacket
		);

	rsp_demux_003 : component PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_aex32mq_cmp
		port map (
			clk                => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --       clk.clk
			reset              => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_004_src_ready,                                                                  --      sink.ready
			sink_channel       => router_004_src_channel,                                                                --          .channel
			sink_data          => router_004_src_data,                                                                   --          .data
			sink_startofpacket => router_004_src_startofpacket,                                                          --          .startofpacket
			sink_endofpacket   => router_004_src_endofpacket,                                                            --          .endofpacket
			sink_valid(0)      => router_004_src_valid,                                                                  --          .valid
			src0_ready         => rsp_demux_003_src0_ready,                                                              --      src0.ready
			src0_valid         => rsp_demux_003_src0_valid,                                                              --          .valid
			src0_data          => rsp_demux_003_src0_data,                                                               --          .data
			src0_channel       => rsp_demux_003_src0_channel,                                                            --          .channel
			src0_startofpacket => rsp_demux_003_src0_startofpacket,                                                      --          .startofpacket
			src0_endofpacket   => rsp_demux_003_src0_endofpacket                                                         --          .endofpacket
		);

	rsp_mux : component PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_li4dm4i_cmp
		port map (
			clk                 => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --       clk.clk
			reset               => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => rsp_mux_src_ready,                                                                     --       src.ready
			src_valid           => rsp_mux_src_valid,                                                                     --          .valid
			src_data            => rsp_mux_src_data,                                                                      --          .data
			src_channel         => rsp_mux_src_channel,                                                                   --          .channel
			src_startofpacket   => rsp_mux_src_startofpacket,                                                             --          .startofpacket
			src_endofpacket     => rsp_mux_src_endofpacket,                                                               --          .endofpacket
			sink0_ready         => rsp_demux_src0_ready,                                                                  --     sink0.ready
			sink0_valid         => rsp_demux_src0_valid,                                                                  --          .valid
			sink0_channel       => rsp_demux_src0_channel,                                                                --          .channel
			sink0_data          => rsp_demux_src0_data,                                                                   --          .data
			sink0_startofpacket => rsp_demux_src0_startofpacket,                                                          --          .startofpacket
			sink0_endofpacket   => rsp_demux_src0_endofpacket,                                                            --          .endofpacket
			sink1_ready         => rsp_demux_001_src0_ready,                                                              --     sink1.ready
			sink1_valid         => rsp_demux_001_src0_valid,                                                              --          .valid
			sink1_channel       => rsp_demux_001_src0_channel,                                                            --          .channel
			sink1_data          => rsp_demux_001_src0_data,                                                               --          .data
			sink1_startofpacket => rsp_demux_001_src0_startofpacket,                                                      --          .startofpacket
			sink1_endofpacket   => rsp_demux_001_src0_endofpacket,                                                        --          .endofpacket
			sink2_ready         => rsp_demux_002_src0_ready,                                                              --     sink2.ready
			sink2_valid         => rsp_demux_002_src0_valid,                                                              --          .valid
			sink2_channel       => rsp_demux_002_src0_channel,                                                            --          .channel
			sink2_data          => rsp_demux_002_src0_data,                                                               --          .data
			sink2_startofpacket => rsp_demux_002_src0_startofpacket,                                                      --          .startofpacket
			sink2_endofpacket   => rsp_demux_002_src0_endofpacket,                                                        --          .endofpacket
			sink3_ready         => rsp_demux_003_src0_ready,                                                              --     sink3.ready
			sink3_valid         => rsp_demux_003_src0_valid,                                                              --          .valid
			sink3_channel       => rsp_demux_003_src0_channel,                                                            --          .channel
			sink3_data          => rsp_demux_003_src0_data,                                                               --          .data
			sink3_startofpacket => rsp_demux_003_src0_startofpacket,                                                      --          .startofpacket
			sink3_endofpacket   => rsp_demux_003_src0_endofpacket                                                         --          .endofpacket
		);

	intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter : component altera_merlin_waitrequest_adapter_cmp
		generic map (
			UAV_ADDRESS_W            => 64,
			UAV_BYTEENABLE_W         => 64,
			UAV_BURSTCOUNT_W         => 10,
			UAV_DATA_W               => 512,
			USE_READRESPONSE         => 0,
			USE_WRITERESPONSE        => 0,
			S0_WAITREQUEST_ALLOWANCE => 16,
			M0_WAITREQUEST_ALLOWANCE => 0,
			SYNC_RESET               => 1
		)
		port map (
			clk                   => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                        --   clk.clk
			reset                 => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset,       -- reset.reset
			m0_write              => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_write,             --    m0.write
			m0_read               => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_read,              --      .read
			m0_address            => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_address,           --      .address
			m0_burstcount         => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_burstcount,        --      .burstcount
			m0_byteenable         => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_byteenable,        --      .byteenable
			m0_writedata          => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_writedata,         --      .writedata
			m0_lock               => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_lock,              --      .lock
			m0_debugaccess        => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_debugaccess,       --      .debugaccess
			m0_readdata           => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_readdata,          --      .readdata
			m0_readdatavalid      => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_readdatavalid,     --      .readdatavalid
			m0_waitrequest        => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_waitrequest_allowance_adapter_m0_waitrequest,       --      .waitrequest
			s0_write              => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_write,         --    s0.write
			s0_read               => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_read,          --      .read
			s0_address            => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_address,       --      .address
			s0_burstcount         => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_burstcount,    --      .burstcount
			s0_writedata          => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_writedata,     --      .writedata
			s0_lock               => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_lock,          --      .lock
			s0_debugaccess        => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_debugaccess,   --      .debugaccess
			s0_byteenable         => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_byteenable,    --      .byteenable
			s0_readdata           => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_readdata,      --      .readdata
			s0_readdatavalid      => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_readdatavalid, --      .readdatavalid
			s0_waitrequest        => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_avalon_universal_master_0_waitrequest,   --      .waitrequest
			s0_writeresponsevalid => open,                                                                                        -- (terminated)
			m0_writeresponsevalid => '0',                                                                                         -- (terminated)
			m0_response           => "00",                                                                                        -- (terminated)
			s0_response           => open                                                                                         -- (terminated)
		);

	dma_rd_0_s0_waitrequest_allowance_adapter : component altera_merlin_waitrequest_adapter_cmp
		generic map (
			UAV_ADDRESS_W            => 64,
			UAV_BYTEENABLE_W         => 64,
			UAV_BURSTCOUNT_W         => 10,
			UAV_DATA_W               => 512,
			USE_READRESPONSE         => 0,
			USE_WRITERESPONSE        => 0,
			S0_WAITREQUEST_ALLOWANCE => 0,
			M0_WAITREQUEST_ALLOWANCE => 16,
			SYNC_RESET               => 1
		)
		port map (
			clk                   => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --   clk.clk
			reset                 => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- reset.reset
			m0_write              => dma_rd_0_s0_waitrequest_allowance_adapter_m0_write,                                    --    m0.write
			m0_read               => dma_rd_0_s0_waitrequest_allowance_adapter_m0_read,                                     --      .read
			m0_address            => dma_rd_0_s0_waitrequest_allowance_adapter_m0_address,                                  --      .address
			m0_burstcount         => dma_rd_0_s0_waitrequest_allowance_adapter_m0_burstcount,                               --      .burstcount
			m0_byteenable         => dma_rd_0_s0_waitrequest_allowance_adapter_m0_byteenable,                               --      .byteenable
			m0_writedata          => dma_rd_0_s0_waitrequest_allowance_adapter_m0_writedata,                                --      .writedata
			m0_lock               => dma_rd_0_s0_waitrequest_allowance_adapter_m0_lock,                                     --      .lock
			m0_debugaccess        => dma_rd_0_s0_waitrequest_allowance_adapter_m0_debugaccess,                              --      .debugaccess
			m0_readdata           => dma_rd_0_s0_waitrequest_allowance_adapter_m0_readdata,                                 --      .readdata
			m0_readdatavalid      => dma_rd_0_s0_waitrequest_allowance_adapter_m0_readdatavalid,                            --      .readdatavalid
			m0_waitrequest        => dma_rd_0_s0_waitrequest_allowance_adapter_m0_waitrequest,                              --      .waitrequest
			s0_write              => dma_rd_0_s0_agent_m0_write,                                                            --    s0.write
			s0_read               => dma_rd_0_s0_agent_m0_read,                                                             --      .read
			s0_address            => dma_rd_0_s0_agent_m0_address,                                                          --      .address
			s0_burstcount         => dma_rd_0_s0_agent_m0_burstcount,                                                       --      .burstcount
			s0_writedata          => dma_rd_0_s0_agent_m0_writedata,                                                        --      .writedata
			s0_lock               => dma_rd_0_s0_agent_m0_lock,                                                             --      .lock
			s0_debugaccess        => dma_rd_0_s0_agent_m0_debugaccess,                                                      --      .debugaccess
			s0_byteenable         => dma_rd_0_s0_agent_m0_byteenable,                                                       --      .byteenable
			s0_readdata           => dma_rd_0_s0_agent_m0_readdata,                                                         --      .readdata
			s0_readdatavalid      => dma_rd_0_s0_agent_m0_readdatavalid,                                                    --      .readdatavalid
			s0_waitrequest        => dma_rd_0_s0_agent_m0_waitrequest,                                                      --      .waitrequest
			s0_writeresponsevalid => open,                                                                                  -- (terminated)
			m0_writeresponsevalid => '0',                                                                                   -- (terminated)
			m0_response           => "00",                                                                                  -- (terminated)
			s0_response           => open                                                                                   -- (terminated)
		);

	dma_rd_1_s0_waitrequest_allowance_adapter : component altera_merlin_waitrequest_adapter_cmp
		generic map (
			UAV_ADDRESS_W            => 64,
			UAV_BYTEENABLE_W         => 64,
			UAV_BURSTCOUNT_W         => 10,
			UAV_DATA_W               => 512,
			USE_READRESPONSE         => 0,
			USE_WRITERESPONSE        => 0,
			S0_WAITREQUEST_ALLOWANCE => 0,
			M0_WAITREQUEST_ALLOWANCE => 16,
			SYNC_RESET               => 1
		)
		port map (
			clk                   => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --   clk.clk
			reset                 => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- reset.reset
			m0_write              => dma_rd_1_s0_waitrequest_allowance_adapter_m0_write,                                    --    m0.write
			m0_read               => dma_rd_1_s0_waitrequest_allowance_adapter_m0_read,                                     --      .read
			m0_address            => dma_rd_1_s0_waitrequest_allowance_adapter_m0_address,                                  --      .address
			m0_burstcount         => dma_rd_1_s0_waitrequest_allowance_adapter_m0_burstcount,                               --      .burstcount
			m0_byteenable         => dma_rd_1_s0_waitrequest_allowance_adapter_m0_byteenable,                               --      .byteenable
			m0_writedata          => dma_rd_1_s0_waitrequest_allowance_adapter_m0_writedata,                                --      .writedata
			m0_lock               => dma_rd_1_s0_waitrequest_allowance_adapter_m0_lock,                                     --      .lock
			m0_debugaccess        => dma_rd_1_s0_waitrequest_allowance_adapter_m0_debugaccess,                              --      .debugaccess
			m0_readdata           => dma_rd_1_s0_waitrequest_allowance_adapter_m0_readdata,                                 --      .readdata
			m0_readdatavalid      => dma_rd_1_s0_waitrequest_allowance_adapter_m0_readdatavalid,                            --      .readdatavalid
			m0_waitrequest        => dma_rd_1_s0_waitrequest_allowance_adapter_m0_waitrequest,                              --      .waitrequest
			s0_write              => dma_rd_1_s0_agent_m0_write,                                                            --    s0.write
			s0_read               => dma_rd_1_s0_agent_m0_read,                                                             --      .read
			s0_address            => dma_rd_1_s0_agent_m0_address,                                                          --      .address
			s0_burstcount         => dma_rd_1_s0_agent_m0_burstcount,                                                       --      .burstcount
			s0_writedata          => dma_rd_1_s0_agent_m0_writedata,                                                        --      .writedata
			s0_lock               => dma_rd_1_s0_agent_m0_lock,                                                             --      .lock
			s0_debugaccess        => dma_rd_1_s0_agent_m0_debugaccess,                                                      --      .debugaccess
			s0_byteenable         => dma_rd_1_s0_agent_m0_byteenable,                                                       --      .byteenable
			s0_readdata           => dma_rd_1_s0_agent_m0_readdata,                                                         --      .readdata
			s0_readdatavalid      => dma_rd_1_s0_agent_m0_readdatavalid,                                                    --      .readdatavalid
			s0_waitrequest        => dma_rd_1_s0_agent_m0_waitrequest,                                                      --      .waitrequest
			s0_writeresponsevalid => open,                                                                                  -- (terminated)
			m0_writeresponsevalid => '0',                                                                                   -- (terminated)
			m0_response           => "00",                                                                                  -- (terminated)
			s0_response           => open                                                                                   -- (terminated)
		);

	dma_rd_2_s0_waitrequest_allowance_adapter : component altera_merlin_waitrequest_adapter_cmp
		generic map (
			UAV_ADDRESS_W            => 64,
			UAV_BYTEENABLE_W         => 64,
			UAV_BURSTCOUNT_W         => 10,
			UAV_DATA_W               => 512,
			USE_READRESPONSE         => 0,
			USE_WRITERESPONSE        => 0,
			S0_WAITREQUEST_ALLOWANCE => 0,
			M0_WAITREQUEST_ALLOWANCE => 16,
			SYNC_RESET               => 1
		)
		port map (
			clk                   => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --   clk.clk
			reset                 => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- reset.reset
			m0_write              => dma_rd_2_s0_waitrequest_allowance_adapter_m0_write,                                    --    m0.write
			m0_read               => dma_rd_2_s0_waitrequest_allowance_adapter_m0_read,                                     --      .read
			m0_address            => dma_rd_2_s0_waitrequest_allowance_adapter_m0_address,                                  --      .address
			m0_burstcount         => dma_rd_2_s0_waitrequest_allowance_adapter_m0_burstcount,                               --      .burstcount
			m0_byteenable         => dma_rd_2_s0_waitrequest_allowance_adapter_m0_byteenable,                               --      .byteenable
			m0_writedata          => dma_rd_2_s0_waitrequest_allowance_adapter_m0_writedata,                                --      .writedata
			m0_lock               => dma_rd_2_s0_waitrequest_allowance_adapter_m0_lock,                                     --      .lock
			m0_debugaccess        => dma_rd_2_s0_waitrequest_allowance_adapter_m0_debugaccess,                              --      .debugaccess
			m0_readdata           => dma_rd_2_s0_waitrequest_allowance_adapter_m0_readdata,                                 --      .readdata
			m0_readdatavalid      => dma_rd_2_s0_waitrequest_allowance_adapter_m0_readdatavalid,                            --      .readdatavalid
			m0_waitrequest        => dma_rd_2_s0_waitrequest_allowance_adapter_m0_waitrequest,                              --      .waitrequest
			s0_write              => dma_rd_2_s0_agent_m0_write,                                                            --    s0.write
			s0_read               => dma_rd_2_s0_agent_m0_read,                                                             --      .read
			s0_address            => dma_rd_2_s0_agent_m0_address,                                                          --      .address
			s0_burstcount         => dma_rd_2_s0_agent_m0_burstcount,                                                       --      .burstcount
			s0_writedata          => dma_rd_2_s0_agent_m0_writedata,                                                        --      .writedata
			s0_lock               => dma_rd_2_s0_agent_m0_lock,                                                             --      .lock
			s0_debugaccess        => dma_rd_2_s0_agent_m0_debugaccess,                                                      --      .debugaccess
			s0_byteenable         => dma_rd_2_s0_agent_m0_byteenable,                                                       --      .byteenable
			s0_readdata           => dma_rd_2_s0_agent_m0_readdata,                                                         --      .readdata
			s0_readdatavalid      => dma_rd_2_s0_agent_m0_readdatavalid,                                                    --      .readdatavalid
			s0_waitrequest        => dma_rd_2_s0_agent_m0_waitrequest,                                                      --      .waitrequest
			s0_writeresponsevalid => open,                                                                                  -- (terminated)
			m0_writeresponsevalid => '0',                                                                                   -- (terminated)
			m0_response           => "00",                                                                                  -- (terminated)
			s0_response           => open                                                                                   -- (terminated)
		);

	dma_rd_3_s0_waitrequest_allowance_adapter : component altera_merlin_waitrequest_adapter_cmp
		generic map (
			UAV_ADDRESS_W            => 64,
			UAV_BYTEENABLE_W         => 64,
			UAV_BURSTCOUNT_W         => 10,
			UAV_DATA_W               => 512,
			USE_READRESPONSE         => 0,
			USE_WRITERESPONSE        => 0,
			S0_WAITREQUEST_ALLOWANCE => 0,
			M0_WAITREQUEST_ALLOWANCE => 16,
			SYNC_RESET               => 1
		)
		port map (
			clk                   => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                  --   clk.clk
			reset                 => intel_pcie_ptile_mcdma_0_p0_h2ddm_master_translator_reset_reset_bridge_in_reset_reset, -- reset.reset
			m0_write              => dma_rd_3_s0_waitrequest_allowance_adapter_m0_write,                                    --    m0.write
			m0_read               => dma_rd_3_s0_waitrequest_allowance_adapter_m0_read,                                     --      .read
			m0_address            => dma_rd_3_s0_waitrequest_allowance_adapter_m0_address,                                  --      .address
			m0_burstcount         => dma_rd_3_s0_waitrequest_allowance_adapter_m0_burstcount,                               --      .burstcount
			m0_byteenable         => dma_rd_3_s0_waitrequest_allowance_adapter_m0_byteenable,                               --      .byteenable
			m0_writedata          => dma_rd_3_s0_waitrequest_allowance_adapter_m0_writedata,                                --      .writedata
			m0_lock               => dma_rd_3_s0_waitrequest_allowance_adapter_m0_lock,                                     --      .lock
			m0_debugaccess        => dma_rd_3_s0_waitrequest_allowance_adapter_m0_debugaccess,                              --      .debugaccess
			m0_readdata           => dma_rd_3_s0_waitrequest_allowance_adapter_m0_readdata,                                 --      .readdata
			m0_readdatavalid      => dma_rd_3_s0_waitrequest_allowance_adapter_m0_readdatavalid,                            --      .readdatavalid
			m0_waitrequest        => dma_rd_3_s0_waitrequest_allowance_adapter_m0_waitrequest,                              --      .waitrequest
			s0_write              => dma_rd_3_s0_agent_m0_write,                                                            --    s0.write
			s0_read               => dma_rd_3_s0_agent_m0_read,                                                             --      .read
			s0_address            => dma_rd_3_s0_agent_m0_address,                                                          --      .address
			s0_burstcount         => dma_rd_3_s0_agent_m0_burstcount,                                                       --      .burstcount
			s0_writedata          => dma_rd_3_s0_agent_m0_writedata,                                                        --      .writedata
			s0_lock               => dma_rd_3_s0_agent_m0_lock,                                                             --      .lock
			s0_debugaccess        => dma_rd_3_s0_agent_m0_debugaccess,                                                      --      .debugaccess
			s0_byteenable         => dma_rd_3_s0_agent_m0_byteenable,                                                       --      .byteenable
			s0_readdata           => dma_rd_3_s0_agent_m0_readdata,                                                         --      .readdata
			s0_readdatavalid      => dma_rd_3_s0_agent_m0_readdatavalid,                                                    --      .readdatavalid
			s0_waitrequest        => dma_rd_3_s0_agent_m0_waitrequest,                                                      --      .waitrequest
			s0_writeresponsevalid => open,                                                                                  -- (terminated)
			m0_writeresponsevalid => '0',                                                                                   -- (terminated)
			m0_response           => "00",                                                                                  -- (terminated)
			s0_response           => open                                                                                   -- (terminated)
		);

end architecture rtl; -- of PCIE_HIP_FDAS_altera_mm_interconnect_1920_j3desai
