----------------------------------------------------------------------------
-- Module Name:  fdas_core
--
-- Source Path:  fdas_core_lib/hdl/fdas_core.vhd
--
-- Created:
--          by - hastierj (COVNETICSDT15)
--          at - 14:21:56 24/03/2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.2a (Build 3)
----------------------------------------------------------------------------
--       __
--    ,/'__`\                             _     _
--   ,/ /  )_)   _   _   _   ___     __  | |__ (_)   __    ___
--   ( (    _  /' `\\ \ / //' _ `\ /'__`\|  __)| | /'__`)/',__)
--   '\ \__) )( (_) )\ ' / | ( ) |(  ___/| |_, | |( (___ \__, \
--    '\___,/  \___/  \_/  (_) (_)`\____)(___,)(_)`\___,)(____/
--
-- Copyright (c) Covnetics Limited 2020 All Rights Reserved. The information
-- contained herein remains the property of Covnetics Limited and may not be
-- copied or reproduced in any format or medium without the written consent
-- of Covnetics Limited.
--
----------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity fdas_core is
  generic( 
    ddr_g             : natural;
    fft_g             : natural;
    fft_abits_g       : natural;
    ifft_g            : natural;
    ifft_loop_g       : natural;
    ifft_loop_bits_g  : natural;
    summer_g          : natural;
    harmonic_g        : natural;
    product_id_g      : natural;
    version_number_g  : natural;
    revision_number_g : natural;
    res_pages_g       : natural
  );
  port( 
    AMM_READ_DATA0           : in     std_logic_vector (511 downto 0);
    AMM_READ_DATA2           : in     std_logic_vector (511 downto 0);
    AMM_READ_DATA3           : in     std_logic_vector (511 downto 0);
    AMM_READ_DATA_VALID0     : in     std_logic;
    AMM_READ_DATA_VALID2     : in     std_logic;
    AMM_READ_DATA_VALID3     : in     std_logic;
    AMM_WAIT_REQUEST0        : in     std_logic;
    AMM_WAIT_REQUEST2        : in     std_logic;
    AMM_WAIT_REQUEST3        : in     std_logic;
    CLK_DDR0                 : in     std_logic;
    CLK_DDR2                 : in     std_logic;
    CLK_DDR3                 : in     std_logic;
    CLK_MC                   : in     std_logic;
    CLK_PCIE                 : in     std_logic;
    CLK_SYS                  : in     std_logic;
    DDR_0_CAL_FAIL           : in     std_logic;
    DDR_0_CAL_PASS           : in     std_logic;
    DDR_0_RESET_DONE         : in     std_logic;
    DDR_1_CAL_FAIL           : in     std_logic;
    DDR_1_CAL_PASS           : in     std_logic;
    DDR_1_RESET_DONE         : in     std_logic;
    DDR_2_CAL_FAIL           : in     std_logic;
    DDR_2_CAL_PASS           : in     std_logic;
    DDR_2_RESET_DONE         : in     std_logic;
    DDR_3_CAL_FAIL           : in     std_logic;
    DDR_3_CAL_PASS           : in     std_logic;
    DDR_3_RESET_DONE         : in     std_logic;
    RD_DMA_0_ADDRESS         : in     std_logic_vector (31 downto 0);
    RD_DMA_0_BURST_COUNT     : in     std_logic_vector (3 downto 0);
    RD_DMA_0_BYTE_EN         : in     std_logic_vector (63 downto 0);
    RD_DMA_0_WRITE           : in     std_logic;
    RD_DMA_0_WRITE_DATA      : in     std_logic_vector (511 downto 0);
    RD_DMA_2_ADDRESS         : in     std_logic_vector (31 downto 0);
    RD_DMA_2_BURST_COUNT     : in     std_logic_vector (3 downto 0);
    RD_DMA_2_BYTE_EN         : in     std_logic_vector (63 downto 0);
    RD_DMA_2_WRITE           : in     std_logic;
    RD_DMA_2_WRITE_DATA      : in     std_logic_vector (511 downto 0);
    RD_DMA_3_ADDRESS         : in     std_logic_vector (31 downto 0);
    RD_DMA_3_BURST_COUNT     : in     std_logic_vector (3 downto 0);
    RD_DMA_3_BYTE_EN         : in     std_logic_vector (63 downto 0);
    RD_DMA_3_WRITE           : in     std_logic;
    RD_DMA_3_WRITE_DATA      : in     std_logic_vector (511 downto 0);
    RST_DDR0_N               : in     std_logic;
    RST_DDR2_N               : in     std_logic;
    RST_DDR3_N               : in     std_logic;
    RST_GLOBAL_N             : in     std_logic;
    RST_MC_N                 : in     std_logic;
    RST_PCIE_N               : in     std_logic;
    RXM_ADDRESS              : in     std_logic_vector (21 downto 0);
    RXM_BYTE_ENABLE          : in     std_logic_vector (3 downto 0);
    RXM_READ                 : in     std_logic;
    RXM_WRITE                : in     std_logic;
    RXM_WRITE_DATA           : in     std_logic_vector (31 downto 0);
    TOP_REVISION             : in     std_logic_vector (15 downto 0);
    TOP_VERSION              : in     std_logic_vector (15 downto 0);
    USR_EVENT_MSIX_READY     : in     std_logic;
    WR_DMA_0_ADDRESS         : in     std_logic_vector (31 downto 0);
    WR_DMA_0_BURST_COUNT     : in     std_logic_vector (3 downto 0);
    WR_DMA_0_READ            : in     std_logic;
    WR_DMA_2_ADDRESS         : in     std_logic_vector (31 downto 0);
    WR_DMA_2_BURST_COUNT     : in     std_logic_vector (3 downto 0);
    WR_DMA_2_READ            : in     std_logic;
    WR_DMA_3_ADDRESS         : in     std_logic_vector (31 downto 0);
    WR_DMA_3_BURST_COUNT     : in     std_logic_vector (3 downto 0);
    WR_DMA_3_READ            : in     std_logic;
    AMM_ADDRESS0             : out    std_logic_vector (31 downto 0);
    AMM_ADDRESS2             : out    std_logic_vector (31 downto 0);
    AMM_ADDRESS3             : out    std_logic_vector (31 downto 0);
    AMM_BURSTCOUNT0          : out    std_logic_vector (6 downto 0);
    AMM_BURSTCOUNT2          : out    std_logic_vector (6 downto 0);
    AMM_BURSTCOUNT3          : out    std_logic_vector (6 downto 0);
    AMM_BYTE_EN0             : out    std_logic_vector (63 downto 0);
    AMM_BYTE_EN2             : out    std_logic_vector (63 downto 0);
    AMM_BYTE_EN3             : out    std_logic_vector (63 downto 0);
    AMM_READ0                : out    std_logic;
    AMM_READ2                : out    std_logic;
    AMM_READ3                : out    std_logic;
    AMM_WRITE0               : out    std_logic;
    AMM_WRITE2               : out    std_logic;
    AMM_WRITE3               : out    std_logic;
    AMM_WRITE_DATA0          : out    std_logic_vector (511 downto 0);
    AMM_WRITE_DATA2          : out    std_logic_vector (511 downto 0);
    AMM_WRITE_DATA3          : out    std_logic_vector (511 downto 0);
    DDR_0_RST_N              : out    std_logic;
    DDR_1_RST_N              : out    std_logic;
    DDR_2_RST_N              : out    std_logic;
    DDR_3_RST_N              : out    std_logic;
    RD_DMA_0_WAIT_REQUEST    : out    std_logic;
    RD_DMA_2_WAIT_REQUEST    : out    std_logic;
    RD_DMA_3_WAIT_REQUEST    : out    std_logic;
    RXM_READ_DATA            : out    std_logic_vector (31 downto 0);
    RXM_READ_DATA_VALD       : out    std_logic;
    RXM_RESPONSE             : out    std_logic_vector (1 downto 0);
    RXM_WAIT_REQUEST         : out    std_logic;
    RXM_WRITE_RESPONSE_VALID : out    std_logic;
    USR_EVENT_MSIX_DATA      : out    std_logic_vector (15 downto 0);
    USR_EVENT_MSIX_VALID     : out    std_logic;
    WR_DMA_0_READ_DATA       : out    std_logic_vector (511 downto 0);
    WR_DMA_0_READ_DATA_VALID : out    std_logic;
    WR_DMA_0_WAIT_REQUEST    : out    std_logic;
    WR_DMA_2_READ_DATA       : out    std_logic_vector (511 downto 0);
    WR_DMA_2_READ_DATA_VALID : out    std_logic;
    WR_DMA_2_WAIT_REQUEST    : out    std_logic;
    WR_DMA_3_READ_DATA       : out    std_logic_vector (511 downto 0);
    WR_DMA_3_READ_DATA_VALID : out    std_logic;
    WR_DMA_3_WAIT_REQUEST    : out    std_logic
  );

-- Declarations

end entity fdas_core ;
