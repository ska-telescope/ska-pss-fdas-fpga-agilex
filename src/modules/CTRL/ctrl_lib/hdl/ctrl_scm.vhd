----------------------------------------------------------------------------
-- Module Name:  ctrl
--
-- Source Path:  ctrl_lib/hdl/ctrl_scm.vhd
--
-- Created:
--          by - droogm (COVNETICSDT17)
--          at - 09:38:57 13/06/2023
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.2a (Build 3)
---------------------------------------------------------------------------
--       __
--    ,/'__`\                             _     _
--   ,/ /  )_)   _   _   _   ___     __  | |__ (_)   __    ___
--   ( (    _  /' `\\ \ / //' _ `\ /'__`\|  __)| | /'__`)/',__)
--   '\ \__) )( (_) )\ ' / | ( ) |(  ___/| |_, | |( (___ \__, \
--    '\___,/  \___/  \_/  (_) (_)`\____)(___,)(_)`\___,)(____/
--
-- Copyright (c) Covnetics Limited 2023 All Rights Reserved. The information
-- contained herein remains the property of Covnetics Limited and may not be
-- copied or reproduced in any format or medium without the written consent
-- of Covnetics Limited.
--
----------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

library ctrl_lib;

architecture scm of ctrl is

  -- Architecture declarations

  -- Internal signal declarations
  signal cld_paused_s         : std_logic;
  signal cld_proc_time_s      : std_logic_vector(31 downto 0);
  signal conv_paused_s        : std_logic;
  signal conv_proc_time_s     : std_logic_vector(31 downto 0);
  signal conv_req_cnt_s       : std_logic_vector(31 downto 0);
  signal dm_trig_s            : std_logic;
  signal hsum_paused_s        : std_logic;
  signal hsum_proc_time_s     : std_logic_vector(31 downto 0);
  signal hsum_rec_cnt_s       : std_logic_vector(31 downto 0);
  signal hsum_req_cnt_s       : std_logic_vector(31 downto 0);
  signal latched_cld_done_s   : std_logic;
  signal latched_conv_done_s  : std_logic;
  signal latched_hsum_done_s  : std_logic;
  signal man_cld_en_s         : std_logic;
  signal man_cld_pause_cnt_s  : std_logic_vector(31 downto 0);
  signal man_cld_pause_en_s   : std_logic;
  signal man_cld_pause_rst_s  : std_logic;
  signal man_cld_trig_s       : std_logic;
  signal man_conv_en_s        : std_logic;
  signal man_conv_pause_cnt_s : std_logic_vector(31 downto 0);
  signal man_conv_pause_en_s  : std_logic;
  signal man_conv_pause_rst_s : std_logic;
  signal man_conv_trig_s      : std_logic;
  signal man_hsum_en_s        : std_logic;
  signal man_hsum_pause_cnt_s : std_logic_vector(31 downto 0);
  signal man_hsum_pause_en_s  : std_logic;
  signal man_hsum_pause_rst_s : std_logic;
  signal man_hsum_trig_s      : std_logic;
  signal man_override_s       : std_logic;
  signal page_s               : std_logic;


  -- Component Declarations
  component ctrl_func
  port (
    cld_done           : in     std_logic ;
    clk_sys            : in     std_logic ;
    conv_done          : in     std_logic ;
    conv_waitreq       : in     std_logic ;
    conv_wr_en         : in     std_logic ;
    dm_trig            : in     std_logic ;
    hsum_done          : in     std_logic ;
    hsum_rd_en         : in     std_logic ;
    hsum_valid         : in     std_logic ;
    hsum_waitreq       : in     std_logic ;
    man_cld_en         : in     std_logic ;
    man_cld_pause_cnt  : in     std_logic_vector (31 downto 0);
    man_cld_pause_en   : in     std_logic ;
    man_cld_pause_rst  : in     std_logic ;
    man_cld_trig       : in     std_logic ;
    man_conv_en        : in     std_logic ;
    man_conv_pause_cnt : in     std_logic_vector (31 downto 0);
    man_conv_pause_en  : in     std_logic ;
    man_conv_pause_rst : in     std_logic ;
    man_conv_trig      : in     std_logic ;
    man_hsum_en        : in     std_logic ;
    man_hsum_pause_cnt : in     std_logic_vector (31 downto 0);
    man_hsum_pause_en  : in     std_logic ;
    man_hsum_pause_rst : in     std_logic ;
    man_hsum_trig      : in     std_logic ;
    man_override       : in     std_logic ;
    page               : in     std_logic ;
    rst_sys_n          : in     std_logic ;
    cld_enable         : out    std_logic ;
    cld_page           : out    std_logic_vector (31 downto 0);
    cld_paused         : out    std_logic ;
    cld_proc_time      : out    std_logic_vector (31 downto 0);
    cld_trigger        : out    std_logic ;
    conv_enable        : out    std_logic ;
    conv_page          : out    std_logic_vector (31 downto 0);
    conv_paused        : out    std_logic ;
    conv_proc_time     : out    std_logic_vector (31 downto 0);
    conv_req_cnt       : out    std_logic_vector (31 downto 0);
    conv_trigger       : out    std_logic ;
    hsum_enable        : out    std_logic ;
    hsum_page          : out    std_logic_vector (31 downto 0);
    hsum_paused        : out    std_logic ;
    hsum_proc_time     : out    std_logic_vector (31 downto 0);
    hsum_rec_cnt       : out    std_logic_vector (31 downto 0);
    hsum_req_cnt       : out    std_logic_vector (31 downto 0);
    hsum_trigger       : out    std_logic ;
    latched_cld_done   : out    std_logic ;
    latched_conv_done  : out    std_logic ;
    latched_hsum_done  : out    std_logic 
  );
  end component ctrl_func;
  component ctrlmci
  port (
    MCADDR             : in     std_logic_vector (18 downto 0);
    MCDATAIN           : in     std_logic_vector (31 downto 0);
    MCDATAOUT          : out    std_logic_vector (31 downto 0);
    MCRWN              : in     std_logic ;
    MCMS               : in     std_logic ;
    CLK_MC             : in     std_logic ;
    RST_MC_N           : in     std_logic ;
    DM_TRIG            : out    std_logic ;
    PAGE               : out    std_logic ;
    OVERLAP_SIZE       : out    std_logic_vector (9 downto 0);
    FOP_SAMPLE_NUM     : out    std_logic_vector (22 downto 0);
    IFFT_LOOP_NUM      : out    std_logic_vector (5 downto 0);
    MAN_OVERRIDE       : out    std_logic ;
    MAN_CLD_TRIG       : out    std_logic ;
    MAN_CONV_TRIG      : out    std_logic ;
    MAN_HSUM_TRIG      : out    std_logic ;
    MAN_CLD_EN         : out    std_logic ;
    MAN_CONV_EN        : out    std_logic ;
    MAN_HSUM_EN        : out    std_logic ;
    MAN_CLD_PAUSE_EN   : out    std_logic ;
    MAN_CONV_PAUSE_EN  : out    std_logic ;
    MAN_HSUM_PAUSE_EN  : out    std_logic ;
    MAN_CLD_PAUSE_RST  : out    std_logic ;
    MAN_CONV_PAUSE_RST : out    std_logic ;
    MAN_HSUM_PAUSE_RST : out    std_logic ;
    MAN_CLD_PAUSE_CNT  : out    std_logic_vector (31 downto 0);
    MAN_CONV_PAUSE_CNT : out    std_logic_vector (31 downto 0);
    MAN_HSUM_PAUSE_CNT : out    std_logic_vector (31 downto 0);
    LATCHED_CLD_DONE   : in     std_logic ;
    LATCHED_CONV_DONE  : in     std_logic ;
    LATCHED_HSUM_DONE  : in     std_logic ;
    CLD_PAUSED         : in     std_logic ;
    CONV_PAUSED        : in     std_logic ;
    HSUM_PAUSED        : in     std_logic ;
    CONV_FFT_READY     : in     std_logic ;
    CLD_PROC_TIME      : in     std_logic_vector (31 downto 0);
    CONV_PROC_TIME     : in     std_logic_vector (31 downto 0);
    HSUM_PROC_TIME     : in     std_logic_vector (31 downto 0);
    CONV_REQ_CNT       : in     std_logic_vector (31 downto 0);
    HSUM_REQ_CNT       : in     std_logic_vector (31 downto 0);
    HSUM_REC_CNT       : in     std_logic_vector (31 downto 0)
  );
  end component ctrlmci;

  -- Optional embedded configurations
  -- pragma synthesis_off
  for all : ctrl_func use entity ctrl_lib.ctrl_func;
  for all : ctrlmci use entity ctrl_lib.ctrlmci;
  -- pragma synthesis_on


begin

  -- Instance port mappings.
  func_1 : ctrl_func
    port map (
      cld_done           => cld_done,
      clk_sys            => clk_sys,
      conv_done          => conv_done,
      conv_waitreq       => conv_waitreq,
      conv_wr_en         => conv_wr_en,
      dm_trig            => dm_trig_s,
      hsum_done          => hsum_done,
      hsum_rd_en         => hsum_rd_en,
      hsum_valid         => hsum_valid,
      hsum_waitreq       => hsum_waitreq,
      man_cld_en         => man_cld_en_s,
      man_cld_pause_cnt  => man_cld_pause_cnt_s,
      man_cld_pause_en   => man_cld_pause_en_s,
      man_cld_pause_rst  => man_cld_pause_rst_s,
      man_cld_trig       => man_cld_trig_s,
      man_conv_en        => man_conv_en_s,
      man_conv_pause_cnt => man_conv_pause_cnt_s,
      man_conv_pause_en  => man_conv_pause_en_s,
      man_conv_pause_rst => man_conv_pause_rst_s,
      man_conv_trig      => man_conv_trig_s,
      man_hsum_en        => man_hsum_en_s,
      man_hsum_pause_cnt => man_hsum_pause_cnt_s,
      man_hsum_pause_en  => man_hsum_pause_en_s,
      man_hsum_pause_rst => man_hsum_pause_rst_s,
      man_hsum_trig      => man_hsum_trig_s,
      man_override       => man_override_s,
      page               => page_s,
      rst_sys_n          => rst_sys_n,
      cld_enable         => cld_enable,
      cld_page           => cld_page,
      cld_paused         => cld_paused_s,
      cld_proc_time      => cld_proc_time_s,
      cld_trigger        => cld_trigger,
      conv_enable        => conv_enable,
      conv_page          => conv_page,
      conv_paused        => conv_paused_s,
      conv_proc_time     => conv_proc_time_s,
      conv_req_cnt       => conv_req_cnt_s,
      conv_trigger       => conv_trigger,
      hsum_enable        => hsum_enable,
      hsum_page          => hsum_page,
      hsum_paused        => hsum_paused_s,
      hsum_proc_time     => hsum_proc_time_s,
      hsum_rec_cnt       => hsum_rec_cnt_s,
      hsum_req_cnt       => hsum_req_cnt_s,
      hsum_trigger       => hsum_trigger,
      latched_cld_done   => latched_cld_done_s,
      latched_conv_done  => latched_conv_done_s,
      latched_hsum_done  => latched_hsum_done_s
    );
  mci1 : ctrlmci
    port map (
      MCADDR             => mcaddr,
      MCDATAIN           => mcdatain,
      MCDATAOUT          => mcdataout,
      MCRWN              => mcrwn,
      MCMS               => mcms,
      CLK_MC             => clk_mc,
      RST_MC_N           => rst_mc_n,
      DM_TRIG            => dm_trig_s,
      PAGE               => page_s,
      OVERLAP_SIZE       => overlap_size,
      FOP_SAMPLE_NUM     => fop_sample_num,
      IFFT_LOOP_NUM      => ifft_loop_num,
      MAN_OVERRIDE       => man_override_s,
      MAN_CLD_TRIG       => man_cld_trig_s,
      MAN_CONV_TRIG      => man_conv_trig_s,
      MAN_HSUM_TRIG      => man_hsum_trig_s,
      MAN_CLD_EN         => man_cld_en_s,
      MAN_CONV_EN        => man_conv_en_s,
      MAN_HSUM_EN        => man_hsum_en_s,
      MAN_CLD_PAUSE_EN   => man_cld_pause_en_s,
      MAN_CONV_PAUSE_EN  => man_conv_pause_en_s,
      MAN_HSUM_PAUSE_EN  => man_hsum_pause_en_s,
      MAN_CLD_PAUSE_RST  => man_cld_pause_rst_s,
      MAN_CONV_PAUSE_RST => man_conv_pause_rst_s,
      MAN_HSUM_PAUSE_RST => man_hsum_pause_rst_s,
      MAN_CLD_PAUSE_CNT  => man_cld_pause_cnt_s,
      MAN_CONV_PAUSE_CNT => man_conv_pause_cnt_s,
      MAN_HSUM_PAUSE_CNT => man_hsum_pause_cnt_s,
      LATCHED_CLD_DONE   => latched_cld_done_s,
      LATCHED_CONV_DONE  => latched_conv_done_s,
      LATCHED_HSUM_DONE  => latched_hsum_done_s,
      CLD_PAUSED         => cld_paused_s,
      CONV_PAUSED        => conv_paused_s,
      HSUM_PAUSED        => hsum_paused_s,
      CONV_FFT_READY     => conv_fft_ready,
      CLD_PROC_TIME      => cld_proc_time_s,
      CONV_PROC_TIME     => conv_proc_time_s,
      HSUM_PROC_TIME     => hsum_proc_time_s,
      CONV_REQ_CNT       => conv_req_cnt_s,
      HSUM_REQ_CNT       => hsum_req_cnt_s,
      HSUM_REC_CNT       => hsum_rec_cnt_s
    );

end architecture scm;
