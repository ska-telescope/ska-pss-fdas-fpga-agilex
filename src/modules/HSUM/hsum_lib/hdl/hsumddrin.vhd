----------------------------------------------------------------------------
-- Module Name:  hsumddrin
--
-- Source Path:  hsum_lib/hdl/hsumddrin.vhd
--
-- Created:
--          by - droogm (COVNETICSDT17)
--          at - 10:27:04 31/01/2024
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.2a (Build 3)
----------------------------------------------------------------------------
--       __
--    ,/'__`\                             _     _
--   ,/ /  )_)   _   _   _   ___     __  | |__ (_)   __    ___
--   ( (    _  /' `\\ \ / //' _ `\ /'__`\|  __)| | /'__`)/',__)
--   '\ \__) )( (_) )\ ' / | ( ) |(  ___/| |_, | |( (___ \__, \
--    '\___,/  \___/  \_/  (_) (_)`\____)(___,)(_)`\___,)(____/
--
-- Copyright (c) Covnetics Limited 2024 All Rights Reserved. The information
-- contained herein remains the property of Covnetics Limited and may not be
-- copied or reproduced in any format or medium without the written consent
-- of Covnetics Limited.
--
----------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;
library hsum_lib;
use hsum_lib.hsum_pkg.all;

entity hsumddrin is
  generic( 
    summer_g   : natural range 1 to 3;
    ddr_g      : natural range 1 to 3;
    harmonic_g : natural range 8 to 16    -- Max number of harmonics that may be processed (including fundamental).
  );
  port( 
    -- Control and configuration inputs.
    hsum_page      : in     std_logic_vector (31 downto 0);                                         -- Offset of data in DDR memory.
    new_col        : in     std_logic;                                                              -- Trigger to start reading new set of column data.
    seed_col       : in     std_logic_vector (21 downto 0);                                         -- First column of a set to read.
    h              : in     std_logic_vector (3 downto 0);                                          -- Number of harmonics to process.
    fop_row        : in     std_logic_vector (6 downto 0);                                          -- Number of FOP rows to read.
    fop_col_offset : in     std_logic_vector (8 downto 0);                                          -- Offset to first valid FOP column.
    triggered      : in     std_logic;                                                              -- Initialises write address at start of new run.
    ddrin_rd_page  : in     std_logic_vector (1 downto 0);                                          -- RAM page to use when SUMMER is reading FOP data.
    -- Data select from SUMMER.
    hpsel          : in     std_logic_vector (summer_g*harmonic_g*7-1 downto 0);
    hpsel_en       : in     std_logic_vector (summer_g*harmonic_g-1 downto 0);
    -- Control & Data from DDR interface.
    ddr_data       : in     std_logic_vector (ddr_g*512-1 downto 0);
    data_valid     : in     std_logic;
    wait_request   : in     std_logic;
    -- Read request to DDR interface.
    ddr_addr       : out    std_logic_vector (31 downto 0);
    ddr_read       : out    std_logic;
    -- Data to SUMMER.
    data_sum       : out    std_logic_vector (summer_g*last_column_c(harmonic_g-1)*32-1 downto 0);
    -- Control response to TGEN.
    done_req       : out    std_logic;
    done_read      : out    std_logic;
    -- Clock and reset.
    clk_sys        : in     std_logic;
    rst_sys_n      : in     std_logic_vector (0 to summer_g-1)
  );

-- Declarations

end entity hsumddrin ;
