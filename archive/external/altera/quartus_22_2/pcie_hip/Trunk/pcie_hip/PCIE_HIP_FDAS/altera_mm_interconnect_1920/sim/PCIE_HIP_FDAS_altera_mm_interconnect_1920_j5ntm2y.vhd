-- PCIE_HIP_FDAS_altera_mm_interconnect_1920_j5ntm2y.vhd

-- This file was auto-generated from altera_mm_interconnect_hw.tcl.  If you edit it your changes
-- will probably be lost.
-- 
-- Generated using ACDS version 22.2 94

library IEEE;
library altera_merlin_master_translator_191;
library altera_merlin_slave_translator_191;
library altera_merlin_master_agent_191;
library altera_merlin_slave_agent_191;
library altera_avalon_sc_fifo_1931;
library altera_merlin_router_1921;
library altera_merlin_burst_adapter_1922;
library altera_merlin_demultiplexer_1921;
library altera_merlin_multiplexer_1921;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity PCIE_HIP_FDAS_altera_mm_interconnect_1920_j5ntm2y is
	port (
		intel_pcie_ptile_mcdma_0_rx_pio_master_address                                      : in  std_logic_vector(27 downto 0) := (others => '0'); --                                        intel_pcie_ptile_mcdma_0_rx_pio_master.address
		intel_pcie_ptile_mcdma_0_rx_pio_master_waitrequest                                  : out std_logic;                                        --                                                                              .waitrequest
		intel_pcie_ptile_mcdma_0_rx_pio_master_burstcount                                   : in  std_logic_vector(3 downto 0)  := (others => '0'); --                                                                              .burstcount
		intel_pcie_ptile_mcdma_0_rx_pio_master_byteenable                                   : in  std_logic_vector(7 downto 0)  := (others => '0'); --                                                                              .byteenable
		intel_pcie_ptile_mcdma_0_rx_pio_master_read                                         : in  std_logic                     := '0';             --                                                                              .read
		intel_pcie_ptile_mcdma_0_rx_pio_master_readdata                                     : out std_logic_vector(63 downto 0);                    --                                                                              .readdata
		intel_pcie_ptile_mcdma_0_rx_pio_master_readdatavalid                                : out std_logic;                                        --                                                                              .readdatavalid
		intel_pcie_ptile_mcdma_0_rx_pio_master_write                                        : in  std_logic                     := '0';             --                                                                              .write
		intel_pcie_ptile_mcdma_0_rx_pio_master_writedata                                    : in  std_logic_vector(63 downto 0) := (others => '0'); --                                                                              .writedata
		intel_pcie_ptile_mcdma_0_rx_pio_master_response                                     : out std_logic_vector(1 downto 0);                     --                                                                              .response
		intel_pcie_ptile_mcdma_0_rx_pio_master_writeresponsevalid                           : out std_logic;                                        --                                                                              .writeresponsevalid
		rxm_bar2_0_s0_address                                                               : out std_logic_vector(21 downto 0);                    --                                                                 rxm_bar2_0_s0.address
		rxm_bar2_0_s0_write                                                                 : out std_logic;                                        --                                                                              .write
		rxm_bar2_0_s0_read                                                                  : out std_logic;                                        --                                                                              .read
		rxm_bar2_0_s0_readdata                                                              : in  std_logic_vector(63 downto 0) := (others => '0'); --                                                                              .readdata
		rxm_bar2_0_s0_writedata                                                             : out std_logic_vector(63 downto 0);                    --                                                                              .writedata
		rxm_bar2_0_s0_byteenable                                                            : out std_logic_vector(7 downto 0);                     --                                                                              .byteenable
		rxm_bar2_0_s0_readdatavalid                                                         : in  std_logic                     := '0';             --                                                                              .readdatavalid
		rxm_bar2_0_s0_waitrequest                                                           : in  std_logic                     := '0';             --                                                                              .waitrequest
		rxm_bar2_0_s0_response                                                              : in  std_logic_vector(1 downto 0)  := (others => '0'); --                                                                              .response
		rxm_bar2_0_s0_writeresponsevalid                                                    : in  std_logic                     := '0';             --                                                                              .writeresponsevalid
		rxm_bar2_0_reset_reset_bridge_in_reset_reset                                        : in  std_logic                     := '0';             --                                        rxm_bar2_0_reset_reset_bridge_in_reset.reset
		intel_pcie_ptile_mcdma_0_rx_pio_master_translator_reset_reset_bridge_in_reset_reset : in  std_logic                     := '0';             -- intel_pcie_ptile_mcdma_0_rx_pio_master_translator_reset_reset_bridge_in_reset.reset
		intel_pcie_ptile_mcdma_0_app_clk_clk                                                : in  std_logic                     := '0'              --                                              intel_pcie_ptile_mcdma_0_app_clk.clk
	);
end entity PCIE_HIP_FDAS_altera_mm_interconnect_1920_j5ntm2y;

architecture rtl of PCIE_HIP_FDAS_altera_mm_interconnect_1920_j5ntm2y is
	component PCIE_HIP_FDAS_altera_merlin_master_translator_191_g7h47bq_cmp is
		generic (
			AV_ADDRESS_W                : integer := 32;
			AV_DATA_W                   : integer := 32;
			AV_BURSTCOUNT_W             : integer := 4;
			AV_BYTEENABLE_W             : integer := 4;
			UAV_ADDRESS_W               : integer := 38;
			UAV_BURSTCOUNT_W            : integer := 10;
			USE_READ                    : integer := 1;
			USE_WRITE                   : integer := 1;
			USE_BEGINBURSTTRANSFER      : integer := 0;
			USE_BEGINTRANSFER           : integer := 0;
			USE_CHIPSELECT              : integer := 0;
			USE_BURSTCOUNT              : integer := 1;
			USE_READDATAVALID           : integer := 1;
			USE_WAITREQUEST             : integer := 1;
			USE_READRESPONSE            : integer := 0;
			USE_WRITERESPONSE           : integer := 0;
			AV_SYMBOLS_PER_WORD         : integer := 4;
			AV_ADDRESS_SYMBOLS          : integer := 0;
			AV_BURSTCOUNT_SYMBOLS       : integer := 0;
			AV_CONSTANT_BURST_BEHAVIOR  : integer := 0;
			UAV_CONSTANT_BURST_BEHAVIOR : integer := 0;
			AV_LINEWRAPBURSTS           : integer := 0;
			AV_REGISTERINCOMINGSIGNALS  : integer := 0;
			SYNC_RESET                  : integer := 0;
			WAITREQUEST_ALLOWANCE       : integer := 0
		);
		port (
			clk                    : in  std_logic                     := 'X';             -- clk
			reset                  : in  std_logic                     := 'X';             -- reset
			uav_address            : out std_logic_vector(27 downto 0);                    -- address
			uav_burstcount         : out std_logic_vector(6 downto 0);                     -- burstcount
			uav_read               : out std_logic;                                        -- read
			uav_write              : out std_logic;                                        -- write
			uav_waitrequest        : in  std_logic                     := 'X';             -- waitrequest
			uav_readdatavalid      : in  std_logic                     := 'X';             -- readdatavalid
			uav_byteenable         : out std_logic_vector(7 downto 0);                     -- byteenable
			uav_readdata           : in  std_logic_vector(63 downto 0) := (others => 'X'); -- readdata
			uav_writedata          : out std_logic_vector(63 downto 0);                    -- writedata
			uav_lock               : out std_logic;                                        -- lock
			uav_debugaccess        : out std_logic;                                        -- debugaccess
			uav_response           : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- response
			uav_writeresponsevalid : in  std_logic                     := 'X';             -- writeresponsevalid
			av_address             : in  std_logic_vector(27 downto 0) := (others => 'X'); -- address
			av_waitrequest         : out std_logic;                                        -- waitrequest
			av_burstcount          : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- burstcount
			av_byteenable          : in  std_logic_vector(7 downto 0)  := (others => 'X'); -- byteenable
			av_read                : in  std_logic                     := 'X';             -- read
			av_readdata            : out std_logic_vector(63 downto 0);                    -- readdata
			av_readdatavalid       : out std_logic;                                        -- readdatavalid
			av_write               : in  std_logic                     := 'X';             -- write
			av_writedata           : in  std_logic_vector(63 downto 0) := (others => 'X'); -- writedata
			av_response            : out std_logic_vector(1 downto 0);                     -- response
			av_writeresponsevalid  : out std_logic;                                        -- writeresponsevalid
			av_beginbursttransfer  : in  std_logic                     := 'X';             -- beginbursttransfer
			av_begintransfer       : in  std_logic                     := 'X';             -- begintransfer
			av_chipselect          : in  std_logic                     := 'X';             -- chipselect
			av_lock                : in  std_logic                     := 'X';             -- lock
			av_debugaccess         : in  std_logic                     := 'X';             -- debugaccess
			uav_clken              : out std_logic;                                        -- clken
			av_clken               : in  std_logic                     := 'X'              -- clken
		);
	end component PCIE_HIP_FDAS_altera_merlin_master_translator_191_g7h47bq_cmp;

	component PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki_cmp is
		generic (
			AV_ADDRESS_W                   : integer := 30;
			AV_DATA_W                      : integer := 32;
			UAV_DATA_W                     : integer := 32;
			AV_BURSTCOUNT_W                : integer := 4;
			AV_BYTEENABLE_W                : integer := 4;
			UAV_BYTEENABLE_W               : integer := 4;
			UAV_ADDRESS_W                  : integer := 32;
			UAV_BURSTCOUNT_W               : integer := 4;
			AV_READLATENCY                 : integer := 0;
			USE_READDATAVALID              : integer := 1;
			USE_WAITREQUEST                : integer := 1;
			USE_UAV_CLKEN                  : integer := 0;
			USE_READRESPONSE               : integer := 0;
			USE_WRITERESPONSE              : integer := 0;
			AV_SYMBOLS_PER_WORD            : integer := 4;
			AV_ADDRESS_SYMBOLS             : integer := 0;
			AV_BURSTCOUNT_SYMBOLS          : integer := 0;
			AV_CONSTANT_BURST_BEHAVIOR     : integer := 0;
			UAV_CONSTANT_BURST_BEHAVIOR    : integer := 0;
			AV_REQUIRE_UNALIGNED_ADDRESSES : integer := 0;
			CHIPSELECT_THROUGH_READLATENCY : integer := 0;
			AV_READ_WAIT_CYCLES            : integer := 0;
			AV_WRITE_WAIT_CYCLES           : integer := 0;
			AV_SETUP_WAIT_CYCLES           : integer := 0;
			AV_DATA_HOLD_CYCLES            : integer := 0;
			WAITREQUEST_ALLOWANCE          : integer := 0;
			SYNC_RESET                     : integer := 0
		);
		port (
			clk                    : in  std_logic                     := 'X';             -- clk
			reset                  : in  std_logic                     := 'X';             -- reset
			uav_address            : in  std_logic_vector(27 downto 0) := (others => 'X'); -- address
			uav_burstcount         : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- burstcount
			uav_read               : in  std_logic                     := 'X';             -- read
			uav_write              : in  std_logic                     := 'X';             -- write
			uav_waitrequest        : out std_logic;                                        -- waitrequest
			uav_readdatavalid      : out std_logic;                                        -- readdatavalid
			uav_byteenable         : in  std_logic_vector(7 downto 0)  := (others => 'X'); -- byteenable
			uav_readdata           : out std_logic_vector(63 downto 0);                    -- readdata
			uav_writedata          : in  std_logic_vector(63 downto 0) := (others => 'X'); -- writedata
			uav_lock               : in  std_logic                     := 'X';             -- lock
			uav_debugaccess        : in  std_logic                     := 'X';             -- debugaccess
			uav_response           : out std_logic_vector(1 downto 0);                     -- response
			uav_writeresponsevalid : out std_logic;                                        -- writeresponsevalid
			av_address             : out std_logic_vector(21 downto 0);                    -- address
			av_write               : out std_logic;                                        -- write
			av_read                : out std_logic;                                        -- read
			av_readdata            : in  std_logic_vector(63 downto 0) := (others => 'X'); -- readdata
			av_writedata           : out std_logic_vector(63 downto 0);                    -- writedata
			av_byteenable          : out std_logic_vector(7 downto 0);                     -- byteenable
			av_readdatavalid       : in  std_logic                     := 'X';             -- readdatavalid
			av_waitrequest         : in  std_logic                     := 'X';             -- waitrequest
			av_response            : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- response
			av_writeresponsevalid  : in  std_logic                     := 'X';             -- writeresponsevalid
			av_begintransfer       : out std_logic;                                        -- begintransfer
			av_beginbursttransfer  : out std_logic;                                        -- beginbursttransfer
			av_burstcount          : out std_logic_vector(0 downto 0);                     -- burstcount
			av_writebyteenable     : out std_logic_vector(7 downto 0);                     -- writebyteenable
			av_lock                : out std_logic;                                        -- lock
			av_chipselect          : out std_logic;                                        -- chipselect
			av_clken               : out std_logic;                                        -- clken
			uav_clken              : in  std_logic                     := 'X';             -- clken
			av_debugaccess         : out std_logic;                                        -- debugaccess
			av_outputenable        : out std_logic                                         -- outputenable
		);
	end component PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki_cmp;

	component PCIE_HIP_FDAS_altera_merlin_master_agent_191_mpbm6tq_cmp is
		generic (
			PKT_WUNIQUE               : integer := 125;
			PKT_DOMAIN_H              : integer := 124;
			PKT_DOMAIN_L              : integer := 123;
			PKT_SNOOP_H               : integer := 122;
			PKT_SNOOP_L               : integer := 119;
			PKT_BARRIER_H             : integer := 118;
			PKT_BARRIER_L             : integer := 117;
			PKT_ORI_BURST_SIZE_H      : integer := 116;
			PKT_ORI_BURST_SIZE_L      : integer := 114;
			PKT_RESPONSE_STATUS_H     : integer := 113;
			PKT_RESPONSE_STATUS_L     : integer := 112;
			PKT_QOS_H                 : integer := 111;
			PKT_QOS_L                 : integer := 108;
			PKT_DATA_SIDEBAND_H       : integer := 107;
			PKT_DATA_SIDEBAND_L       : integer := 100;
			PKT_ADDR_SIDEBAND_H       : integer := 99;
			PKT_ADDR_SIDEBAND_L       : integer := 95;
			PKT_BURST_TYPE_H          : integer := 94;
			PKT_BURST_TYPE_L          : integer := 93;
			PKT_CACHE_H               : integer := 92;
			PKT_CACHE_L               : integer := 89;
			PKT_THREAD_ID_H           : integer := 88;
			PKT_THREAD_ID_L           : integer := 87;
			PKT_BURST_SIZE_H          : integer := 86;
			PKT_BURST_SIZE_L          : integer := 84;
			PKT_TRANS_EXCLUSIVE       : integer := 83;
			PKT_TRANS_LOCK            : integer := 82;
			PKT_BEGIN_BURST           : integer := 81;
			PKT_PROTECTION_H          : integer := 80;
			PKT_PROTECTION_L          : integer := 80;
			PKT_BURSTWRAP_H           : integer := 79;
			PKT_BURSTWRAP_L           : integer := 77;
			PKT_BYTE_CNT_H            : integer := 76;
			PKT_BYTE_CNT_L            : integer := 74;
			PKT_ADDR_H                : integer := 73;
			PKT_ADDR_L                : integer := 42;
			PKT_TRANS_COMPRESSED_READ : integer := 41;
			PKT_TRANS_POSTED          : integer := 40;
			PKT_TRANS_WRITE           : integer := 39;
			PKT_TRANS_READ            : integer := 38;
			PKT_DATA_H                : integer := 37;
			PKT_DATA_L                : integer := 6;
			PKT_BYTEEN_H              : integer := 5;
			PKT_BYTEEN_L              : integer := 2;
			PKT_SRC_ID_H              : integer := 1;
			PKT_SRC_ID_L              : integer := 1;
			PKT_DEST_ID_H             : integer := 0;
			PKT_DEST_ID_L             : integer := 0;
			ST_DATA_W                 : integer := 126;
			ST_CHANNEL_W              : integer := 1;
			AV_BURSTCOUNT_W           : integer := 3;
			SUPPRESS_0_BYTEEN_RSP     : integer := 1;
			ID                        : integer := 1;
			BURSTWRAP_VALUE           : integer := 4;
			CACHE_VALUE               : integer := 0;
			SECURE_ACCESS_BIT         : integer := 1;
			USE_READRESPONSE          : integer := 0;
			USE_WRITERESPONSE         : integer := 0;
			DOMAIN_VALUE              : integer := 3;
			BARRIER_VALUE             : integer := 0;
			SNOOP_VALUE               : integer := 0;
			WUNIQUE_VALUE             : integer := 0;
			SYNC_RESET                : integer := 0
		);
		port (
			clk                   : in  std_logic                      := 'X';             -- clk
			reset                 : in  std_logic                      := 'X';             -- reset
			av_address            : in  std_logic_vector(27 downto 0)  := (others => 'X'); -- address
			av_write              : in  std_logic                      := 'X';             -- write
			av_read               : in  std_logic                      := 'X';             -- read
			av_writedata          : in  std_logic_vector(63 downto 0)  := (others => 'X'); -- writedata
			av_readdata           : out std_logic_vector(63 downto 0);                     -- readdata
			av_waitrequest        : out std_logic;                                         -- waitrequest
			av_readdatavalid      : out std_logic;                                         -- readdatavalid
			av_byteenable         : in  std_logic_vector(7 downto 0)   := (others => 'X'); -- byteenable
			av_burstcount         : in  std_logic_vector(6 downto 0)   := (others => 'X'); -- burstcount
			av_debugaccess        : in  std_logic                      := 'X';             -- debugaccess
			av_lock               : in  std_logic                      := 'X';             -- lock
			av_response           : out std_logic_vector(1 downto 0);                      -- response
			av_writeresponsevalid : out std_logic;                                         -- writeresponsevalid
			cp_valid              : out std_logic;                                         -- valid
			cp_data               : out std_logic_vector(146 downto 0);                    -- data
			cp_startofpacket      : out std_logic;                                         -- startofpacket
			cp_endofpacket        : out std_logic;                                         -- endofpacket
			cp_ready              : in  std_logic                      := 'X';             -- ready
			rp_valid              : in  std_logic                      := 'X';             -- valid
			rp_data               : in  std_logic_vector(146 downto 0) := (others => 'X'); -- data
			rp_channel            : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- channel
			rp_startofpacket      : in  std_logic                      := 'X';             -- startofpacket
			rp_endofpacket        : in  std_logic                      := 'X';             -- endofpacket
			rp_ready              : out std_logic                                          -- ready
		);
	end component PCIE_HIP_FDAS_altera_merlin_master_agent_191_mpbm6tq_cmp;

	component PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri_cmp is
		generic (
			PKT_ORI_BURST_SIZE_H      : integer := 90;
			PKT_ORI_BURST_SIZE_L      : integer := 88;
			PKT_RESPONSE_STATUS_H     : integer := 87;
			PKT_RESPONSE_STATUS_L     : integer := 86;
			PKT_BURST_SIZE_H          : integer := 85;
			PKT_BURST_SIZE_L          : integer := 83;
			PKT_TRANS_LOCK            : integer := 82;
			PKT_BEGIN_BURST           : integer := 81;
			PKT_PROTECTION_H          : integer := 80;
			PKT_PROTECTION_L          : integer := 80;
			PKT_BURSTWRAP_H           : integer := 79;
			PKT_BURSTWRAP_L           : integer := 77;
			PKT_BYTE_CNT_H            : integer := 76;
			PKT_BYTE_CNT_L            : integer := 74;
			PKT_ADDR_H                : integer := 73;
			PKT_ADDR_L                : integer := 42;
			PKT_TRANS_COMPRESSED_READ : integer := 41;
			PKT_TRANS_POSTED          : integer := 40;
			PKT_TRANS_WRITE           : integer := 39;
			PKT_TRANS_READ            : integer := 38;
			PKT_DATA_H                : integer := 37;
			PKT_DATA_L                : integer := 6;
			PKT_BYTEEN_H              : integer := 5;
			PKT_BYTEEN_L              : integer := 2;
			PKT_SRC_ID_H              : integer := 1;
			PKT_SRC_ID_L              : integer := 1;
			PKT_DEST_ID_H             : integer := 0;
			PKT_DEST_ID_L             : integer := 0;
			PKT_SYMBOL_W              : integer := 8;
			ST_CHANNEL_W              : integer := 8;
			ST_DATA_W                 : integer := 96;
			AVS_BURSTCOUNT_W          : integer := 4;
			SUPPRESS_0_BYTEEN_CMD     : integer := 1;
			USE_MEMORY_BLOCKS         : integer := 0;
			PREVENT_FIFO_OVERFLOW     : integer := 0;
			USE_READRESPONSE          : integer := 0;
			USE_WRITERESPONSE         : integer := 0;
			ECC_ENABLE                : integer := 0;
			SYNC_RESET                : integer := 0
		);
		port (
			clk                     : in  std_logic                      := 'X';             -- clk
			reset                   : in  std_logic                      := 'X';             -- reset
			m0_address              : out std_logic_vector(27 downto 0);                     -- address
			m0_burstcount           : out std_logic_vector(3 downto 0);                      -- burstcount
			m0_byteenable           : out std_logic_vector(7 downto 0);                      -- byteenable
			m0_debugaccess          : out std_logic;                                         -- debugaccess
			m0_lock                 : out std_logic;                                         -- lock
			m0_readdata             : in  std_logic_vector(63 downto 0)  := (others => 'X'); -- readdata
			m0_readdatavalid        : in  std_logic                      := 'X';             -- readdatavalid
			m0_read                 : out std_logic;                                         -- read
			m0_waitrequest          : in  std_logic                      := 'X';             -- waitrequest
			m0_writedata            : out std_logic_vector(63 downto 0);                     -- writedata
			m0_write                : out std_logic;                                         -- write
			m0_response             : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- response
			m0_writeresponsevalid   : in  std_logic                      := 'X';             -- writeresponsevalid
			rp_endofpacket          : out std_logic;                                         -- endofpacket
			rp_ready                : in  std_logic                      := 'X';             -- ready
			rp_valid                : out std_logic;                                         -- valid
			rp_data                 : out std_logic_vector(146 downto 0);                    -- data
			rp_startofpacket        : out std_logic;                                         -- startofpacket
			cp_ready                : out std_logic;                                         -- ready
			cp_valid                : in  std_logic                      := 'X';             -- valid
			cp_data                 : in  std_logic_vector(146 downto 0) := (others => 'X'); -- data
			cp_startofpacket        : in  std_logic                      := 'X';             -- startofpacket
			cp_endofpacket          : in  std_logic                      := 'X';             -- endofpacket
			cp_channel              : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- channel
			rf_sink_ready           : out std_logic;                                         -- ready
			rf_sink_valid           : in  std_logic                      := 'X';             -- valid
			rf_sink_startofpacket   : in  std_logic                      := 'X';             -- startofpacket
			rf_sink_endofpacket     : in  std_logic                      := 'X';             -- endofpacket
			rf_sink_data            : in  std_logic_vector(147 downto 0) := (others => 'X'); -- data
			rf_source_ready         : in  std_logic                      := 'X';             -- ready
			rf_source_valid         : out std_logic;                                         -- valid
			rf_source_startofpacket : out std_logic;                                         -- startofpacket
			rf_source_endofpacket   : out std_logic;                                         -- endofpacket
			rf_source_data          : out std_logic_vector(147 downto 0);                    -- data
			rdata_fifo_sink_ready   : out std_logic;                                         -- ready
			rdata_fifo_sink_valid   : in  std_logic                      := 'X';             -- valid
			rdata_fifo_sink_data    : in  std_logic_vector(65 downto 0)  := (others => 'X'); -- data
			rdata_fifo_src_ready    : in  std_logic                      := 'X';             -- ready
			rdata_fifo_src_valid    : out std_logic;                                         -- valid
			rdata_fifo_src_data     : out std_logic_vector(65 downto 0);                     -- data
			rdata_fifo_sink_error   : in  std_logic                      := 'X'              -- error
		);
	end component PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri_cmp;

	component PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy_cmp is
		generic (
			SYMBOLS_PER_BEAT    : integer := 1;
			BITS_PER_SYMBOL     : integer := 8;
			FIFO_DEPTH          : integer := 16;
			CHANNEL_WIDTH       : integer := 0;
			ERROR_WIDTH         : integer := 0;
			USE_PACKETS         : integer := 0;
			USE_FILL_LEVEL      : integer := 0;
			EMPTY_LATENCY       : integer := 3;
			USE_MEMORY_BLOCKS   : integer := 1;
			USE_STORE_FORWARD   : integer := 0;
			USE_ALMOST_FULL_IF  : integer := 0;
			USE_ALMOST_EMPTY_IF : integer := 0;
			EMPTY_WIDTH         : integer := 1;
			SYNC_RESET          : integer := 0
		);
		port (
			clk               : in  std_logic                      := 'X';             -- clk
			reset             : in  std_logic                      := 'X';             -- reset
			in_data           : in  std_logic_vector(147 downto 0) := (others => 'X'); -- data
			in_valid          : in  std_logic                      := 'X';             -- valid
			in_ready          : out std_logic;                                         -- ready
			in_startofpacket  : in  std_logic                      := 'X';             -- startofpacket
			in_endofpacket    : in  std_logic                      := 'X';             -- endofpacket
			out_data          : out std_logic_vector(147 downto 0);                    -- data
			out_valid         : out std_logic;                                         -- valid
			out_ready         : in  std_logic                      := 'X';             -- ready
			out_startofpacket : out std_logic;                                         -- startofpacket
			out_endofpacket   : out std_logic;                                         -- endofpacket
			csr_address       : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- address
			csr_read          : in  std_logic                      := 'X';             -- read
			csr_write         : in  std_logic                      := 'X';             -- write
			csr_readdata      : out std_logic_vector(31 downto 0);                     -- readdata
			csr_writedata     : in  std_logic_vector(31 downto 0)  := (others => 'X'); -- writedata
			almost_full_data  : out std_logic;                                         -- data
			almost_empty_data : out std_logic;                                         -- data
			in_empty          : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- empty
			out_empty         : out std_logic_vector(0 downto 0);                      -- empty
			in_error          : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- error
			out_error         : out std_logic_vector(0 downto 0);                      -- error
			in_channel        : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- channel
			out_channel       : out std_logic_vector(0 downto 0)                       -- channel
		);
	end component PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy_cmp;

	component PCIE_HIP_FDAS_altera_merlin_router_1921_p3tohby_cmp is
		port (
			sink_ready         : out std_logic;                                         -- ready
			sink_valid         : in  std_logic                      := 'X';             -- valid
			sink_data          : in  std_logic_vector(146 downto 0) := (others => 'X'); -- data
			sink_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink_endofpacket   : in  std_logic                      := 'X';             -- endofpacket
			clk                : in  std_logic                      := 'X';             -- clk
			reset              : in  std_logic                      := 'X';             -- reset
			src_ready          : in  std_logic                      := 'X';             -- ready
			src_valid          : out std_logic;                                         -- valid
			src_data           : out std_logic_vector(146 downto 0);                    -- data
			src_channel        : out std_logic_vector(0 downto 0);                      -- channel
			src_startofpacket  : out std_logic;                                         -- startofpacket
			src_endofpacket    : out std_logic                                          -- endofpacket
		);
	end component PCIE_HIP_FDAS_altera_merlin_router_1921_p3tohby_cmp;

	component PCIE_HIP_FDAS_altera_merlin_router_1921_uygknla_cmp is
		port (
			sink_ready         : out std_logic;                                         -- ready
			sink_valid         : in  std_logic                      := 'X';             -- valid
			sink_data          : in  std_logic_vector(146 downto 0) := (others => 'X'); -- data
			sink_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink_endofpacket   : in  std_logic                      := 'X';             -- endofpacket
			clk                : in  std_logic                      := 'X';             -- clk
			reset              : in  std_logic                      := 'X';             -- reset
			src_ready          : in  std_logic                      := 'X';             -- ready
			src_valid          : out std_logic;                                         -- valid
			src_data           : out std_logic_vector(146 downto 0);                    -- data
			src_channel        : out std_logic_vector(0 downto 0);                      -- channel
			src_startofpacket  : out std_logic;                                         -- startofpacket
			src_endofpacket    : out std_logic                                          -- endofpacket
		);
	end component PCIE_HIP_FDAS_altera_merlin_router_1921_uygknla_cmp;

	component PCIE_HIP_FDAS_altera_merlin_burst_adapter_1922_yda6ubq_cmp is
		generic (
			PKT_ADDR_H                : integer := 79;
			PKT_ADDR_L                : integer := 48;
			PKT_BEGIN_BURST           : integer := 81;
			PKT_BYTE_CNT_H            : integer := 5;
			PKT_BYTE_CNT_L            : integer := 0;
			PKT_BYTEEN_H              : integer := 83;
			PKT_BYTEEN_L              : integer := 80;
			PKT_BURST_SIZE_H          : integer := 86;
			PKT_BURST_SIZE_L          : integer := 84;
			PKT_BURST_TYPE_H          : integer := 88;
			PKT_BURST_TYPE_L          : integer := 87;
			PKT_BURSTWRAP_H           : integer := 11;
			PKT_BURSTWRAP_L           : integer := 6;
			PKT_TRANS_COMPRESSED_READ : integer := 14;
			PKT_TRANS_WRITE           : integer := 13;
			PKT_TRANS_READ            : integer := 12;
			OUT_NARROW_SIZE           : integer := 0;
			IN_NARROW_SIZE            : integer := 0;
			OUT_FIXED                 : integer := 0;
			OUT_COMPLETE_WRAP         : integer := 0;
			ST_DATA_W                 : integer := 89;
			ST_CHANNEL_W              : integer := 8;
			OUT_BYTE_CNT_H            : integer := 5;
			OUT_BURSTWRAP_H           : integer := 11;
			COMPRESSED_READ_SUPPORT   : integer := 1;
			BYTEENABLE_SYNTHESIS      : integer := 0;
			PIPE_INPUTS               : integer := 0;
			NO_WRAP_SUPPORT           : integer := 0;
			INCOMPLETE_WRAP_SUPPORT   : integer := 1;
			BURSTWRAP_CONST_MASK      : integer := 0;
			BURSTWRAP_CONST_VALUE     : integer := 2147483647;
			ADAPTER_VERSION           : string  := "13.1";
			SYNC_RESET                : integer := 0
		);
		port (
			clk                   : in  std_logic                      := 'X';             -- clk
			reset                 : in  std_logic                      := 'X';             -- reset
			sink0_valid           : in  std_logic                      := 'X';             -- valid
			sink0_data            : in  std_logic_vector(146 downto 0) := (others => 'X'); -- data
			sink0_channel         : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- channel
			sink0_startofpacket   : in  std_logic                      := 'X';             -- startofpacket
			sink0_endofpacket     : in  std_logic                      := 'X';             -- endofpacket
			sink0_ready           : out std_logic;                                         -- ready
			source0_valid         : out std_logic;                                         -- valid
			source0_data          : out std_logic_vector(146 downto 0);                    -- data
			source0_channel       : out std_logic_vector(0 downto 0);                      -- channel
			source0_startofpacket : out std_logic;                                         -- startofpacket
			source0_endofpacket   : out std_logic;                                         -- endofpacket
			source0_ready         : in  std_logic                      := 'X'              -- ready
		);
	end component PCIE_HIP_FDAS_altera_merlin_burst_adapter_1922_yda6ubq_cmp;

	component PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_stkzihq_cmp is
		port (
			clk                : in  std_logic                      := 'X';             -- clk
			reset              : in  std_logic                      := 'X';             -- reset
			sink_ready         : out std_logic;                                         -- ready
			sink_channel       : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- channel
			sink_data          : in  std_logic_vector(146 downto 0) := (others => 'X'); -- data
			sink_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink_endofpacket   : in  std_logic                      := 'X';             -- endofpacket
			sink_valid         : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- valid
			src0_ready         : in  std_logic                      := 'X';             -- ready
			src0_valid         : out std_logic;                                         -- valid
			src0_data          : out std_logic_vector(146 downto 0);                    -- data
			src0_channel       : out std_logic_vector(0 downto 0);                      -- channel
			src0_startofpacket : out std_logic;                                         -- startofpacket
			src0_endofpacket   : out std_logic                                          -- endofpacket
		);
	end component PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_stkzihq_cmp;

	component PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_zqlsx3q_cmp is
		port (
			clk                 : in  std_logic                      := 'X';             -- clk
			reset               : in  std_logic                      := 'X';             -- reset
			src_ready           : in  std_logic                      := 'X';             -- ready
			src_valid           : out std_logic;                                         -- valid
			src_data            : out std_logic_vector(146 downto 0);                    -- data
			src_channel         : out std_logic_vector(0 downto 0);                      -- channel
			src_startofpacket   : out std_logic;                                         -- startofpacket
			src_endofpacket     : out std_logic;                                         -- endofpacket
			sink0_ready         : out std_logic;                                         -- ready
			sink0_valid         : in  std_logic                      := 'X';             -- valid
			sink0_channel       : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- channel
			sink0_data          : in  std_logic_vector(146 downto 0) := (others => 'X'); -- data
			sink0_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink0_endofpacket   : in  std_logic                      := 'X'              -- endofpacket
		);
	end component PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_zqlsx3q_cmp;

	component PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_z42dfda_cmp is
		port (
			clk                 : in  std_logic                      := 'X';             -- clk
			reset               : in  std_logic                      := 'X';             -- reset
			src_ready           : in  std_logic                      := 'X';             -- ready
			src_valid           : out std_logic;                                         -- valid
			src_data            : out std_logic_vector(146 downto 0);                    -- data
			src_channel         : out std_logic_vector(0 downto 0);                      -- channel
			src_startofpacket   : out std_logic;                                         -- startofpacket
			src_endofpacket     : out std_logic;                                         -- endofpacket
			sink0_ready         : out std_logic;                                         -- ready
			sink0_valid         : in  std_logic                      := 'X';             -- valid
			sink0_channel       : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- channel
			sink0_data          : in  std_logic_vector(146 downto 0) := (others => 'X'); -- data
			sink0_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink0_endofpacket   : in  std_logic                      := 'X'              -- endofpacket
		);
	end component PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_z42dfda_cmp;

	signal intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_debugaccess        : std_logic;                      -- intel_pcie_ptile_mcdma_0_rx_pio_master_translator:uav_debugaccess -> intel_pcie_ptile_mcdma_0_rx_pio_master_agent:av_debugaccess
	signal intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_address            : std_logic_vector(27 downto 0);  -- intel_pcie_ptile_mcdma_0_rx_pio_master_translator:uav_address -> intel_pcie_ptile_mcdma_0_rx_pio_master_agent:av_address
	signal intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_read               : std_logic;                      -- intel_pcie_ptile_mcdma_0_rx_pio_master_translator:uav_read -> intel_pcie_ptile_mcdma_0_rx_pio_master_agent:av_read
	signal intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_byteenable         : std_logic_vector(7 downto 0);   -- intel_pcie_ptile_mcdma_0_rx_pio_master_translator:uav_byteenable -> intel_pcie_ptile_mcdma_0_rx_pio_master_agent:av_byteenable
	signal intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_readdatavalid      : std_logic;                      -- intel_pcie_ptile_mcdma_0_rx_pio_master_agent:av_readdatavalid -> intel_pcie_ptile_mcdma_0_rx_pio_master_translator:uav_readdatavalid
	signal intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_waitrequest        : std_logic;                      -- intel_pcie_ptile_mcdma_0_rx_pio_master_agent:av_waitrequest -> intel_pcie_ptile_mcdma_0_rx_pio_master_translator:uav_waitrequest
	signal intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_readdata           : std_logic_vector(63 downto 0);  -- intel_pcie_ptile_mcdma_0_rx_pio_master_agent:av_readdata -> intel_pcie_ptile_mcdma_0_rx_pio_master_translator:uav_readdata
	signal intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_response           : std_logic_vector(1 downto 0);   -- intel_pcie_ptile_mcdma_0_rx_pio_master_agent:av_response -> intel_pcie_ptile_mcdma_0_rx_pio_master_translator:uav_response
	signal intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_lock               : std_logic;                      -- intel_pcie_ptile_mcdma_0_rx_pio_master_translator:uav_lock -> intel_pcie_ptile_mcdma_0_rx_pio_master_agent:av_lock
	signal intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_write              : std_logic;                      -- intel_pcie_ptile_mcdma_0_rx_pio_master_translator:uav_write -> intel_pcie_ptile_mcdma_0_rx_pio_master_agent:av_write
	signal intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_writedata          : std_logic_vector(63 downto 0);  -- intel_pcie_ptile_mcdma_0_rx_pio_master_translator:uav_writedata -> intel_pcie_ptile_mcdma_0_rx_pio_master_agent:av_writedata
	signal intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_writeresponsevalid : std_logic;                      -- intel_pcie_ptile_mcdma_0_rx_pio_master_agent:av_writeresponsevalid -> intel_pcie_ptile_mcdma_0_rx_pio_master_translator:uav_writeresponsevalid
	signal intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_burstcount         : std_logic_vector(6 downto 0);   -- intel_pcie_ptile_mcdma_0_rx_pio_master_translator:uav_burstcount -> intel_pcie_ptile_mcdma_0_rx_pio_master_agent:av_burstcount
	signal rsp_mux_src_valid                                                                              : std_logic;                      -- rsp_mux:src_valid -> intel_pcie_ptile_mcdma_0_rx_pio_master_agent:rp_valid
	signal rsp_mux_src_data                                                                               : std_logic_vector(146 downto 0); -- rsp_mux:src_data -> intel_pcie_ptile_mcdma_0_rx_pio_master_agent:rp_data
	signal rsp_mux_src_ready                                                                              : std_logic;                      -- intel_pcie_ptile_mcdma_0_rx_pio_master_agent:rp_ready -> rsp_mux:src_ready
	signal rsp_mux_src_channel                                                                            : std_logic_vector(0 downto 0);   -- rsp_mux:src_channel -> intel_pcie_ptile_mcdma_0_rx_pio_master_agent:rp_channel
	signal rsp_mux_src_startofpacket                                                                      : std_logic;                      -- rsp_mux:src_startofpacket -> intel_pcie_ptile_mcdma_0_rx_pio_master_agent:rp_startofpacket
	signal rsp_mux_src_endofpacket                                                                        : std_logic;                      -- rsp_mux:src_endofpacket -> intel_pcie_ptile_mcdma_0_rx_pio_master_agent:rp_endofpacket
	signal rxm_bar2_0_s0_agent_m0_debugaccess                                                             : std_logic;                      -- rxm_bar2_0_s0_agent:m0_debugaccess -> rxm_bar2_0_s0_translator:uav_debugaccess
	signal rxm_bar2_0_s0_agent_m0_address                                                                 : std_logic_vector(27 downto 0);  -- rxm_bar2_0_s0_agent:m0_address -> rxm_bar2_0_s0_translator:uav_address
	signal rxm_bar2_0_s0_agent_m0_byteenable                                                              : std_logic_vector(7 downto 0);   -- rxm_bar2_0_s0_agent:m0_byteenable -> rxm_bar2_0_s0_translator:uav_byteenable
	signal rxm_bar2_0_s0_agent_m0_read                                                                    : std_logic;                      -- rxm_bar2_0_s0_agent:m0_read -> rxm_bar2_0_s0_translator:uav_read
	signal rxm_bar2_0_s0_agent_m0_readdatavalid                                                           : std_logic;                      -- rxm_bar2_0_s0_translator:uav_readdatavalid -> rxm_bar2_0_s0_agent:m0_readdatavalid
	signal rxm_bar2_0_s0_agent_m0_readdata                                                                : std_logic_vector(63 downto 0);  -- rxm_bar2_0_s0_translator:uav_readdata -> rxm_bar2_0_s0_agent:m0_readdata
	signal rxm_bar2_0_s0_agent_m0_waitrequest                                                             : std_logic;                      -- rxm_bar2_0_s0_translator:uav_waitrequest -> rxm_bar2_0_s0_agent:m0_waitrequest
	signal rxm_bar2_0_s0_agent_m0_response                                                                : std_logic_vector(1 downto 0);   -- rxm_bar2_0_s0_translator:uav_response -> rxm_bar2_0_s0_agent:m0_response
	signal rxm_bar2_0_s0_agent_m0_lock                                                                    : std_logic;                      -- rxm_bar2_0_s0_agent:m0_lock -> rxm_bar2_0_s0_translator:uav_lock
	signal rxm_bar2_0_s0_agent_m0_writedata                                                               : std_logic_vector(63 downto 0);  -- rxm_bar2_0_s0_agent:m0_writedata -> rxm_bar2_0_s0_translator:uav_writedata
	signal rxm_bar2_0_s0_agent_m0_write                                                                   : std_logic;                      -- rxm_bar2_0_s0_agent:m0_write -> rxm_bar2_0_s0_translator:uav_write
	signal rxm_bar2_0_s0_agent_m0_writeresponsevalid                                                      : std_logic;                      -- rxm_bar2_0_s0_translator:uav_writeresponsevalid -> rxm_bar2_0_s0_agent:m0_writeresponsevalid
	signal rxm_bar2_0_s0_agent_m0_burstcount                                                              : std_logic_vector(3 downto 0);   -- rxm_bar2_0_s0_agent:m0_burstcount -> rxm_bar2_0_s0_translator:uav_burstcount
	signal rxm_bar2_0_s0_agent_rf_source_valid                                                            : std_logic;                      -- rxm_bar2_0_s0_agent:rf_source_valid -> rxm_bar2_0_s0_agent_rsp_fifo:in_valid
	signal rxm_bar2_0_s0_agent_rf_source_data                                                             : std_logic_vector(147 downto 0); -- rxm_bar2_0_s0_agent:rf_source_data -> rxm_bar2_0_s0_agent_rsp_fifo:in_data
	signal rxm_bar2_0_s0_agent_rf_source_ready                                                            : std_logic;                      -- rxm_bar2_0_s0_agent_rsp_fifo:in_ready -> rxm_bar2_0_s0_agent:rf_source_ready
	signal rxm_bar2_0_s0_agent_rf_source_startofpacket                                                    : std_logic;                      -- rxm_bar2_0_s0_agent:rf_source_startofpacket -> rxm_bar2_0_s0_agent_rsp_fifo:in_startofpacket
	signal rxm_bar2_0_s0_agent_rf_source_endofpacket                                                      : std_logic;                      -- rxm_bar2_0_s0_agent:rf_source_endofpacket -> rxm_bar2_0_s0_agent_rsp_fifo:in_endofpacket
	signal rxm_bar2_0_s0_agent_rsp_fifo_out_valid                                                         : std_logic;                      -- rxm_bar2_0_s0_agent_rsp_fifo:out_valid -> rxm_bar2_0_s0_agent:rf_sink_valid
	signal rxm_bar2_0_s0_agent_rsp_fifo_out_data                                                          : std_logic_vector(147 downto 0); -- rxm_bar2_0_s0_agent_rsp_fifo:out_data -> rxm_bar2_0_s0_agent:rf_sink_data
	signal rxm_bar2_0_s0_agent_rsp_fifo_out_ready                                                         : std_logic;                      -- rxm_bar2_0_s0_agent:rf_sink_ready -> rxm_bar2_0_s0_agent_rsp_fifo:out_ready
	signal rxm_bar2_0_s0_agent_rsp_fifo_out_startofpacket                                                 : std_logic;                      -- rxm_bar2_0_s0_agent_rsp_fifo:out_startofpacket -> rxm_bar2_0_s0_agent:rf_sink_startofpacket
	signal rxm_bar2_0_s0_agent_rsp_fifo_out_endofpacket                                                   : std_logic;                      -- rxm_bar2_0_s0_agent_rsp_fifo:out_endofpacket -> rxm_bar2_0_s0_agent:rf_sink_endofpacket
	signal rxm_bar2_0_s0_agent_rdata_fifo_src_valid                                                       : std_logic;                      -- rxm_bar2_0_s0_agent:rdata_fifo_src_valid -> rxm_bar2_0_s0_agent:rdata_fifo_sink_valid
	signal rxm_bar2_0_s0_agent_rdata_fifo_src_data                                                        : std_logic_vector(65 downto 0);  -- rxm_bar2_0_s0_agent:rdata_fifo_src_data -> rxm_bar2_0_s0_agent:rdata_fifo_sink_data
	signal rxm_bar2_0_s0_agent_rdata_fifo_src_ready                                                       : std_logic;                      -- rxm_bar2_0_s0_agent:rdata_fifo_sink_ready -> rxm_bar2_0_s0_agent:rdata_fifo_src_ready
	signal intel_pcie_ptile_mcdma_0_rx_pio_master_agent_cp_valid                                          : std_logic;                      -- intel_pcie_ptile_mcdma_0_rx_pio_master_agent:cp_valid -> router:sink_valid
	signal intel_pcie_ptile_mcdma_0_rx_pio_master_agent_cp_data                                           : std_logic_vector(146 downto 0); -- intel_pcie_ptile_mcdma_0_rx_pio_master_agent:cp_data -> router:sink_data
	signal intel_pcie_ptile_mcdma_0_rx_pio_master_agent_cp_ready                                          : std_logic;                      -- router:sink_ready -> intel_pcie_ptile_mcdma_0_rx_pio_master_agent:cp_ready
	signal intel_pcie_ptile_mcdma_0_rx_pio_master_agent_cp_startofpacket                                  : std_logic;                      -- intel_pcie_ptile_mcdma_0_rx_pio_master_agent:cp_startofpacket -> router:sink_startofpacket
	signal intel_pcie_ptile_mcdma_0_rx_pio_master_agent_cp_endofpacket                                    : std_logic;                      -- intel_pcie_ptile_mcdma_0_rx_pio_master_agent:cp_endofpacket -> router:sink_endofpacket
	signal router_src_valid                                                                               : std_logic;                      -- router:src_valid -> cmd_demux:sink_valid
	signal router_src_data                                                                                : std_logic_vector(146 downto 0); -- router:src_data -> cmd_demux:sink_data
	signal router_src_ready                                                                               : std_logic;                      -- cmd_demux:sink_ready -> router:src_ready
	signal router_src_channel                                                                             : std_logic_vector(0 downto 0);   -- router:src_channel -> cmd_demux:sink_channel
	signal router_src_startofpacket                                                                       : std_logic;                      -- router:src_startofpacket -> cmd_demux:sink_startofpacket
	signal router_src_endofpacket                                                                         : std_logic;                      -- router:src_endofpacket -> cmd_demux:sink_endofpacket
	signal rxm_bar2_0_s0_agent_rp_valid                                                                   : std_logic;                      -- rxm_bar2_0_s0_agent:rp_valid -> router_001:sink_valid
	signal rxm_bar2_0_s0_agent_rp_data                                                                    : std_logic_vector(146 downto 0); -- rxm_bar2_0_s0_agent:rp_data -> router_001:sink_data
	signal rxm_bar2_0_s0_agent_rp_ready                                                                   : std_logic;                      -- router_001:sink_ready -> rxm_bar2_0_s0_agent:rp_ready
	signal rxm_bar2_0_s0_agent_rp_startofpacket                                                           : std_logic;                      -- rxm_bar2_0_s0_agent:rp_startofpacket -> router_001:sink_startofpacket
	signal rxm_bar2_0_s0_agent_rp_endofpacket                                                             : std_logic;                      -- rxm_bar2_0_s0_agent:rp_endofpacket -> router_001:sink_endofpacket
	signal router_001_src_valid                                                                           : std_logic;                      -- router_001:src_valid -> rsp_demux:sink_valid
	signal router_001_src_data                                                                            : std_logic_vector(146 downto 0); -- router_001:src_data -> rsp_demux:sink_data
	signal router_001_src_ready                                                                           : std_logic;                      -- rsp_demux:sink_ready -> router_001:src_ready
	signal router_001_src_channel                                                                         : std_logic_vector(0 downto 0);   -- router_001:src_channel -> rsp_demux:sink_channel
	signal router_001_src_startofpacket                                                                   : std_logic;                      -- router_001:src_startofpacket -> rsp_demux:sink_startofpacket
	signal router_001_src_endofpacket                                                                     : std_logic;                      -- router_001:src_endofpacket -> rsp_demux:sink_endofpacket
	signal cmd_mux_src_valid                                                                              : std_logic;                      -- cmd_mux:src_valid -> rxm_bar2_0_s0_burst_adapter:sink0_valid
	signal cmd_mux_src_data                                                                               : std_logic_vector(146 downto 0); -- cmd_mux:src_data -> rxm_bar2_0_s0_burst_adapter:sink0_data
	signal cmd_mux_src_ready                                                                              : std_logic;                      -- rxm_bar2_0_s0_burst_adapter:sink0_ready -> cmd_mux:src_ready
	signal cmd_mux_src_channel                                                                            : std_logic_vector(0 downto 0);   -- cmd_mux:src_channel -> rxm_bar2_0_s0_burst_adapter:sink0_channel
	signal cmd_mux_src_startofpacket                                                                      : std_logic;                      -- cmd_mux:src_startofpacket -> rxm_bar2_0_s0_burst_adapter:sink0_startofpacket
	signal cmd_mux_src_endofpacket                                                                        : std_logic;                      -- cmd_mux:src_endofpacket -> rxm_bar2_0_s0_burst_adapter:sink0_endofpacket
	signal rxm_bar2_0_s0_burst_adapter_source0_valid                                                      : std_logic;                      -- rxm_bar2_0_s0_burst_adapter:source0_valid -> rxm_bar2_0_s0_agent:cp_valid
	signal rxm_bar2_0_s0_burst_adapter_source0_data                                                       : std_logic_vector(146 downto 0); -- rxm_bar2_0_s0_burst_adapter:source0_data -> rxm_bar2_0_s0_agent:cp_data
	signal rxm_bar2_0_s0_burst_adapter_source0_ready                                                      : std_logic;                      -- rxm_bar2_0_s0_agent:cp_ready -> rxm_bar2_0_s0_burst_adapter:source0_ready
	signal rxm_bar2_0_s0_burst_adapter_source0_channel                                                    : std_logic_vector(0 downto 0);   -- rxm_bar2_0_s0_burst_adapter:source0_channel -> rxm_bar2_0_s0_agent:cp_channel
	signal rxm_bar2_0_s0_burst_adapter_source0_startofpacket                                              : std_logic;                      -- rxm_bar2_0_s0_burst_adapter:source0_startofpacket -> rxm_bar2_0_s0_agent:cp_startofpacket
	signal rxm_bar2_0_s0_burst_adapter_source0_endofpacket                                                : std_logic;                      -- rxm_bar2_0_s0_burst_adapter:source0_endofpacket -> rxm_bar2_0_s0_agent:cp_endofpacket
	signal cmd_demux_src0_valid                                                                           : std_logic;                      -- cmd_demux:src0_valid -> cmd_mux:sink0_valid
	signal cmd_demux_src0_data                                                                            : std_logic_vector(146 downto 0); -- cmd_demux:src0_data -> cmd_mux:sink0_data
	signal cmd_demux_src0_ready                                                                           : std_logic;                      -- cmd_mux:sink0_ready -> cmd_demux:src0_ready
	signal cmd_demux_src0_channel                                                                         : std_logic_vector(0 downto 0);   -- cmd_demux:src0_channel -> cmd_mux:sink0_channel
	signal cmd_demux_src0_startofpacket                                                                   : std_logic;                      -- cmd_demux:src0_startofpacket -> cmd_mux:sink0_startofpacket
	signal cmd_demux_src0_endofpacket                                                                     : std_logic;                      -- cmd_demux:src0_endofpacket -> cmd_mux:sink0_endofpacket
	signal rsp_demux_src0_valid                                                                           : std_logic;                      -- rsp_demux:src0_valid -> rsp_mux:sink0_valid
	signal rsp_demux_src0_data                                                                            : std_logic_vector(146 downto 0); -- rsp_demux:src0_data -> rsp_mux:sink0_data
	signal rsp_demux_src0_ready                                                                           : std_logic;                      -- rsp_mux:sink0_ready -> rsp_demux:src0_ready
	signal rsp_demux_src0_channel                                                                         : std_logic_vector(0 downto 0);   -- rsp_demux:src0_channel -> rsp_mux:sink0_channel
	signal rsp_demux_src0_startofpacket                                                                   : std_logic;                      -- rsp_demux:src0_startofpacket -> rsp_mux:sink0_startofpacket
	signal rsp_demux_src0_endofpacket                                                                     : std_logic;                      -- rsp_demux:src0_endofpacket -> rsp_mux:sink0_endofpacket

	for intel_pcie_ptile_mcdma_0_rx_pio_master_translator : PCIE_HIP_FDAS_altera_merlin_master_translator_191_g7h47bq_cmp
		use entity altera_merlin_master_translator_191.PCIE_HIP_FDAS_altera_merlin_master_translator_191_g7h47bq;
	for rxm_bar2_0_s0_translator : PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki_cmp
		use entity altera_merlin_slave_translator_191.PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki;
	for intel_pcie_ptile_mcdma_0_rx_pio_master_agent : PCIE_HIP_FDAS_altera_merlin_master_agent_191_mpbm6tq_cmp
		use entity altera_merlin_master_agent_191.PCIE_HIP_FDAS_altera_merlin_master_agent_191_mpbm6tq;
	for rxm_bar2_0_s0_agent : PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri_cmp
		use entity altera_merlin_slave_agent_191.PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri;
	for rxm_bar2_0_s0_agent_rsp_fifo : PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy_cmp
		use entity altera_avalon_sc_fifo_1931.PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy;
	for router : PCIE_HIP_FDAS_altera_merlin_router_1921_p3tohby_cmp
		use entity altera_merlin_router_1921.PCIE_HIP_FDAS_altera_merlin_router_1921_p3tohby;
	for router_001 : PCIE_HIP_FDAS_altera_merlin_router_1921_uygknla_cmp
		use entity altera_merlin_router_1921.PCIE_HIP_FDAS_altera_merlin_router_1921_uygknla;
	for rxm_bar2_0_s0_burst_adapter : PCIE_HIP_FDAS_altera_merlin_burst_adapter_1922_yda6ubq_cmp
		use entity altera_merlin_burst_adapter_1922.PCIE_HIP_FDAS_altera_merlin_burst_adapter_1922_yda6ubq;
	for cmd_demux : PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_stkzihq_cmp
		use entity altera_merlin_demultiplexer_1921.PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_stkzihq;
	for rsp_demux : PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_stkzihq_cmp
		use entity altera_merlin_demultiplexer_1921.PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_stkzihq;
	for cmd_mux : PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_zqlsx3q_cmp
		use entity altera_merlin_multiplexer_1921.PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_zqlsx3q;
	for rsp_mux : PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_z42dfda_cmp
		use entity altera_merlin_multiplexer_1921.PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_z42dfda;
begin

	intel_pcie_ptile_mcdma_0_rx_pio_master_translator : component PCIE_HIP_FDAS_altera_merlin_master_translator_191_g7h47bq_cmp
		generic map (
			AV_ADDRESS_W                => 28,
			AV_DATA_W                   => 64,
			AV_BURSTCOUNT_W             => 4,
			AV_BYTEENABLE_W             => 8,
			UAV_ADDRESS_W               => 28,
			UAV_BURSTCOUNT_W            => 7,
			USE_READ                    => 1,
			USE_WRITE                   => 1,
			USE_BEGINBURSTTRANSFER      => 0,
			USE_BEGINTRANSFER           => 0,
			USE_CHIPSELECT              => 0,
			USE_BURSTCOUNT              => 1,
			USE_READDATAVALID           => 1,
			USE_WAITREQUEST             => 1,
			USE_READRESPONSE            => 1,
			USE_WRITERESPONSE           => 1,
			AV_SYMBOLS_PER_WORD         => 8,
			AV_ADDRESS_SYMBOLS          => 1,
			AV_BURSTCOUNT_SYMBOLS       => 0,
			AV_CONSTANT_BURST_BEHAVIOR  => 1,
			UAV_CONSTANT_BURST_BEHAVIOR => 0,
			AV_LINEWRAPBURSTS           => 0,
			AV_REGISTERINCOMINGSIGNALS  => 0,
			SYNC_RESET                  => 1,
			WAITREQUEST_ALLOWANCE       => 0
		)
		port map (
			clk                    => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                           --                       clk.clk
			reset                  => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_reset_reset_bridge_in_reset_reset,            --                     reset.reset
			uav_address            => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_address,            -- avalon_universal_master_0.address
			uav_burstcount         => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_burstcount,         --                          .burstcount
			uav_read               => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_read,               --                          .read
			uav_write              => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_write,              --                          .write
			uav_waitrequest        => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_waitrequest,        --                          .waitrequest
			uav_readdatavalid      => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_readdatavalid,      --                          .readdatavalid
			uav_byteenable         => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_byteenable,         --                          .byteenable
			uav_readdata           => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_readdata,           --                          .readdata
			uav_writedata          => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_writedata,          --                          .writedata
			uav_lock               => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_lock,               --                          .lock
			uav_debugaccess        => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_debugaccess,        --                          .debugaccess
			uav_response           => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_response,           --                          .response
			uav_writeresponsevalid => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_writeresponsevalid, --                          .writeresponsevalid
			av_address             => intel_pcie_ptile_mcdma_0_rx_pio_master_address,                                                 --      avalon_anti_master_0.address
			av_waitrequest         => intel_pcie_ptile_mcdma_0_rx_pio_master_waitrequest,                                             --                          .waitrequest
			av_burstcount          => intel_pcie_ptile_mcdma_0_rx_pio_master_burstcount,                                              --                          .burstcount
			av_byteenable          => intel_pcie_ptile_mcdma_0_rx_pio_master_byteenable,                                              --                          .byteenable
			av_read                => intel_pcie_ptile_mcdma_0_rx_pio_master_read,                                                    --                          .read
			av_readdata            => intel_pcie_ptile_mcdma_0_rx_pio_master_readdata,                                                --                          .readdata
			av_readdatavalid       => intel_pcie_ptile_mcdma_0_rx_pio_master_readdatavalid,                                           --                          .readdatavalid
			av_write               => intel_pcie_ptile_mcdma_0_rx_pio_master_write,                                                   --                          .write
			av_writedata           => intel_pcie_ptile_mcdma_0_rx_pio_master_writedata,                                               --                          .writedata
			av_response            => intel_pcie_ptile_mcdma_0_rx_pio_master_response,                                                --                          .response
			av_writeresponsevalid  => intel_pcie_ptile_mcdma_0_rx_pio_master_writeresponsevalid,                                      --                          .writeresponsevalid
			av_beginbursttransfer  => '0',                                                                                            --               (terminated)
			av_begintransfer       => '0',                                                                                            --               (terminated)
			av_chipselect          => '0',                                                                                            --               (terminated)
			av_lock                => '0',                                                                                            --               (terminated)
			av_debugaccess         => '0',                                                                                            --               (terminated)
			uav_clken              => open,                                                                                           --               (terminated)
			av_clken               => '1'                                                                                             --               (terminated)
		);

	rxm_bar2_0_s0_translator : component PCIE_HIP_FDAS_altera_merlin_slave_translator_191_x56fcki_cmp
		generic map (
			AV_ADDRESS_W                   => 22,
			AV_DATA_W                      => 64,
			UAV_DATA_W                     => 64,
			AV_BURSTCOUNT_W                => 1,
			AV_BYTEENABLE_W                => 8,
			UAV_BYTEENABLE_W               => 8,
			UAV_ADDRESS_W                  => 28,
			UAV_BURSTCOUNT_W               => 4,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 1,
			USE_WAITREQUEST                => 1,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 1,
			USE_WRITERESPONSE              => 1,
			AV_SYMBOLS_PER_WORD            => 8,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 1,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0,
			WAITREQUEST_ALLOWANCE          => 0,
			SYNC_RESET                     => 1
		)
		port map (
			clk                    => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                --                      clk.clk
			reset                  => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_reset_reset_bridge_in_reset_reset, --                    reset.reset
			uav_address            => rxm_bar2_0_s0_agent_m0_address,                                                      -- avalon_universal_slave_0.address
			uav_burstcount         => rxm_bar2_0_s0_agent_m0_burstcount,                                                   --                         .burstcount
			uav_read               => rxm_bar2_0_s0_agent_m0_read,                                                         --                         .read
			uav_write              => rxm_bar2_0_s0_agent_m0_write,                                                        --                         .write
			uav_waitrequest        => rxm_bar2_0_s0_agent_m0_waitrequest,                                                  --                         .waitrequest
			uav_readdatavalid      => rxm_bar2_0_s0_agent_m0_readdatavalid,                                                --                         .readdatavalid
			uav_byteenable         => rxm_bar2_0_s0_agent_m0_byteenable,                                                   --                         .byteenable
			uav_readdata           => rxm_bar2_0_s0_agent_m0_readdata,                                                     --                         .readdata
			uav_writedata          => rxm_bar2_0_s0_agent_m0_writedata,                                                    --                         .writedata
			uav_lock               => rxm_bar2_0_s0_agent_m0_lock,                                                         --                         .lock
			uav_debugaccess        => rxm_bar2_0_s0_agent_m0_debugaccess,                                                  --                         .debugaccess
			uav_response           => rxm_bar2_0_s0_agent_m0_response,                                                     --                         .response
			uav_writeresponsevalid => rxm_bar2_0_s0_agent_m0_writeresponsevalid,                                           --                         .writeresponsevalid
			av_address             => rxm_bar2_0_s0_address,                                                               --      avalon_anti_slave_0.address
			av_write               => rxm_bar2_0_s0_write,                                                                 --                         .write
			av_read                => rxm_bar2_0_s0_read,                                                                  --                         .read
			av_readdata            => rxm_bar2_0_s0_readdata,                                                              --                         .readdata
			av_writedata           => rxm_bar2_0_s0_writedata,                                                             --                         .writedata
			av_byteenable          => rxm_bar2_0_s0_byteenable,                                                            --                         .byteenable
			av_readdatavalid       => rxm_bar2_0_s0_readdatavalid,                                                         --                         .readdatavalid
			av_waitrequest         => rxm_bar2_0_s0_waitrequest,                                                           --                         .waitrequest
			av_response            => rxm_bar2_0_s0_response,                                                              --                         .response
			av_writeresponsevalid  => rxm_bar2_0_s0_writeresponsevalid,                                                    --                         .writeresponsevalid
			av_begintransfer       => open,                                                                                --              (terminated)
			av_beginbursttransfer  => open,                                                                                --              (terminated)
			av_burstcount          => open,                                                                                --              (terminated)
			av_writebyteenable     => open,                                                                                --              (terminated)
			av_lock                => open,                                                                                --              (terminated)
			av_chipselect          => open,                                                                                --              (terminated)
			av_clken               => open,                                                                                --              (terminated)
			uav_clken              => '0',                                                                                 --              (terminated)
			av_debugaccess         => open,                                                                                --              (terminated)
			av_outputenable        => open                                                                                 --              (terminated)
		);

	intel_pcie_ptile_mcdma_0_rx_pio_master_agent : component PCIE_HIP_FDAS_altera_merlin_master_agent_191_mpbm6tq_cmp
		generic map (
			PKT_WUNIQUE               => 146,
			PKT_DOMAIN_H              => 145,
			PKT_DOMAIN_L              => 144,
			PKT_SNOOP_H               => 143,
			PKT_SNOOP_L               => 140,
			PKT_BARRIER_H             => 139,
			PKT_BARRIER_L             => 138,
			PKT_ORI_BURST_SIZE_H      => 137,
			PKT_ORI_BURST_SIZE_L      => 135,
			PKT_RESPONSE_STATUS_H     => 134,
			PKT_RESPONSE_STATUS_L     => 133,
			PKT_QOS_H                 => 122,
			PKT_QOS_L                 => 122,
			PKT_DATA_SIDEBAND_H       => 120,
			PKT_DATA_SIDEBAND_L       => 120,
			PKT_ADDR_SIDEBAND_H       => 119,
			PKT_ADDR_SIDEBAND_L       => 119,
			PKT_BURST_TYPE_H          => 118,
			PKT_BURST_TYPE_L          => 117,
			PKT_CACHE_H               => 132,
			PKT_CACHE_L               => 129,
			PKT_THREAD_ID_H           => 125,
			PKT_THREAD_ID_L           => 125,
			PKT_BURST_SIZE_H          => 116,
			PKT_BURST_SIZE_L          => 114,
			PKT_TRANS_EXCLUSIVE       => 105,
			PKT_TRANS_LOCK            => 104,
			PKT_BEGIN_BURST           => 121,
			PKT_PROTECTION_H          => 128,
			PKT_PROTECTION_L          => 126,
			PKT_BURSTWRAP_H           => 113,
			PKT_BURSTWRAP_L           => 113,
			PKT_BYTE_CNT_H            => 112,
			PKT_BYTE_CNT_L            => 106,
			PKT_ADDR_H                => 99,
			PKT_ADDR_L                => 72,
			PKT_TRANS_COMPRESSED_READ => 100,
			PKT_TRANS_POSTED          => 101,
			PKT_TRANS_WRITE           => 102,
			PKT_TRANS_READ            => 103,
			PKT_DATA_H                => 63,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 71,
			PKT_BYTEEN_L              => 64,
			PKT_SRC_ID_H              => 123,
			PKT_SRC_ID_L              => 123,
			PKT_DEST_ID_H             => 124,
			PKT_DEST_ID_L             => 124,
			ST_DATA_W                 => 147,
			ST_CHANNEL_W              => 1,
			AV_BURSTCOUNT_W           => 7,
			SUPPRESS_0_BYTEEN_RSP     => 0,
			ID                        => 0,
			BURSTWRAP_VALUE           => 1,
			CACHE_VALUE               => 0,
			SECURE_ACCESS_BIT         => 1,
			USE_READRESPONSE          => 1,
			USE_WRITERESPONSE         => 1,
			DOMAIN_VALUE              => 3,
			BARRIER_VALUE             => 0,
			SNOOP_VALUE               => 0,
			WUNIQUE_VALUE             => 0,
			SYNC_RESET                => 1
		)
		port map (
			clk                   => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                           --       clk.clk
			reset                 => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_reset_reset_bridge_in_reset_reset,            -- clk_reset.reset
			av_address            => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_address,            --        av.address
			av_write              => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_write,              --          .write
			av_read               => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_read,               --          .read
			av_writedata          => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_writedata,          --          .writedata
			av_readdata           => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_readdata,           --          .readdata
			av_waitrequest        => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_waitrequest,        --          .waitrequest
			av_readdatavalid      => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_readdatavalid,      --          .readdatavalid
			av_byteenable         => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_byteenable,         --          .byteenable
			av_burstcount         => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_burstcount,         --          .burstcount
			av_debugaccess        => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_debugaccess,        --          .debugaccess
			av_lock               => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_lock,               --          .lock
			av_response           => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_response,           --          .response
			av_writeresponsevalid => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_avalon_universal_master_0_writeresponsevalid, --          .writeresponsevalid
			cp_valid              => intel_pcie_ptile_mcdma_0_rx_pio_master_agent_cp_valid,                                          --        cp.valid
			cp_data               => intel_pcie_ptile_mcdma_0_rx_pio_master_agent_cp_data,                                           --          .data
			cp_startofpacket      => intel_pcie_ptile_mcdma_0_rx_pio_master_agent_cp_startofpacket,                                  --          .startofpacket
			cp_endofpacket        => intel_pcie_ptile_mcdma_0_rx_pio_master_agent_cp_endofpacket,                                    --          .endofpacket
			cp_ready              => intel_pcie_ptile_mcdma_0_rx_pio_master_agent_cp_ready,                                          --          .ready
			rp_valid              => rsp_mux_src_valid,                                                                              --        rp.valid
			rp_data               => rsp_mux_src_data,                                                                               --          .data
			rp_channel            => rsp_mux_src_channel,                                                                            --          .channel
			rp_startofpacket      => rsp_mux_src_startofpacket,                                                                      --          .startofpacket
			rp_endofpacket        => rsp_mux_src_endofpacket,                                                                        --          .endofpacket
			rp_ready              => rsp_mux_src_ready                                                                               --          .ready
		);

	rxm_bar2_0_s0_agent : component PCIE_HIP_FDAS_altera_merlin_slave_agent_191_ncfkfri_cmp
		generic map (
			PKT_ORI_BURST_SIZE_H      => 137,
			PKT_ORI_BURST_SIZE_L      => 135,
			PKT_RESPONSE_STATUS_H     => 134,
			PKT_RESPONSE_STATUS_L     => 133,
			PKT_BURST_SIZE_H          => 116,
			PKT_BURST_SIZE_L          => 114,
			PKT_TRANS_LOCK            => 104,
			PKT_BEGIN_BURST           => 121,
			PKT_PROTECTION_H          => 128,
			PKT_PROTECTION_L          => 126,
			PKT_BURSTWRAP_H           => 113,
			PKT_BURSTWRAP_L           => 113,
			PKT_BYTE_CNT_H            => 112,
			PKT_BYTE_CNT_L            => 106,
			PKT_ADDR_H                => 99,
			PKT_ADDR_L                => 72,
			PKT_TRANS_COMPRESSED_READ => 100,
			PKT_TRANS_POSTED          => 101,
			PKT_TRANS_WRITE           => 102,
			PKT_TRANS_READ            => 103,
			PKT_DATA_H                => 63,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 71,
			PKT_BYTEEN_L              => 64,
			PKT_SRC_ID_H              => 123,
			PKT_SRC_ID_L              => 123,
			PKT_DEST_ID_H             => 124,
			PKT_DEST_ID_L             => 124,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 1,
			ST_DATA_W                 => 147,
			AVS_BURSTCOUNT_W          => 4,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			USE_MEMORY_BLOCKS         => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 1,
			USE_WRITERESPONSE         => 1,
			ECC_ENABLE                => 0,
			SYNC_RESET                => 1
		)
		port map (
			clk                     => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                --             clk.clk
			reset                   => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_reset_reset_bridge_in_reset_reset, --       clk_reset.reset
			m0_address              => rxm_bar2_0_s0_agent_m0_address,                                                      --              m0.address
			m0_burstcount           => rxm_bar2_0_s0_agent_m0_burstcount,                                                   --                .burstcount
			m0_byteenable           => rxm_bar2_0_s0_agent_m0_byteenable,                                                   --                .byteenable
			m0_debugaccess          => rxm_bar2_0_s0_agent_m0_debugaccess,                                                  --                .debugaccess
			m0_lock                 => rxm_bar2_0_s0_agent_m0_lock,                                                         --                .lock
			m0_readdata             => rxm_bar2_0_s0_agent_m0_readdata,                                                     --                .readdata
			m0_readdatavalid        => rxm_bar2_0_s0_agent_m0_readdatavalid,                                                --                .readdatavalid
			m0_read                 => rxm_bar2_0_s0_agent_m0_read,                                                         --                .read
			m0_waitrequest          => rxm_bar2_0_s0_agent_m0_waitrequest,                                                  --                .waitrequest
			m0_writedata            => rxm_bar2_0_s0_agent_m0_writedata,                                                    --                .writedata
			m0_write                => rxm_bar2_0_s0_agent_m0_write,                                                        --                .write
			m0_response             => rxm_bar2_0_s0_agent_m0_response,                                                     --                .response
			m0_writeresponsevalid   => rxm_bar2_0_s0_agent_m0_writeresponsevalid,                                           --                .writeresponsevalid
			rp_endofpacket          => rxm_bar2_0_s0_agent_rp_endofpacket,                                                  --              rp.endofpacket
			rp_ready                => rxm_bar2_0_s0_agent_rp_ready,                                                        --                .ready
			rp_valid                => rxm_bar2_0_s0_agent_rp_valid,                                                        --                .valid
			rp_data                 => rxm_bar2_0_s0_agent_rp_data,                                                         --                .data
			rp_startofpacket        => rxm_bar2_0_s0_agent_rp_startofpacket,                                                --                .startofpacket
			cp_ready                => rxm_bar2_0_s0_burst_adapter_source0_ready,                                           --              cp.ready
			cp_valid                => rxm_bar2_0_s0_burst_adapter_source0_valid,                                           --                .valid
			cp_data                 => rxm_bar2_0_s0_burst_adapter_source0_data,                                            --                .data
			cp_startofpacket        => rxm_bar2_0_s0_burst_adapter_source0_startofpacket,                                   --                .startofpacket
			cp_endofpacket          => rxm_bar2_0_s0_burst_adapter_source0_endofpacket,                                     --                .endofpacket
			cp_channel              => rxm_bar2_0_s0_burst_adapter_source0_channel,                                         --                .channel
			rf_sink_ready           => rxm_bar2_0_s0_agent_rsp_fifo_out_ready,                                              --         rf_sink.ready
			rf_sink_valid           => rxm_bar2_0_s0_agent_rsp_fifo_out_valid,                                              --                .valid
			rf_sink_startofpacket   => rxm_bar2_0_s0_agent_rsp_fifo_out_startofpacket,                                      --                .startofpacket
			rf_sink_endofpacket     => rxm_bar2_0_s0_agent_rsp_fifo_out_endofpacket,                                        --                .endofpacket
			rf_sink_data            => rxm_bar2_0_s0_agent_rsp_fifo_out_data,                                               --                .data
			rf_source_ready         => rxm_bar2_0_s0_agent_rf_source_ready,                                                 --       rf_source.ready
			rf_source_valid         => rxm_bar2_0_s0_agent_rf_source_valid,                                                 --                .valid
			rf_source_startofpacket => rxm_bar2_0_s0_agent_rf_source_startofpacket,                                         --                .startofpacket
			rf_source_endofpacket   => rxm_bar2_0_s0_agent_rf_source_endofpacket,                                           --                .endofpacket
			rf_source_data          => rxm_bar2_0_s0_agent_rf_source_data,                                                  --                .data
			rdata_fifo_sink_ready   => rxm_bar2_0_s0_agent_rdata_fifo_src_ready,                                            -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => rxm_bar2_0_s0_agent_rdata_fifo_src_valid,                                            --                .valid
			rdata_fifo_sink_data    => rxm_bar2_0_s0_agent_rdata_fifo_src_data,                                             --                .data
			rdata_fifo_src_ready    => rxm_bar2_0_s0_agent_rdata_fifo_src_ready,                                            --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => rxm_bar2_0_s0_agent_rdata_fifo_src_valid,                                            --                .valid
			rdata_fifo_src_data     => rxm_bar2_0_s0_agent_rdata_fifo_src_data,                                             --                .data
			rdata_fifo_sink_error   => '0'                                                                                  --     (terminated)
		);

	rxm_bar2_0_s0_agent_rsp_fifo : component PCIE_HIP_FDAS_altera_avalon_sc_fifo_1931_vhmcgqy_cmp
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 148,
			FIFO_DEPTH          => 3,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0,
			EMPTY_WIDTH         => 1,
			SYNC_RESET          => 1
		)
		port map (
			clk               => intel_pcie_ptile_mcdma_0_app_clk_clk,           --       clk.clk
			reset             => rxm_bar2_0_reset_reset_bridge_in_reset_reset,   -- clk_reset.reset
			in_data           => rxm_bar2_0_s0_agent_rf_source_data,             --        in.data
			in_valid          => rxm_bar2_0_s0_agent_rf_source_valid,            --          .valid
			in_ready          => rxm_bar2_0_s0_agent_rf_source_ready,            --          .ready
			in_startofpacket  => rxm_bar2_0_s0_agent_rf_source_startofpacket,    --          .startofpacket
			in_endofpacket    => rxm_bar2_0_s0_agent_rf_source_endofpacket,      --          .endofpacket
			out_data          => rxm_bar2_0_s0_agent_rsp_fifo_out_data,          --       out.data
			out_valid         => rxm_bar2_0_s0_agent_rsp_fifo_out_valid,         --          .valid
			out_ready         => rxm_bar2_0_s0_agent_rsp_fifo_out_ready,         --          .ready
			out_startofpacket => rxm_bar2_0_s0_agent_rsp_fifo_out_startofpacket, --          .startofpacket
			out_endofpacket   => rxm_bar2_0_s0_agent_rsp_fifo_out_endofpacket,   --          .endofpacket
			csr_address       => "00",                                           -- (terminated)
			csr_read          => '0',                                            -- (terminated)
			csr_write         => '0',                                            -- (terminated)
			csr_readdata      => open,                                           -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",             -- (terminated)
			almost_full_data  => open,                                           -- (terminated)
			almost_empty_data => open,                                           -- (terminated)
			in_empty          => "0",                                            -- (terminated)
			out_empty         => open,                                           -- (terminated)
			in_error          => "0",                                            -- (terminated)
			out_error         => open,                                           -- (terminated)
			in_channel        => "0",                                            -- (terminated)
			out_channel       => open                                            -- (terminated)
		);

	router : component PCIE_HIP_FDAS_altera_merlin_router_1921_p3tohby_cmp
		port map (
			sink_ready         => intel_pcie_ptile_mcdma_0_rx_pio_master_agent_cp_ready,                               --      sink.ready
			sink_valid         => intel_pcie_ptile_mcdma_0_rx_pio_master_agent_cp_valid,                               --          .valid
			sink_data          => intel_pcie_ptile_mcdma_0_rx_pio_master_agent_cp_data,                                --          .data
			sink_startofpacket => intel_pcie_ptile_mcdma_0_rx_pio_master_agent_cp_startofpacket,                       --          .startofpacket
			sink_endofpacket   => intel_pcie_ptile_mcdma_0_rx_pio_master_agent_cp_endofpacket,                         --          .endofpacket
			clk                => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                --       clk.clk
			reset              => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_src_ready,                                                                    --       src.ready
			src_valid          => router_src_valid,                                                                    --          .valid
			src_data           => router_src_data,                                                                     --          .data
			src_channel        => router_src_channel,                                                                  --          .channel
			src_startofpacket  => router_src_startofpacket,                                                            --          .startofpacket
			src_endofpacket    => router_src_endofpacket                                                               --          .endofpacket
		);

	router_001 : component PCIE_HIP_FDAS_altera_merlin_router_1921_uygknla_cmp
		port map (
			sink_ready         => rxm_bar2_0_s0_agent_rp_ready,                                                        --      sink.ready
			sink_valid         => rxm_bar2_0_s0_agent_rp_valid,                                                        --          .valid
			sink_data          => rxm_bar2_0_s0_agent_rp_data,                                                         --          .data
			sink_startofpacket => rxm_bar2_0_s0_agent_rp_startofpacket,                                                --          .startofpacket
			sink_endofpacket   => rxm_bar2_0_s0_agent_rp_endofpacket,                                                  --          .endofpacket
			clk                => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                --       clk.clk
			reset              => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_001_src_ready,                                                                --       src.ready
			src_valid          => router_001_src_valid,                                                                --          .valid
			src_data           => router_001_src_data,                                                                 --          .data
			src_channel        => router_001_src_channel,                                                              --          .channel
			src_startofpacket  => router_001_src_startofpacket,                                                        --          .startofpacket
			src_endofpacket    => router_001_src_endofpacket                                                           --          .endofpacket
		);

	rxm_bar2_0_s0_burst_adapter : component PCIE_HIP_FDAS_altera_merlin_burst_adapter_1922_yda6ubq_cmp
		generic map (
			PKT_ADDR_H                => 99,
			PKT_ADDR_L                => 72,
			PKT_BEGIN_BURST           => 121,
			PKT_BYTE_CNT_H            => 112,
			PKT_BYTE_CNT_L            => 106,
			PKT_BYTEEN_H              => 71,
			PKT_BYTEEN_L              => 64,
			PKT_BURST_SIZE_H          => 116,
			PKT_BURST_SIZE_L          => 114,
			PKT_BURST_TYPE_H          => 118,
			PKT_BURST_TYPE_L          => 117,
			PKT_BURSTWRAP_H           => 113,
			PKT_BURSTWRAP_L           => 113,
			PKT_TRANS_COMPRESSED_READ => 100,
			PKT_TRANS_WRITE           => 102,
			PKT_TRANS_READ            => 103,
			OUT_NARROW_SIZE           => 0,
			IN_NARROW_SIZE            => 0,
			OUT_FIXED                 => 0,
			OUT_COMPLETE_WRAP         => 0,
			ST_DATA_W                 => 147,
			ST_CHANNEL_W              => 1,
			OUT_BYTE_CNT_H            => 109,
			OUT_BURSTWRAP_H           => 113,
			COMPRESSED_READ_SUPPORT   => 1,
			BYTEENABLE_SYNTHESIS      => 1,
			PIPE_INPUTS               => 0,
			NO_WRAP_SUPPORT           => 0,
			INCOMPLETE_WRAP_SUPPORT   => 0,
			BURSTWRAP_CONST_MASK      => 1,
			BURSTWRAP_CONST_VALUE     => 1,
			ADAPTER_VERSION           => "13.1",
			SYNC_RESET                => 1
		)
		port map (
			clk                   => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                --       cr0.clk
			reset                 => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_reset_reset_bridge_in_reset_reset, -- cr0_reset.reset
			sink0_valid           => cmd_mux_src_valid,                                                                   --     sink0.valid
			sink0_data            => cmd_mux_src_data,                                                                    --          .data
			sink0_channel         => cmd_mux_src_channel,                                                                 --          .channel
			sink0_startofpacket   => cmd_mux_src_startofpacket,                                                           --          .startofpacket
			sink0_endofpacket     => cmd_mux_src_endofpacket,                                                             --          .endofpacket
			sink0_ready           => cmd_mux_src_ready,                                                                   --          .ready
			source0_valid         => rxm_bar2_0_s0_burst_adapter_source0_valid,                                           --   source0.valid
			source0_data          => rxm_bar2_0_s0_burst_adapter_source0_data,                                            --          .data
			source0_channel       => rxm_bar2_0_s0_burst_adapter_source0_channel,                                         --          .channel
			source0_startofpacket => rxm_bar2_0_s0_burst_adapter_source0_startofpacket,                                   --          .startofpacket
			source0_endofpacket   => rxm_bar2_0_s0_burst_adapter_source0_endofpacket,                                     --          .endofpacket
			source0_ready         => rxm_bar2_0_s0_burst_adapter_source0_ready                                            --          .ready
		);

	cmd_demux : component PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_stkzihq_cmp
		port map (
			clk                => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                --       clk.clk
			reset              => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_src_ready,                                                                    --      sink.ready
			sink_channel       => router_src_channel,                                                                  --          .channel
			sink_data          => router_src_data,                                                                     --          .data
			sink_startofpacket => router_src_startofpacket,                                                            --          .startofpacket
			sink_endofpacket   => router_src_endofpacket,                                                              --          .endofpacket
			sink_valid(0)      => router_src_valid,                                                                    --          .valid
			src0_ready         => cmd_demux_src0_ready,                                                                --      src0.ready
			src0_valid         => cmd_demux_src0_valid,                                                                --          .valid
			src0_data          => cmd_demux_src0_data,                                                                 --          .data
			src0_channel       => cmd_demux_src0_channel,                                                              --          .channel
			src0_startofpacket => cmd_demux_src0_startofpacket,                                                        --          .startofpacket
			src0_endofpacket   => cmd_demux_src0_endofpacket                                                           --          .endofpacket
		);

	cmd_mux : component PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_zqlsx3q_cmp
		port map (
			clk                 => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                --       clk.clk
			reset               => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_src_ready,                                                                   --       src.ready
			src_valid           => cmd_mux_src_valid,                                                                   --          .valid
			src_data            => cmd_mux_src_data,                                                                    --          .data
			src_channel         => cmd_mux_src_channel,                                                                 --          .channel
			src_startofpacket   => cmd_mux_src_startofpacket,                                                           --          .startofpacket
			src_endofpacket     => cmd_mux_src_endofpacket,                                                             --          .endofpacket
			sink0_ready         => cmd_demux_src0_ready,                                                                --     sink0.ready
			sink0_valid         => cmd_demux_src0_valid,                                                                --          .valid
			sink0_channel       => cmd_demux_src0_channel,                                                              --          .channel
			sink0_data          => cmd_demux_src0_data,                                                                 --          .data
			sink0_startofpacket => cmd_demux_src0_startofpacket,                                                        --          .startofpacket
			sink0_endofpacket   => cmd_demux_src0_endofpacket                                                           --          .endofpacket
		);

	rsp_demux : component PCIE_HIP_FDAS_altera_merlin_demultiplexer_1921_stkzihq_cmp
		port map (
			clk                => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                --       clk.clk
			reset              => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_001_src_ready,                                                                --      sink.ready
			sink_channel       => router_001_src_channel,                                                              --          .channel
			sink_data          => router_001_src_data,                                                                 --          .data
			sink_startofpacket => router_001_src_startofpacket,                                                        --          .startofpacket
			sink_endofpacket   => router_001_src_endofpacket,                                                          --          .endofpacket
			sink_valid(0)      => router_001_src_valid,                                                                --          .valid
			src0_ready         => rsp_demux_src0_ready,                                                                --      src0.ready
			src0_valid         => rsp_demux_src0_valid,                                                                --          .valid
			src0_data          => rsp_demux_src0_data,                                                                 --          .data
			src0_channel       => rsp_demux_src0_channel,                                                              --          .channel
			src0_startofpacket => rsp_demux_src0_startofpacket,                                                        --          .startofpacket
			src0_endofpacket   => rsp_demux_src0_endofpacket                                                           --          .endofpacket
		);

	rsp_mux : component PCIE_HIP_FDAS_altera_merlin_multiplexer_1921_z42dfda_cmp
		port map (
			clk                 => intel_pcie_ptile_mcdma_0_app_clk_clk,                                                --       clk.clk
			reset               => intel_pcie_ptile_mcdma_0_rx_pio_master_translator_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => rsp_mux_src_ready,                                                                   --       src.ready
			src_valid           => rsp_mux_src_valid,                                                                   --          .valid
			src_data            => rsp_mux_src_data,                                                                    --          .data
			src_channel         => rsp_mux_src_channel,                                                                 --          .channel
			src_startofpacket   => rsp_mux_src_startofpacket,                                                           --          .startofpacket
			src_endofpacket     => rsp_mux_src_endofpacket,                                                             --          .endofpacket
			sink0_ready         => rsp_demux_src0_ready,                                                                --     sink0.ready
			sink0_valid         => rsp_demux_src0_valid,                                                                --          .valid
			sink0_channel       => rsp_demux_src0_channel,                                                              --          .channel
			sink0_data          => rsp_demux_src0_data,                                                                 --          .data
			sink0_startofpacket => rsp_demux_src0_startofpacket,                                                        --          .startofpacket
			sink0_endofpacket   => rsp_demux_src0_endofpacket                                                           --          .endofpacket
		);

end architecture rtl; -- of PCIE_HIP_FDAS_altera_mm_interconnect_1920_j5ntm2y
