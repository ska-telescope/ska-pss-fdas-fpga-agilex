-- ed_sim_local_reset_source.vhd

-- Generated using ACDS version 22.2 94

library IEEE;
library altera_emif_local_reset_sim_source_191;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ed_sim_local_reset_source is
	port (
		local_reset_req  : out std_logic;        --    local_reset_req.local_reset_req,  Signal from user logic to request the memory interface to be reset and recalibrated. Reset request is sent by transitioning the local_reset_req signal from low to high, then keeping the signal at the high state for a minimum of 2 EMIF core clock cycles, then transitioning the signal from high to low. local_reset_req is asynchronous in that there is no setup/hold timing to meet, but it must meet the minimum pulse width requirement of 2 EMIF core clock cycles.
		local_reset_done : in  std_logic := '0'  -- local_reset_status.local_reset_done, Signal from memory interface to indicate whether it has completed a reset sequence, is currently out of reset, and is ready for a new reset request.  When local_reset_done is low, the memory interface is in reset.
	);
end entity ed_sim_local_reset_source;

architecture rtl of ed_sim_local_reset_source is
	component altera_emif_local_reset_sim_source_cmp is
		port (
			local_reset_req  : out std_logic;        -- local_reset_req
			local_reset_done : in  std_logic := 'X'  -- local_reset_done
		);
	end component altera_emif_local_reset_sim_source_cmp;

	for local_reset_source : altera_emif_local_reset_sim_source_cmp
		use entity altera_emif_local_reset_sim_source_191.altera_emif_local_reset_sim_source;
begin

	local_reset_source : component altera_emif_local_reset_sim_source_cmp
		port map (
			local_reset_req  => local_reset_req,  --    local_reset_req.local_reset_req
			local_reset_done => local_reset_done  -- local_reset_status.local_reset_done
		);

end architecture rtl; -- of ed_sim_local_reset_source
